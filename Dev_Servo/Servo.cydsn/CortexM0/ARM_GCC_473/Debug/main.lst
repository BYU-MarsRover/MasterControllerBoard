ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.bss
  18              		.align	1
  19              	compareValue:
  20 0000 0000     		.space	2
  21              		.align	1
  22              	waitDelay:
  23 0002 0000     		.space	2
  24              		.align	1
  25              	timer:
  26 0004 0000     		.space	2
  27              	currState:
  28 0006 00       		.space	1
  29 0007 00       		.section	.text.main,"ax",%progbits
  30              		.align	2
  31              		.global	main
  32              		.code	16
  33              		.thumb_func
  34              		.type	main, %function
  35              	main:
  36              	.LFB33:
  37              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <project.h>
  13:.\main.c      **** #include <stdint.h>
  14:.\main.c      **** 
  15:.\main.c      **** // macros ------------------------------------------------
  16:.\main.c      **** #define ONE_SEC         40  // 1 sec - wait time at rest position
  17:.\main.c      **** #define WAIT_DELAY      30  // 750 ms - time for servo to move
  18:.\main.c      **** #define NEUTRAL         1500 // 1.5 ms pulse
  19:.\main.c      **** #define MAX_LEFT        1000 // 1 ms pulse
  20:.\main.c      **** #define MAX_RIGHT       2000 // 2 ms pulse
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 2


  21:.\main.c      **** 
  22:.\main.c      **** // global variables ------------------------------------
  23:.\main.c      **** static volatile uint16_t compareValue = 0;
  24:.\main.c      **** static volatile uint16_t waitDelay = 0;
  25:.\main.c      **** static volatile uint16_t timer = 0;
  26:.\main.c      **** static volatile enum servoStates { init, rest, moveServo,
  27:.\main.c      ****     delay } currState = init;
  28:.\main.c      **** 
  29:.\main.c      **** 
  30:.\main.c      **** // function prototypes ----------------------------------
  31:.\main.c      **** static void servoTick();
  32:.\main.c      **** static void my_putchar(void*, char);//(void* p, char c);
  33:.\main.c      **** 
  34:.\main.c      **** int main()
  35:.\main.c      **** {
  38              		.loc 1 35 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  48              	.L2:
  36:.\main.c      ****     /* CyGlobalIntEnable; */ /* Uncomment this line to enable global interrupts. */
  37:.\main.c      **** 
  38:.\main.c      ****     for(;;)
  39:.\main.c      ****     {
  40:.\main.c      ****         servoTick(); // write servo 
  49              		.loc 1 40 0 discriminator 1
  50 0004 FFF7FEFF 		bl	servoTick
  41:.\main.c      ****         CyDelay(25); // delay 25 ms
  51              		.loc 1 41 0 discriminator 1
  52 0008 1920     		mov	r0, #25
  53 000a FFF7FEFF 		bl	CyDelay
  42:.\main.c      ****     }
  54              		.loc 1 42 0 discriminator 1
  55 000e F9E7     		b	.L2
  56              		.cfi_endproc
  57              	.LFE33:
  58              		.size	main, .-main
  59              		.section	.text.servoTick,"ax",%progbits
  60              		.align	2
  61              		.code	16
  62              		.thumb_func
  63              		.type	servoTick, %function
  64              	servoTick:
  65              	.LFB34:
  43:.\main.c      **** }
  44:.\main.c      **** 
  45:.\main.c      **** 
  46:.\main.c      **** // state machine
  47:.\main.c      **** void servoTick()
  48:.\main.c      **** {
  66              		.loc 1 48 0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 3


  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 00AF     		add	r7, sp, #0
  74              	.LCFI3:
  75              		.cfi_def_cfa_register 7
  49:.\main.c      ****     switch(currState)
  76              		.loc 1 49 0
  77 0004 3C4B     		ldr	r3, .L18
  78 0006 1B78     		ldrb	r3, [r3]
  79 0008 DBB2     		uxtb	r3, r3
  80 000a 012B     		cmp	r3, #1
  81 000c 1FD0     		beq	.L6
  82 000e 02DC     		bgt	.L9
  83 0010 002B     		cmp	r3, #0
  84 0012 05D0     		beq	.L5
  85 0014 60E0     		b	.L4
  86              	.L9:
  87 0016 022B     		cmp	r3, #2
  88 0018 29D0     		beq	.L7
  89 001a 032B     		cmp	r3, #3
  90 001c 3ED0     		beq	.L8
  91 001e 5BE0     		b	.L4
  92              	.L5:
  50:.\main.c      ****     {
  51:.\main.c      ****     case init:
  52:.\main.c      ****         // initialize PWM module
  53:.\main.c      ****         servoClock_Start();
  93              		.loc 1 53 0
  94 0020 FFF7FEFF 		bl	servoClock_Start
  54:.\main.c      ****         PWM_1_Start();
  95              		.loc 1 54 0
  96 0024 FFF7FEFF 		bl	PWM_1_Start
  55:.\main.c      ****         init_printf(NULL,my_putchar);
  97              		.loc 1 55 0
  98 0028 344B     		ldr	r3, .L18+4
  99 002a 0020     		mov	r0, #0
 100 002c 191C     		mov	r1, r3
 101 002e FFF7FEFF 		bl	init_printf
  56:.\main.c      ****         //UART_1_Start();        
  57:.\main.c      ****         timer = ONE_SEC;
 102              		.loc 1 57 0
 103 0032 334B     		ldr	r3, .L18+8
 104 0034 2822     		mov	r2, #40
 105 0036 1A80     		strh	r2, [r3]
  58:.\main.c      ****         waitDelay = WAIT_DELAY;
 106              		.loc 1 58 0
 107 0038 324B     		ldr	r3, .L18+12
 108 003a 1E22     		mov	r2, #30
 109 003c 1A80     		strh	r2, [r3]
  59:.\main.c      ****         compareValue = MAX_LEFT;
 110              		.loc 1 59 0
 111 003e 324B     		ldr	r3, .L18+16
 112 0040 FA22     		mov	r2, #250
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 4


 113 0042 9200     		lsl	r2, r2, #2
 114 0044 1A80     		strh	r2, [r3]
  60:.\main.c      ****         currState = rest; // go to rest state
 115              		.loc 1 60 0
 116 0046 2C4B     		ldr	r3, .L18
 117 0048 0122     		mov	r2, #1
 118 004a 1A70     		strb	r2, [r3]
  61:.\main.c      ****         break;
 119              		.loc 1 61 0
 120 004c 4BE0     		b	.L10
 121              	.L6:
  62:.\main.c      ****     case rest:
  63:.\main.c      ****         timer--; // wait for 1 second
 122              		.loc 1 63 0
 123 004e 2C4B     		ldr	r3, .L18+8
 124 0050 1B88     		ldrh	r3, [r3]
 125 0052 9BB2     		uxth	r3, r3
 126 0054 013B     		sub	r3, r3, #1
 127 0056 9AB2     		uxth	r2, r3
 128 0058 294B     		ldr	r3, .L18+8
 129 005a 1A80     		strh	r2, [r3]
  64:.\main.c      ****         if (timer == 0) // move servo after 1 second
 130              		.loc 1 64 0
 131 005c 284B     		ldr	r3, .L18+8
 132 005e 1B88     		ldrh	r3, [r3]
 133 0060 9BB2     		uxth	r3, r3
 134 0062 002B     		cmp	r3, #0
 135 0064 3CD1     		bne	.L16
  65:.\main.c      ****         {
  66:.\main.c      ****             currState = moveServo;
 136              		.loc 1 66 0
 137 0066 244B     		ldr	r3, .L18
 138 0068 0222     		mov	r2, #2
 139 006a 1A70     		strb	r2, [r3]
  67:.\main.c      ****         }
  68:.\main.c      ****         break;
 140              		.loc 1 68 0
 141 006c 38E0     		b	.L16
 142              	.L7:
  69:.\main.c      ****     case moveServo:
  70:.\main.c      ****         if (compareValue == MAX_LEFT)
 143              		.loc 1 70 0
 144 006e 264B     		ldr	r3, .L18+16
 145 0070 1B88     		ldrh	r3, [r3]
 146 0072 9AB2     		uxth	r2, r3
 147 0074 FA23     		mov	r3, #250
 148 0076 9B00     		lsl	r3, r3, #2
 149 0078 9A42     		cmp	r2, r3
 150 007a 04D1     		bne	.L12
  71:.\main.c      ****         { // move it right if it's at left position
  72:.\main.c      ****             compareValue = MAX_RIGHT;
 151              		.loc 1 72 0
 152 007c 224B     		ldr	r3, .L18+16
 153 007e FA22     		mov	r2, #250
 154 0080 D200     		lsl	r2, r2, #3
 155 0082 1A80     		strh	r2, [r3]
 156 0084 03E0     		b	.L13
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 5


 157              	.L12:
  73:.\main.c      ****             
  74:.\main.c      ****         }
  75:.\main.c      ****         else
  76:.\main.c      ****         { // move it left if it's at right position
  77:.\main.c      ****             compareValue = MAX_LEFT;
 158              		.loc 1 77 0
 159 0086 204B     		ldr	r3, .L18+16
 160 0088 FA22     		mov	r2, #250
 161 008a 9200     		lsl	r2, r2, #2
 162 008c 1A80     		strh	r2, [r3]
 163              	.L13:
  78:.\main.c      ****         }
  79:.\main.c      ****         waitDelay = WAIT_DELAY; 
 164              		.loc 1 79 0
 165 008e 1D4B     		ldr	r3, .L18+12
 166 0090 1E22     		mov	r2, #30
 167 0092 1A80     		strh	r2, [r3]
  80:.\main.c      ****         currState = delay; // go to delay state (wait for servo to get to next position)
 168              		.loc 1 80 0
 169 0094 184B     		ldr	r3, .L18
 170 0096 0322     		mov	r2, #3
 171 0098 1A70     		strb	r2, [r3]
  81:.\main.c      ****         break;
 172              		.loc 1 81 0
 173 009a 24E0     		b	.L10
 174              	.L8:
  82:.\main.c      ****     case delay:
  83:.\main.c      ****         waitDelay--;
 175              		.loc 1 83 0
 176 009c 194B     		ldr	r3, .L18+12
 177 009e 1B88     		ldrh	r3, [r3]
 178 00a0 9BB2     		uxth	r3, r3
 179 00a2 013B     		sub	r3, r3, #1
 180 00a4 9AB2     		uxth	r2, r3
 181 00a6 174B     		ldr	r3, .L18+12
 182 00a8 1A80     		strh	r2, [r3]
  84:.\main.c      ****         if (waitDelay == 0)
 183              		.loc 1 84 0
 184 00aa 164B     		ldr	r3, .L18+12
 185 00ac 1B88     		ldrh	r3, [r3]
 186 00ae 9BB2     		uxth	r3, r3
 187 00b0 002B     		cmp	r3, #0
 188 00b2 17D1     		bne	.L17
  85:.\main.c      ****         { // if we've delayed long enough
  86:.\main.c      ****             if (compareValue == MAX_LEFT)
 189              		.loc 1 86 0
 190 00b4 144B     		ldr	r3, .L18+16
 191 00b6 1B88     		ldrh	r3, [r3]
 192 00b8 9AB2     		uxth	r2, r3
 193 00ba FA23     		mov	r3, #250
 194 00bc 9B00     		lsl	r3, r3, #2
 195 00be 9A42     		cmp	r2, r3
 196 00c0 06D1     		bne	.L15
  87:.\main.c      ****             {
  88:.\main.c      ****                 currState = rest; // go to rest state
 197              		.loc 1 88 0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 6


 198 00c2 0D4B     		ldr	r3, .L18
 199 00c4 0122     		mov	r2, #1
 200 00c6 1A70     		strb	r2, [r3]
  89:.\main.c      ****                 timer = ONE_SEC; // reset one second timer
 201              		.loc 1 89 0
 202 00c8 0D4B     		ldr	r3, .L18+8
 203 00ca 2822     		mov	r2, #40
 204 00cc 1A80     		strh	r2, [r3]
  90:.\main.c      ****             }
  91:.\main.c      ****             else
  92:.\main.c      ****             {
  93:.\main.c      ****                 currState = moveServo; // move servo back
  94:.\main.c      ****             }
  95:.\main.c      ****         }
  96:.\main.c      ****         break;
 205              		.loc 1 96 0
 206 00ce 09E0     		b	.L17
 207              	.L15:
  93:.\main.c      ****                 currState = moveServo; // move servo back
 208              		.loc 1 93 0
 209 00d0 094B     		ldr	r3, .L18
 210 00d2 0222     		mov	r2, #2
 211 00d4 1A70     		strb	r2, [r3]
 212              		.loc 1 96 0
 213 00d6 05E0     		b	.L17
 214              	.L4:
  97:.\main.c      ****     default: // shouldn't ever get here!
  98:.\main.c      ****         currState = init; // reset to init state if we do get here
 215              		.loc 1 98 0
 216 00d8 074B     		ldr	r3, .L18
 217 00da 0022     		mov	r2, #0
 218 00dc 1A70     		strb	r2, [r3]
  99:.\main.c      ****         break;
 219              		.loc 1 99 0
 220 00de 02E0     		b	.L10
 221              	.L16:
  68:.\main.c      ****         break;
 222              		.loc 1 68 0
 223 00e0 C046     		mov	r8, r8
 224 00e2 00E0     		b	.L10
 225              	.L17:
  96:.\main.c      ****         break;
 226              		.loc 1 96 0
 227 00e4 C046     		mov	r8, r8
 228              	.L10:
 100:.\main.c      ****     }
 101:.\main.c      ****     PWM_1_WriteCompare(compareValue); // write servo position every time we get called
 229              		.loc 1 101 0
 230 00e6 084B     		ldr	r3, .L18+16
 231 00e8 1B88     		ldrh	r3, [r3]
 232 00ea 9BB2     		uxth	r3, r3
 233 00ec 181C     		mov	r0, r3
 234 00ee FFF7FEFF 		bl	PWM_1_WriteCompare
 102:.\main.c      **** }
 235              		.loc 1 102 0
 236 00f2 BD46     		mov	sp, r7
 237              		@ sp needed for prologue
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 7


 238 00f4 80BD     		pop	{r7, pc}
 239              	.L19:
 240 00f6 C046     		.align	2
 241              	.L18:
 242 00f8 06000000 		.word	currState
 243 00fc 00000000 		.word	my_putchar
 244 0100 04000000 		.word	timer
 245 0104 02000000 		.word	waitDelay
 246 0108 00000000 		.word	compareValue
 247              		.cfi_endproc
 248              	.LFE34:
 249              		.size	servoTick, .-servoTick
 250              		.section	.text.my_putchar,"ax",%progbits
 251              		.align	2
 252              		.code	16
 253              		.thumb_func
 254              		.type	my_putchar, %function
 255              	my_putchar:
 256              	.LFB35:
 103:.\main.c      **** 
 104:.\main.c      **** void my_putchar ( void* p, char c)
 105:.\main.c      **** {
 257              		.loc 1 105 0
 258              		.cfi_startproc
 259 0000 80B5     		push	{r7, lr}
 260              	.LCFI4:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 82B0     		sub	sp, sp, #8
 265              	.LCFI5:
 266              		.cfi_def_cfa_offset 16
 267 0004 00AF     		add	r7, sp, #0
 268              	.LCFI6:
 269              		.cfi_def_cfa_register 7
 270 0006 7860     		str	r0, [r7, #4]
 271 0008 0A1C     		mov	r2, r1
 272 000a FB1C     		add	r3, r7, #3
 273 000c 1A70     		strb	r2, [r3]
 106:.\main.c      ****     // if buffer not full
 107:.\main.c      ****     // put char c into buffer
 108:.\main.c      ****     
 109:.\main.c      **** }
 274              		.loc 1 109 0
 275 000e BD46     		mov	sp, r7
 276 0010 02B0     		add	sp, sp, #8
 277              		@ sp needed for prologue
 278 0012 80BD     		pop	{r7, pc}
 279              		.cfi_endproc
 280              	.LFE35:
 281              		.size	my_putchar, .-my_putchar
 282              		.text
 283              	.Letext0:
 284              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.0\\psoc creator\\import\\gnu_cs\\arm\\4
 285              		.section	.debug_info,"",%progbits
 286              	.Ldebug_info0:
 287 0000 67010000 		.4byte	0x167
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 8


 288 0004 0200     		.2byte	0x2
 289 0006 00000000 		.4byte	.Ldebug_abbrev0
 290 000a 04       		.byte	0x4
 291 000b 01       		.uleb128 0x1
 292 000c 36010000 		.4byte	.LASF21
 293 0010 01       		.byte	0x1
 294 0011 B6000000 		.4byte	.LASF22
 295 0015 4D000000 		.4byte	.LASF23
 296 0019 00000000 		.4byte	.Ldebug_ranges0+0
 297 001d 00000000 		.4byte	0
 298 0021 00000000 		.4byte	0
 299 0025 00000000 		.4byte	.Ldebug_line0
 300 0029 02       		.uleb128 0x2
 301 002a 01       		.byte	0x1
 302 002b 06       		.byte	0x6
 303 002c 92010000 		.4byte	.LASF0
 304 0030 02       		.uleb128 0x2
 305 0031 01       		.byte	0x1
 306 0032 08       		.byte	0x8
 307 0033 2C000000 		.4byte	.LASF1
 308 0037 02       		.uleb128 0x2
 309 0038 02       		.byte	0x2
 310 0039 05       		.byte	0x5
 311 003a 23010000 		.4byte	.LASF2
 312 003e 03       		.uleb128 0x3
 313 003f 2D010000 		.4byte	.LASF24
 314 0043 02       		.byte	0x2
 315 0044 36       		.byte	0x36
 316 0045 49000000 		.4byte	0x49
 317 0049 02       		.uleb128 0x2
 318 004a 02       		.byte	0x2
 319 004b 07       		.byte	0x7
 320 004c 9C000000 		.4byte	.LASF3
 321 0050 02       		.uleb128 0x2
 322 0051 04       		.byte	0x4
 323 0052 05       		.byte	0x5
 324 0053 89010000 		.4byte	.LASF4
 325 0057 02       		.uleb128 0x2
 326 0058 04       		.byte	0x4
 327 0059 07       		.byte	0x7
 328 005a 8A000000 		.4byte	.LASF5
 329 005e 02       		.uleb128 0x2
 330 005f 08       		.byte	0x8
 331 0060 05       		.byte	0x5
 332 0061 10010000 		.4byte	.LASF6
 333 0065 02       		.uleb128 0x2
 334 0066 08       		.byte	0x8
 335 0067 07       		.byte	0x7
 336 0068 DC000000 		.4byte	.LASF7
 337 006c 04       		.uleb128 0x4
 338 006d 04       		.byte	0x4
 339 006e 05       		.byte	0x5
 340 006f 696E7400 		.ascii	"int\000"
 341 0073 02       		.uleb128 0x2
 342 0074 04       		.byte	0x4
 343 0075 07       		.byte	0x7
 344 0076 C4000000 		.4byte	.LASF8
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 9


 345 007a 02       		.uleb128 0x2
 346 007b 04       		.byte	0x4
 347 007c 04       		.byte	0x4
 348 007d 20000000 		.4byte	.LASF9
 349 0081 02       		.uleb128 0x2
 350 0082 08       		.byte	0x8
 351 0083 04       		.byte	0x4
 352 0084 AF000000 		.4byte	.LASF10
 353 0088 02       		.uleb128 0x2
 354 0089 01       		.byte	0x1
 355 008a 08       		.byte	0x8
 356 008b 1E010000 		.4byte	.LASF11
 357 008f 02       		.uleb128 0x2
 358 0090 04       		.byte	0x4
 359 0091 07       		.byte	0x7
 360 0092 07010000 		.4byte	.LASF12
 361 0096 05       		.uleb128 0x5
 362 0097 04       		.byte	0x4
 363 0098 06       		.uleb128 0x6
 364 0099 0A000000 		.4byte	.LASF25
 365 009d 01       		.byte	0x1
 366 009e 01       		.byte	0x1
 367 009f 1A       		.byte	0x1a
 368 00a0 BD000000 		.4byte	0xbd
 369 00a4 07       		.uleb128 0x7
 370 00a5 1B000000 		.4byte	.LASF13
 371 00a9 00       		.sleb128 0
 372 00aa 07       		.uleb128 0x7
 373 00ab 16000000 		.4byte	.LASF14
 374 00af 01       		.sleb128 1
 375 00b0 07       		.uleb128 0x7
 376 00b1 FD000000 		.4byte	.LASF15
 377 00b5 02       		.sleb128 2
 378 00b6 07       		.uleb128 0x7
 379 00b7 26000000 		.4byte	.LASF16
 380 00bb 03       		.sleb128 3
 381 00bc 00       		.byte	0
 382 00bd 08       		.uleb128 0x8
 383 00be 01       		.byte	0x1
 384 00bf BF000000 		.4byte	.LASF26
 385 00c3 01       		.byte	0x1
 386 00c4 22       		.byte	0x22
 387 00c5 6C000000 		.4byte	0x6c
 388 00c9 00000000 		.4byte	.LFB33
 389 00cd 10000000 		.4byte	.LFE33
 390 00d1 00000000 		.4byte	.LLST0
 391 00d5 01       		.byte	0x1
 392 00d6 09       		.uleb128 0x9
 393 00d7 7F010000 		.4byte	.LASF27
 394 00db 01       		.byte	0x1
 395 00dc 2F       		.byte	0x2f
 396 00dd 00000000 		.4byte	.LFB34
 397 00e1 0C010000 		.4byte	.LFE34
 398 00e5 2C000000 		.4byte	.LLST1
 399 00e9 01       		.byte	0x1
 400 00ea 0A       		.uleb128 0xa
 401 00eb D1000000 		.4byte	.LASF28
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 10


 402 00ef 01       		.byte	0x1
 403 00f0 68       		.byte	0x68
 404 00f1 01       		.byte	0x1
 405 00f2 00000000 		.4byte	.LFB35
 406 00f6 14000000 		.4byte	.LFE35
 407 00fa 58000000 		.4byte	.LLST2
 408 00fe 01       		.byte	0x1
 409 00ff 1C010000 		.4byte	0x11c
 410 0103 0B       		.uleb128 0xb
 411 0104 7000     		.ascii	"p\000"
 412 0106 01       		.byte	0x1
 413 0107 68       		.byte	0x68
 414 0108 96000000 		.4byte	0x96
 415 010c 02       		.byte	0x2
 416 010d 91       		.byte	0x91
 417 010e 74       		.sleb128 -12
 418 010f 0B       		.uleb128 0xb
 419 0110 6300     		.ascii	"c\000"
 420 0112 01       		.byte	0x1
 421 0113 68       		.byte	0x68
 422 0114 88000000 		.4byte	0x88
 423 0118 02       		.byte	0x2
 424 0119 91       		.byte	0x91
 425 011a 73       		.sleb128 -13
 426 011b 00       		.byte	0
 427 011c 0C       		.uleb128 0xc
 428 011d 3A000000 		.4byte	.LASF17
 429 0121 01       		.byte	0x1
 430 0122 17       		.byte	0x17
 431 0123 2D010000 		.4byte	0x12d
 432 0127 05       		.byte	0x5
 433 0128 03       		.byte	0x3
 434 0129 00000000 		.4byte	compareValue
 435 012d 0D       		.uleb128 0xd
 436 012e 3E000000 		.4byte	0x3e
 437 0132 0C       		.uleb128 0xc
 438 0133 00000000 		.4byte	.LASF18
 439 0137 01       		.byte	0x1
 440 0138 18       		.byte	0x18
 441 0139 2D010000 		.4byte	0x12d
 442 013d 05       		.byte	0x5
 443 013e 03       		.byte	0x3
 444 013f 02000000 		.4byte	waitDelay
 445 0143 0C       		.uleb128 0xc
 446 0144 47000000 		.4byte	.LASF19
 447 0148 01       		.byte	0x1
 448 0149 19       		.byte	0x19
 449 014a 2D010000 		.4byte	0x12d
 450 014e 05       		.byte	0x5
 451 014f 03       		.byte	0x3
 452 0150 04000000 		.4byte	timer
 453 0154 0C       		.uleb128 0xc
 454 0155 F3000000 		.4byte	.LASF20
 455 0159 01       		.byte	0x1
 456 015a 1B       		.byte	0x1b
 457 015b 65010000 		.4byte	0x165
 458 015f 05       		.byte	0x5
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 11


 459 0160 03       		.byte	0x3
 460 0161 06000000 		.4byte	currState
 461 0165 0D       		.uleb128 0xd
 462 0166 98000000 		.4byte	0x98
 463 016a 00       		.byte	0
 464              		.section	.debug_abbrev,"",%progbits
 465              	.Ldebug_abbrev0:
 466 0000 01       		.uleb128 0x1
 467 0001 11       		.uleb128 0x11
 468 0002 01       		.byte	0x1
 469 0003 25       		.uleb128 0x25
 470 0004 0E       		.uleb128 0xe
 471 0005 13       		.uleb128 0x13
 472 0006 0B       		.uleb128 0xb
 473 0007 03       		.uleb128 0x3
 474 0008 0E       		.uleb128 0xe
 475 0009 1B       		.uleb128 0x1b
 476 000a 0E       		.uleb128 0xe
 477 000b 55       		.uleb128 0x55
 478 000c 06       		.uleb128 0x6
 479 000d 11       		.uleb128 0x11
 480 000e 01       		.uleb128 0x1
 481 000f 52       		.uleb128 0x52
 482 0010 01       		.uleb128 0x1
 483 0011 10       		.uleb128 0x10
 484 0012 06       		.uleb128 0x6
 485 0013 00       		.byte	0
 486 0014 00       		.byte	0
 487 0015 02       		.uleb128 0x2
 488 0016 24       		.uleb128 0x24
 489 0017 00       		.byte	0
 490 0018 0B       		.uleb128 0xb
 491 0019 0B       		.uleb128 0xb
 492 001a 3E       		.uleb128 0x3e
 493 001b 0B       		.uleb128 0xb
 494 001c 03       		.uleb128 0x3
 495 001d 0E       		.uleb128 0xe
 496 001e 00       		.byte	0
 497 001f 00       		.byte	0
 498 0020 03       		.uleb128 0x3
 499 0021 16       		.uleb128 0x16
 500 0022 00       		.byte	0
 501 0023 03       		.uleb128 0x3
 502 0024 0E       		.uleb128 0xe
 503 0025 3A       		.uleb128 0x3a
 504 0026 0B       		.uleb128 0xb
 505 0027 3B       		.uleb128 0x3b
 506 0028 0B       		.uleb128 0xb
 507 0029 49       		.uleb128 0x49
 508 002a 13       		.uleb128 0x13
 509 002b 00       		.byte	0
 510 002c 00       		.byte	0
 511 002d 04       		.uleb128 0x4
 512 002e 24       		.uleb128 0x24
 513 002f 00       		.byte	0
 514 0030 0B       		.uleb128 0xb
 515 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 12


 516 0032 3E       		.uleb128 0x3e
 517 0033 0B       		.uleb128 0xb
 518 0034 03       		.uleb128 0x3
 519 0035 08       		.uleb128 0x8
 520 0036 00       		.byte	0
 521 0037 00       		.byte	0
 522 0038 05       		.uleb128 0x5
 523 0039 0F       		.uleb128 0xf
 524 003a 00       		.byte	0
 525 003b 0B       		.uleb128 0xb
 526 003c 0B       		.uleb128 0xb
 527 003d 00       		.byte	0
 528 003e 00       		.byte	0
 529 003f 06       		.uleb128 0x6
 530 0040 04       		.uleb128 0x4
 531 0041 01       		.byte	0x1
 532 0042 03       		.uleb128 0x3
 533 0043 0E       		.uleb128 0xe
 534 0044 0B       		.uleb128 0xb
 535 0045 0B       		.uleb128 0xb
 536 0046 3A       		.uleb128 0x3a
 537 0047 0B       		.uleb128 0xb
 538 0048 3B       		.uleb128 0x3b
 539 0049 0B       		.uleb128 0xb
 540 004a 01       		.uleb128 0x1
 541 004b 13       		.uleb128 0x13
 542 004c 00       		.byte	0
 543 004d 00       		.byte	0
 544 004e 07       		.uleb128 0x7
 545 004f 28       		.uleb128 0x28
 546 0050 00       		.byte	0
 547 0051 03       		.uleb128 0x3
 548 0052 0E       		.uleb128 0xe
 549 0053 1C       		.uleb128 0x1c
 550 0054 0D       		.uleb128 0xd
 551 0055 00       		.byte	0
 552 0056 00       		.byte	0
 553 0057 08       		.uleb128 0x8
 554 0058 2E       		.uleb128 0x2e
 555 0059 00       		.byte	0
 556 005a 3F       		.uleb128 0x3f
 557 005b 0C       		.uleb128 0xc
 558 005c 03       		.uleb128 0x3
 559 005d 0E       		.uleb128 0xe
 560 005e 3A       		.uleb128 0x3a
 561 005f 0B       		.uleb128 0xb
 562 0060 3B       		.uleb128 0x3b
 563 0061 0B       		.uleb128 0xb
 564 0062 49       		.uleb128 0x49
 565 0063 13       		.uleb128 0x13
 566 0064 11       		.uleb128 0x11
 567 0065 01       		.uleb128 0x1
 568 0066 12       		.uleb128 0x12
 569 0067 01       		.uleb128 0x1
 570 0068 40       		.uleb128 0x40
 571 0069 06       		.uleb128 0x6
 572 006a 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 13


 573 006c 0C       		.uleb128 0xc
 574 006d 00       		.byte	0
 575 006e 00       		.byte	0
 576 006f 09       		.uleb128 0x9
 577 0070 2E       		.uleb128 0x2e
 578 0071 00       		.byte	0
 579 0072 03       		.uleb128 0x3
 580 0073 0E       		.uleb128 0xe
 581 0074 3A       		.uleb128 0x3a
 582 0075 0B       		.uleb128 0xb
 583 0076 3B       		.uleb128 0x3b
 584 0077 0B       		.uleb128 0xb
 585 0078 11       		.uleb128 0x11
 586 0079 01       		.uleb128 0x1
 587 007a 12       		.uleb128 0x12
 588 007b 01       		.uleb128 0x1
 589 007c 40       		.uleb128 0x40
 590 007d 06       		.uleb128 0x6
 591 007e 9642     		.uleb128 0x2116
 592 0080 0C       		.uleb128 0xc
 593 0081 00       		.byte	0
 594 0082 00       		.byte	0
 595 0083 0A       		.uleb128 0xa
 596 0084 2E       		.uleb128 0x2e
 597 0085 01       		.byte	0x1
 598 0086 03       		.uleb128 0x3
 599 0087 0E       		.uleb128 0xe
 600 0088 3A       		.uleb128 0x3a
 601 0089 0B       		.uleb128 0xb
 602 008a 3B       		.uleb128 0x3b
 603 008b 0B       		.uleb128 0xb
 604 008c 27       		.uleb128 0x27
 605 008d 0C       		.uleb128 0xc
 606 008e 11       		.uleb128 0x11
 607 008f 01       		.uleb128 0x1
 608 0090 12       		.uleb128 0x12
 609 0091 01       		.uleb128 0x1
 610 0092 40       		.uleb128 0x40
 611 0093 06       		.uleb128 0x6
 612 0094 9742     		.uleb128 0x2117
 613 0096 0C       		.uleb128 0xc
 614 0097 01       		.uleb128 0x1
 615 0098 13       		.uleb128 0x13
 616 0099 00       		.byte	0
 617 009a 00       		.byte	0
 618 009b 0B       		.uleb128 0xb
 619 009c 05       		.uleb128 0x5
 620 009d 00       		.byte	0
 621 009e 03       		.uleb128 0x3
 622 009f 08       		.uleb128 0x8
 623 00a0 3A       		.uleb128 0x3a
 624 00a1 0B       		.uleb128 0xb
 625 00a2 3B       		.uleb128 0x3b
 626 00a3 0B       		.uleb128 0xb
 627 00a4 49       		.uleb128 0x49
 628 00a5 13       		.uleb128 0x13
 629 00a6 02       		.uleb128 0x2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 14


 630 00a7 0A       		.uleb128 0xa
 631 00a8 00       		.byte	0
 632 00a9 00       		.byte	0
 633 00aa 0C       		.uleb128 0xc
 634 00ab 34       		.uleb128 0x34
 635 00ac 00       		.byte	0
 636 00ad 03       		.uleb128 0x3
 637 00ae 0E       		.uleb128 0xe
 638 00af 3A       		.uleb128 0x3a
 639 00b0 0B       		.uleb128 0xb
 640 00b1 3B       		.uleb128 0x3b
 641 00b2 0B       		.uleb128 0xb
 642 00b3 49       		.uleb128 0x49
 643 00b4 13       		.uleb128 0x13
 644 00b5 02       		.uleb128 0x2
 645 00b6 0A       		.uleb128 0xa
 646 00b7 00       		.byte	0
 647 00b8 00       		.byte	0
 648 00b9 0D       		.uleb128 0xd
 649 00ba 35       		.uleb128 0x35
 650 00bb 00       		.byte	0
 651 00bc 49       		.uleb128 0x49
 652 00bd 13       		.uleb128 0x13
 653 00be 00       		.byte	0
 654 00bf 00       		.byte	0
 655 00c0 00       		.byte	0
 656              		.section	.debug_loc,"",%progbits
 657              	.Ldebug_loc0:
 658              	.LLST0:
 659 0000 00000000 		.4byte	.LFB33
 660 0004 02000000 		.4byte	.LCFI0
 661 0008 0200     		.2byte	0x2
 662 000a 7D       		.byte	0x7d
 663 000b 00       		.sleb128 0
 664 000c 02000000 		.4byte	.LCFI0
 665 0010 04000000 		.4byte	.LCFI1
 666 0014 0200     		.2byte	0x2
 667 0016 7D       		.byte	0x7d
 668 0017 08       		.sleb128 8
 669 0018 04000000 		.4byte	.LCFI1
 670 001c 10000000 		.4byte	.LFE33
 671 0020 0200     		.2byte	0x2
 672 0022 77       		.byte	0x77
 673 0023 08       		.sleb128 8
 674 0024 00000000 		.4byte	0
 675 0028 00000000 		.4byte	0
 676              	.LLST1:
 677 002c 00000000 		.4byte	.LFB34
 678 0030 02000000 		.4byte	.LCFI2
 679 0034 0200     		.2byte	0x2
 680 0036 7D       		.byte	0x7d
 681 0037 00       		.sleb128 0
 682 0038 02000000 		.4byte	.LCFI2
 683 003c 04000000 		.4byte	.LCFI3
 684 0040 0200     		.2byte	0x2
 685 0042 7D       		.byte	0x7d
 686 0043 08       		.sleb128 8
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 15


 687 0044 04000000 		.4byte	.LCFI3
 688 0048 0C010000 		.4byte	.LFE34
 689 004c 0200     		.2byte	0x2
 690 004e 77       		.byte	0x77
 691 004f 08       		.sleb128 8
 692 0050 00000000 		.4byte	0
 693 0054 00000000 		.4byte	0
 694              	.LLST2:
 695 0058 00000000 		.4byte	.LFB35
 696 005c 02000000 		.4byte	.LCFI4
 697 0060 0200     		.2byte	0x2
 698 0062 7D       		.byte	0x7d
 699 0063 00       		.sleb128 0
 700 0064 02000000 		.4byte	.LCFI4
 701 0068 04000000 		.4byte	.LCFI5
 702 006c 0200     		.2byte	0x2
 703 006e 7D       		.byte	0x7d
 704 006f 08       		.sleb128 8
 705 0070 04000000 		.4byte	.LCFI5
 706 0074 06000000 		.4byte	.LCFI6
 707 0078 0200     		.2byte	0x2
 708 007a 7D       		.byte	0x7d
 709 007b 10       		.sleb128 16
 710 007c 06000000 		.4byte	.LCFI6
 711 0080 14000000 		.4byte	.LFE35
 712 0084 0200     		.2byte	0x2
 713 0086 77       		.byte	0x77
 714 0087 10       		.sleb128 16
 715 0088 00000000 		.4byte	0
 716 008c 00000000 		.4byte	0
 717              		.section	.debug_aranges,"",%progbits
 718 0000 2C000000 		.4byte	0x2c
 719 0004 0200     		.2byte	0x2
 720 0006 00000000 		.4byte	.Ldebug_info0
 721 000a 04       		.byte	0x4
 722 000b 00       		.byte	0
 723 000c 0000     		.2byte	0
 724 000e 0000     		.2byte	0
 725 0010 00000000 		.4byte	.LFB33
 726 0014 10000000 		.4byte	.LFE33-.LFB33
 727 0018 00000000 		.4byte	.LFB34
 728 001c 0C010000 		.4byte	.LFE34-.LFB34
 729 0020 00000000 		.4byte	.LFB35
 730 0024 14000000 		.4byte	.LFE35-.LFB35
 731 0028 00000000 		.4byte	0
 732 002c 00000000 		.4byte	0
 733              		.section	.debug_ranges,"",%progbits
 734              	.Ldebug_ranges0:
 735 0000 00000000 		.4byte	.LFB33
 736 0004 10000000 		.4byte	.LFE33
 737 0008 00000000 		.4byte	.LFB34
 738 000c 0C010000 		.4byte	.LFE34
 739 0010 00000000 		.4byte	.LFB35
 740 0014 14000000 		.4byte	.LFE35
 741 0018 00000000 		.4byte	0
 742 001c 00000000 		.4byte	0
 743              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 16


 744              	.Ldebug_line0:
 745 0000 2E010000 		.section	.debug_str,"MS",%progbits,1
 745      0200C500 
 745      00000201 
 745      FB0E0D00 
 745      01010101 
 746              	.LASF18:
 747 0000 77616974 		.ascii	"waitDelay\000"
 747      44656C61 
 747      7900
 748              	.LASF25:
 749 000a 73657276 		.ascii	"servoStates\000"
 749      6F537461 
 749      74657300 
 750              	.LASF14:
 751 0016 72657374 		.ascii	"rest\000"
 751      00
 752              	.LASF13:
 753 001b 696E6974 		.ascii	"init\000"
 753      00
 754              	.LASF9:
 755 0020 666C6F61 		.ascii	"float\000"
 755      7400
 756              	.LASF16:
 757 0026 64656C61 		.ascii	"delay\000"
 757      7900
 758              	.LASF1:
 759 002c 756E7369 		.ascii	"unsigned char\000"
 759      676E6564 
 759      20636861 
 759      7200
 760              	.LASF17:
 761 003a 636F6D70 		.ascii	"compareValue\000"
 761      61726556 
 761      616C7565 
 761      00
 762              	.LASF19:
 763 0047 74696D65 		.ascii	"timer\000"
 763      7200
 764              	.LASF23:
 765 004d 433A5C55 		.ascii	"C:\\Users\\Jared\\Documents\\PSoC Creator\\Workspac"
 765      73657273 
 765      5C4A6172 
 765      65645C44 
 765      6F63756D 
 766 007b 65315C53 		.ascii	"e1\\Servo.cydsn\000"
 766      6572766F 
 766      2E637964 
 766      736E00
 767              	.LASF5:
 768 008a 6C6F6E67 		.ascii	"long unsigned int\000"
 768      20756E73 
 768      69676E65 
 768      6420696E 
 768      7400
 769              	.LASF3:
 770 009c 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 17


 770      7420756E 
 770      7369676E 
 770      65642069 
 770      6E7400
 771              	.LASF10:
 772 00af 646F7562 		.ascii	"double\000"
 772      6C6500
 773              	.LASF22:
 774 00b6 2E5C6D61 		.ascii	".\\main.c\000"
 774      696E2E63 
 774      00
 775              	.LASF26:
 776 00bf 6D61696E 		.ascii	"main\000"
 776      00
 777              	.LASF8:
 778 00c4 756E7369 		.ascii	"unsigned int\000"
 778      676E6564 
 778      20696E74 
 778      00
 779              	.LASF28:
 780 00d1 6D795F70 		.ascii	"my_putchar\000"
 780      75746368 
 780      617200
 781              	.LASF7:
 782 00dc 6C6F6E67 		.ascii	"long long unsigned int\000"
 782      206C6F6E 
 782      6720756E 
 782      7369676E 
 782      65642069 
 783              	.LASF20:
 784 00f3 63757272 		.ascii	"currState\000"
 784      53746174 
 784      6500
 785              	.LASF15:
 786 00fd 6D6F7665 		.ascii	"moveServo\000"
 786      53657276 
 786      6F00
 787              	.LASF12:
 788 0107 73697A65 		.ascii	"sizetype\000"
 788      74797065 
 788      00
 789              	.LASF6:
 790 0110 6C6F6E67 		.ascii	"long long int\000"
 790      206C6F6E 
 790      6720696E 
 790      7400
 791              	.LASF11:
 792 011e 63686172 		.ascii	"char\000"
 792      00
 793              	.LASF2:
 794 0123 73686F72 		.ascii	"short int\000"
 794      7420696E 
 794      7400
 795              	.LASF24:
 796 012d 75696E74 		.ascii	"uint16_t\000"
 796      31365F74 
 796      00
ARM GAS  C:\Users\Jared\AppData\Local\Temp\ccRgmOih.s 			page 18


 797              	.LASF21:
 798 0136 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 798      4320342E 
 798      372E3320 
 798      32303133 
 798      30333132 
 799 0169 616E6368 		.ascii	"anch revision 196615]\000"
 799      20726576 
 799      6973696F 
 799      6E203139 
 799      36363135 
 800              	.LASF27:
 801 017f 73657276 		.ascii	"servoTick\000"
 801      6F546963 
 801      6B00
 802              	.LASF4:
 803 0189 6C6F6E67 		.ascii	"long int\000"
 803      20696E74 
 803      00
 804              	.LASF0:
 805 0192 7369676E 		.ascii	"signed char\000"
 805      65642063 
 805      68617200 
 806              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
