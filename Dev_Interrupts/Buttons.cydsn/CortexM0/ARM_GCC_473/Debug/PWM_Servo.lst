ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_Servo.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_Servo_initVar
  18              		.bss
  19              		.type	PWM_Servo_initVar, %object
  20              		.size	PWM_Servo_initVar, 1
  21              	PWM_Servo_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Servo_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Servo_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Servo_Init, %function
  29              	PWM_Servo_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_Servo.c"
   1:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_Servo.c **** * File Name: PWM_Servo.c
   3:.\Generated_Source\PSoC4/PWM_Servo.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/PWM_Servo.c **** *
   5:.\Generated_Source\PSoC4/PWM_Servo.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_Servo.c **** *  This file provides the source code to the API for the PWM_Servo
   7:.\Generated_Source\PSoC4/PWM_Servo.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_Servo.c **** *
   9:.\Generated_Source\PSoC4/PWM_Servo.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_Servo.c **** *
  12:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_Servo.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_Servo.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_Servo.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_Servo.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  19:.\Generated_Source\PSoC4/PWM_Servo.c **** #include "PWM_Servo.h"
  20:.\Generated_Source\PSoC4/PWM_Servo.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  22:.\Generated_Source\PSoC4/PWM_Servo.c **** uint8 PWM_Servo_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  24:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  25:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_Init
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM_Servo.c **** *
  29:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Initialize/Restore default PWM_Servo configuration.
  31:.\Generated_Source\PSoC4/PWM_Servo.c **** *
  32:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
  34:.\Generated_Source\PSoC4/PWM_Servo.c **** *
  35:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
  37:.\Generated_Source\PSoC4/PWM_Servo.c **** *
  38:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_Init(void)
  40:.\Generated_Source\PSoC4/PWM_Servo.c **** {
  32              		.loc 1 40 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              	.LCFI1:
  41              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  42:.\Generated_Source\PSoC4/PWM_Servo.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__QUAD == PWM_Servo_CONFIG)
  44:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM_Servo.c ****         (((uint32)(PWM_Servo_QUAD_ENCODING_MODES     << PWM_Servo_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_CONFIG                  << PWM_Servo_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__QUAD == PWM_Servo_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  49:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG)
  50:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_CONTROL_REG =
  42              		.loc 1 50 0
  43 0004 0F4B     		ldr	r3, .L2
  44 0006 8022     		mov	r2, #128
  45 0008 D204     		lsl	r2, r2, #19
  46 000a 1A60     		str	r2, [r3]
  51:.\Generated_Source\PSoC4/PWM_Servo.c ****         (((uint32)(PWM_Servo_PWM_STOP_EVENT          << PWM_Servo_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_OUT_INVERT          << PWM_Servo_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_OUT_N_INVERT        << PWM_Servo_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_MODE                << PWM_Servo_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  56:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (PWM_Servo__PWM_PR == PWM_Servo_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM_Servo.c ****             ((uint32)(PWM_Servo_PWM_RUN_MODE         << PWM_Servo_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  60:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_WriteCounter(PWM_Servo_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM_Servo.c ****         #else
  62:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_CONTROL_REG |=
  47              		.loc 1 62 0
  48 000c 0D4B     		ldr	r3, .L2
  49 000e 0D4A     		ldr	r2, .L2
  50 0010 1268     		ldr	r2, [r2]
  51 0012 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM_Servo.c ****             (((uint32)(PWM_Servo_PWM_ALIGN           << PWM_Servo_UPDOWN_SHIFT))          |
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 3


  64:.\Generated_Source\PSoC4/PWM_Servo.c ****              ((uint32)(PWM_Servo_PWM_KILL_EVENT      << PWM_Servo_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (PWM_Servo__PWM_PR == PWM_Servo_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  67:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (PWM_Servo__PWM_DT == PWM_Servo_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM_Servo.c ****             ((uint32)(PWM_Servo_PWM_DEAD_TIME_CYCLE  << PWM_Servo_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (PWM_Servo__PWM_DT == PWM_Servo_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  72:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (PWM_Servo__PWM == PWM_Servo_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_CONTROL_REG |=
  52              		.loc 1 73 0
  53 0014 0B4B     		ldr	r3, .L2
  54 0016 0B4A     		ldr	r2, .L2
  55 0018 1268     		ldr	r2, [r2]
  56 001a 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM_Servo.c ****             ((uint32)PWM_Servo_PWM_PRESCALER         << PWM_Servo_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (PWM_Servo__PWM == PWM_Servo_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  78:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__TIMER == PWM_Servo_CONFIG)
  79:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM_Servo.c ****         (((uint32)(PWM_Servo_TC_PRESCALER            << PWM_Servo_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_COUNTER_MODE         << PWM_Servo_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_RUN_MODE             << PWM_Servo_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_COMP_CAP_MODE        << PWM_Servo_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__TIMER == PWM_Servo_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  86:.\Generated_Source\PSoC4/PWM_Servo.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__QUAD == PWM_Servo_CONFIG)
  88:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM_Servo.c ****         (((uint32)(PWM_Servo_QUAD_PHIA_SIGNAL_MODE   << PWM_Servo_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_QUAD_INDEX_SIGNAL_MODE  << PWM_Servo_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_QUAD_STOP_SIGNAL_MODE   << PWM_Servo_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_QUAD_PHIB_SIGNAL_MODE   << PWM_Servo_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__QUAD == PWM_Servo_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM_Servo.c **** 
  95:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG)
  96:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_TRIG_CONTROL1_REG  =
  57              		.loc 1 96 0
  58 001c 0A4B     		ldr	r3, .L2+4
  59 001e 0C22     		mov	r2, #12
  60 0020 1A60     		str	r2, [r3]
  97:.\Generated_Source\PSoC4/PWM_Servo.c ****         (((uint32)(PWM_Servo_PWM_SWITCH_SIGNAL_MODE  << PWM_Servo_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_COUNT_SIGNAL_MODE   << PWM_Servo_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_RELOAD_SIGNAL_MODE  << PWM_Servo_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_STOP_SIGNAL_MODE    << PWM_Servo_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_PWM_START_SIGNAL_MODE   << PWM_Servo_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 104:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__TIMER == PWM_Servo_CONFIG)
 105:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM_Servo.c ****         (((uint32)(PWM_Servo_TC_CAPTURE_SIGNAL_MODE  << PWM_Servo_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_COUNT_SIGNAL_MODE    << PWM_Servo_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_RELOAD_SIGNAL_MODE   << PWM_Servo_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_STOP_SIGNAL_MODE     << PWM_Servo_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM_Servo.c ****          ((uint32)(PWM_Servo_TC_START_SIGNAL_MODE    << PWM_Servo_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__TIMER == PWM_Servo_CONFIG) */
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 4


 112:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 113:.\Generated_Source\PSoC4/PWM_Servo.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__QUAD == PWM_Servo_CONFIG)
 115:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_SetInterruptMode(PWM_Servo_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__QUAD == PWM_Servo_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 118:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG)
 119:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_SetInterruptMode(PWM_Servo_PWM_INTERRUPT_MASK);
  61              		.loc 1 119 0
  62 0022 0020     		mov	r0, #0
  63 0024 FFF7FEFF 		bl	PWM_Servo_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 122:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__TIMER == PWM_Servo_CONFIG)
 123:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_SetInterruptMode(PWM_Servo_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__TIMER == PWM_Servo_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 126:.\Generated_Source\PSoC4/PWM_Servo.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__TIMER == PWM_Servo_CONFIG)
 128:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_WritePeriod(PWM_Servo_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 130:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (PWM_Servo__COUNT_DOWN == PWM_Servo_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_WriteCounter(PWM_Servo_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (PWM_Servo__COUNT_DOWN == PWM_Servo_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 134:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (PWM_Servo__COMPARE == PWM_Servo_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_WriteCompare(PWM_Servo_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 137:.\Generated_Source\PSoC4/PWM_Servo.c ****             #if (1u == PWM_Servo_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_WriteCompareBuf(PWM_Servo_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/PWM_Servo.c ****             #endif  /* (1u == PWM_Servo_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (PWM_Servo__COMPARE == PWM_Servo_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__TIMER == PWM_Servo_CONFIG) */
 143:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 144:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG)
 145:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_WritePeriod(PWM_Servo_PWM_PERIOD_VALUE );
  64              		.loc 1 145 0
  65 0028 084B     		ldr	r3, .L2+8
  66 002a 181C     		mov	r0, r3
  67 002c FFF7FEFF 		bl	PWM_Servo_WritePeriod
 146:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_WriteCompare(PWM_Servo_PWM_COMPARE_VALUE);
  68              		.loc 1 146 0
  69 0030 074B     		ldr	r3, .L2+12
  70 0032 181C     		mov	r0, r3
  71 0034 FFF7FEFF 		bl	PWM_Servo_WriteCompare
 147:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 148:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (1u == PWM_Servo_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_WriteCompareBuf(PWM_Servo_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (1u == PWM_Servo_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 153:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (1u == PWM_Servo_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_WritePeriodBuf(PWM_Servo_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (1u == PWM_Servo_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/PWM_Servo.c **** 
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 5


 158:.\Generated_Source\PSoC4/PWM_Servo.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (PWM_Servo__PWM_PR == PWM_Servo_PWM_MODE)
 160:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/PWM_Servo.c ****                     (PWM_Servo_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/PWM_Servo.c ****                     PWM_Servo_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/PWM_Servo.c ****                     PWM_Servo_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/PWM_Servo.c ****         #else
 165:.\Generated_Source\PSoC4/PWM_Servo.c ****             #if (PWM_Servo__LEFT == PWM_Servo_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_TRIG_CONTROL2_REG = PWM_Servo_PWM_MODE_LEFT;
  72              		.loc 1 166 0
  73 0038 064B     		ldr	r3, .L2+16
  74 003a 3122     		mov	r2, #49
  75 003c 1A60     		str	r2, [r3]
 167:.\Generated_Source\PSoC4/PWM_Servo.c ****             #endif  /* ( PWM_Servo_PWM_LEFT == PWM_Servo_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 169:.\Generated_Source\PSoC4/PWM_Servo.c ****             #if (PWM_Servo__RIGHT == PWM_Servo_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_WriteCounter(PWM_Servo_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_TRIG_CONTROL2_REG = PWM_Servo_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/PWM_Servo.c ****             #endif  /* ( PWM_Servo_PWM_RIGHT == PWM_Servo_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 174:.\Generated_Source\PSoC4/PWM_Servo.c ****             #if (PWM_Servo__CENTER == PWM_Servo_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_TRIG_CONTROL2_REG = PWM_Servo_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/PWM_Servo.c ****             #endif  /* ( PWM_Servo_PWM_CENTER == PWM_Servo_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 178:.\Generated_Source\PSoC4/PWM_Servo.c ****             #if (PWM_Servo__ASYMMETRIC == PWM_Servo_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/PWM_Servo.c ****                 PWM_Servo_TRIG_CONTROL2_REG = PWM_Servo_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/PWM_Servo.c ****             #endif  /* (PWM_Servo__ASYMMETRIC == PWM_Servo_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif  /* (PWM_Servo__PWM_PR == PWM_Servo_PWM_MODE) */
 182:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif  /* (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG) */
 183:.\Generated_Source\PSoC4/PWM_Servo.c **** }
  76              		.loc 1 183 0
  77 003e BD46     		mov	sp, r7
  78              		@ sp needed for prologue
  79 0040 80BD     		pop	{r7, pc}
  80              	.L3:
  81 0042 C046     		.align	2
  82              	.L2:
  83 0044 40010540 		.word	1074069824
  84 0048 64010540 		.word	1074069860
  85 004c 204E0000 		.word	20000
  86 0050 DC050000 		.word	1500
  87 0054 68010540 		.word	1074069864
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	PWM_Servo_Init, .-PWM_Servo_Init
  91              		.section	.text.PWM_Servo_Enable,"ax",%progbits
  92              		.align	2
  93              		.global	PWM_Servo_Enable
  94              		.code	16
  95              		.thumb_func
  96              		.type	PWM_Servo_Enable, %function
  97              	PWM_Servo_Enable:
  98              	.LFB1:
 184:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 185:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 186:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_Enable
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 6


 188:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 190:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 191:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Enables the PWM_Servo.
 192:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 193:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 194:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 195:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 196:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 197:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 198:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 199:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_Enable(void)
 201:.\Generated_Source\PSoC4/PWM_Servo.c **** {
  99              		.loc 1 201 0
 100              		.cfi_startproc
 101 0000 90B5     		push	{r4, r7, lr}
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 12
 104              		.cfi_offset 4, -12
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 83B0     		sub	sp, sp, #12
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 24
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI4:
 112              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 204:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 113              		.loc 1 204 0
 114 0006 FC1D     		add	r4, r7, #7
 115 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 116 000c 031C     		mov	r3, r0
 117 000e 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_BLOCK_CONTROL_REG |= PWM_Servo_MASK;
 118              		.loc 1 205 0
 119 0010 084B     		ldr	r3, .L5
 120 0012 084A     		ldr	r2, .L5
 121 0014 1268     		ldr	r2, [r2]
 122 0016 0221     		mov	r1, #2
 123 0018 0A43     		orr	r2, r1
 124 001a 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 125              		.loc 1 206 0
 126 001c FB1D     		add	r3, r7, #7
 127 001e 1B78     		ldrb	r3, [r3]
 128 0020 181C     		mov	r0, r3
 129 0022 FFF7FEFF 		bl	CyExitCriticalSection
 207:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 208:.\Generated_Source\PSoC4/PWM_Servo.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG)
 210:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (0u == PWM_Servo_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_TriggerCommand(PWM_Servo_MASK, PWM_Servo_CMD_START);
 130              		.loc 1 211 0
 131 0026 0220     		mov	r0, #2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 7


 132 0028 1821     		mov	r1, #24
 133 002a FFF7FEFF 		bl	PWM_Servo_TriggerCommand
 212:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif /* (0u == PWM_Servo_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo__PWM_SEL == PWM_Servo_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 215:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo__TIMER == PWM_Servo_CONFIG)
 216:.\Generated_Source\PSoC4/PWM_Servo.c ****         #if (0u == PWM_Servo_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_TriggerCommand(PWM_Servo_MASK, PWM_Servo_CMD_START);
 218:.\Generated_Source\PSoC4/PWM_Servo.c ****         #endif /* (0u == PWM_Servo_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo__TIMER == PWM_Servo_CONFIG) */
 220:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 134              		.loc 1 220 0
 135 002e BD46     		mov	sp, r7
 136 0030 03B0     		add	sp, sp, #12
 137              		@ sp needed for prologue
 138 0032 90BD     		pop	{r4, r7, pc}
 139              	.L6:
 140              		.align	2
 141              	.L5:
 142 0034 00000540 		.word	1074069504
 143              		.cfi_endproc
 144              	.LFE1:
 145              		.size	PWM_Servo_Enable, .-PWM_Servo_Enable
 146              		.section	.text.PWM_Servo_Start,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_Servo_Start
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_Servo_Start, %function
 152              	PWM_Servo_Start:
 153              	.LFB2:
 221:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 222:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 223:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_Start
 225:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 227:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 228:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Initializes the PWM_Servo with default customizer
 229:.\Generated_Source\PSoC4/PWM_Servo.c **** *  values when called the first time and enables the PWM_Servo.
 230:.\Generated_Source\PSoC4/PWM_Servo.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/PWM_Servo.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 233:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 234:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 235:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 236:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 237:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 238:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 239:.\Generated_Source\PSoC4/PWM_Servo.c **** * Global variables:
 240:.\Generated_Source\PSoC4/PWM_Servo.c **** *  PWM_Servo_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/PWM_Servo.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/PWM_Servo.c **** *  to 1 the first time PWM_Servo_Start() is called. This allows
 243:.\Generated_Source\PSoC4/PWM_Servo.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/PWM_Servo.c **** *  calls to the PWM_Servo_Start() routine.
 245:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 246:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 8


 247:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_Start(void)
 248:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 154              		.loc 1 248 0
 155              		.cfi_startproc
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 00AF     		add	r7, sp, #0
 162              	.LCFI6:
 163              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/PWM_Servo.c ****     if (0u == PWM_Servo_initVar)
 164              		.loc 1 249 0
 165 0004 064B     		ldr	r3, .L9
 166 0006 1B78     		ldrb	r3, [r3]
 167 0008 002B     		cmp	r3, #0
 168 000a 04D1     		bne	.L8
 250:.\Generated_Source\PSoC4/PWM_Servo.c ****     {
 251:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_Init();
 169              		.loc 1 251 0
 170 000c FFF7FEFF 		bl	PWM_Servo_Init
 252:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_initVar = 1u;
 171              		.loc 1 252 0
 172 0010 034B     		ldr	r3, .L9
 173 0012 0122     		mov	r2, #1
 174 0014 1A70     		strb	r2, [r3]
 175              	.L8:
 253:.\Generated_Source\PSoC4/PWM_Servo.c ****     }
 254:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 255:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_Enable();
 176              		.loc 1 255 0
 177 0016 FFF7FEFF 		bl	PWM_Servo_Enable
 256:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 178              		.loc 1 256 0
 179 001a BD46     		mov	sp, r7
 180              		@ sp needed for prologue
 181 001c 80BD     		pop	{r7, pc}
 182              	.L10:
 183 001e C046     		.align	2
 184              	.L9:
 185 0020 00000000 		.word	PWM_Servo_initVar
 186              		.cfi_endproc
 187              	.LFE2:
 188              		.size	PWM_Servo_Start, .-PWM_Servo_Start
 189              		.section	.text.PWM_Servo_Stop,"ax",%progbits
 190              		.align	2
 191              		.global	PWM_Servo_Stop
 192              		.code	16
 193              		.thumb_func
 194              		.type	PWM_Servo_Stop, %function
 195              	PWM_Servo_Stop:
 196              	.LFB3:
 257:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 258:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 259:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_Stop
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 9


 261:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 263:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 264:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Disables the PWM_Servo.
 265:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 266:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 267:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 268:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 269:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 270:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 271:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 272:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_Stop(void)
 274:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 197              		.loc 1 274 0
 198              		.cfi_startproc
 199 0000 90B5     		push	{r4, r7, lr}
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              	.LCFI8:
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              	.LCFI9:
 210              		.cfi_def_cfa_register 7
 275:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 277:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 211              		.loc 1 277 0
 212 0006 FC1D     		add	r4, r7, #7
 213 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 214 000c 031C     		mov	r3, r0
 215 000e 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 279:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_BLOCK_CONTROL_REG &= (uint32)~PWM_Servo_MASK;
 216              		.loc 1 279 0
 217 0010 064B     		ldr	r3, .L12
 218 0012 064A     		ldr	r2, .L12
 219 0014 1268     		ldr	r2, [r2]
 220 0016 0221     		mov	r1, #2
 221 0018 8A43     		bic	r2, r1
 222 001a 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 281:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 223              		.loc 1 281 0
 224 001c FB1D     		add	r3, r7, #7
 225 001e 1B78     		ldrb	r3, [r3]
 226 0020 181C     		mov	r0, r3
 227 0022 FFF7FEFF 		bl	CyExitCriticalSection
 282:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 228              		.loc 1 282 0
 229 0026 BD46     		mov	sp, r7
 230 0028 03B0     		add	sp, sp, #12
 231              		@ sp needed for prologue
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 10


 232 002a 90BD     		pop	{r4, r7, pc}
 233              	.L13:
 234              		.align	2
 235              	.L12:
 236 002c 00000540 		.word	1074069504
 237              		.cfi_endproc
 238              	.LFE3:
 239              		.size	PWM_Servo_Stop, .-PWM_Servo_Stop
 240              		.section	.text.PWM_Servo_SetMode,"ax",%progbits
 241              		.align	2
 242              		.global	PWM_Servo_SetMode
 243              		.code	16
 244              		.thumb_func
 245              		.type	PWM_Servo_SetMode, %function
 246              	PWM_Servo_SetMode:
 247              	.LFB4:
 283:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 284:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 285:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetMode
 287:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 289:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 290:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the operation mode of the PWM_Servo. This function is used when
 291:.\Generated_Source\PSoC4/PWM_Servo.c **** *  configured as a generic PWM_Servo and the actual mode of operation is
 292:.\Generated_Source\PSoC4/PWM_Servo.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 294:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 295:.\Generated_Source\PSoC4/PWM_Servo.c **** *  mode: Mode for the PWM_Servo to operate in
 296:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 297:.\Generated_Source\PSoC4/PWM_Servo.c **** *   - PWM_Servo_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/PWM_Servo.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/PWM_Servo.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 306:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 307:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 308:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 309:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 248              		.loc 1 311 0
 249              		.cfi_startproc
 250 0000 90B5     		push	{r4, r7, lr}
 251              	.LCFI10:
 252              		.cfi_def_cfa_offset 12
 253              		.cfi_offset 4, -12
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 85B0     		sub	sp, sp, #20
 257              	.LCFI11:
 258              		.cfi_def_cfa_offset 32
 259 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 11


 260              	.LCFI12:
 261              		.cfi_def_cfa_register 7
 262 0006 7860     		str	r0, [r7, #4]
 312:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 314:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 263              		.loc 1 314 0
 264 0008 3C1C     		mov	r4, r7
 265 000a 0F34     		add	r4, r4, #15
 266 000c FFF7FEFF 		bl	CyEnterCriticalSection
 267 0010 031C     		mov	r3, r0
 268 0012 2370     		strb	r3, [r4]
 315:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 316:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_MODE_MASK;
 269              		.loc 1 316 0
 270 0014 0A4B     		ldr	r3, .L15
 271 0016 0A4A     		ldr	r2, .L15
 272 0018 1168     		ldr	r1, [r2]
 273 001a 0A4A     		ldr	r2, .L15+4
 274 001c 0A40     		and	r2, r1
 275 001e 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= mode;
 276              		.loc 1 317 0
 277 0020 074B     		ldr	r3, .L15
 278 0022 074A     		ldr	r2, .L15
 279 0024 1168     		ldr	r1, [r2]
 280 0026 7A68     		ldr	r2, [r7, #4]
 281 0028 0A43     		orr	r2, r1
 282 002a 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 319:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 283              		.loc 1 319 0
 284 002c 3B1C     		mov	r3, r7
 285 002e 0F33     		add	r3, r3, #15
 286 0030 1B78     		ldrb	r3, [r3]
 287 0032 181C     		mov	r0, r3
 288 0034 FFF7FEFF 		bl	CyExitCriticalSection
 320:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 289              		.loc 1 320 0
 290 0038 BD46     		mov	sp, r7
 291 003a 05B0     		add	sp, sp, #20
 292              		@ sp needed for prologue
 293 003c 90BD     		pop	{r4, r7, pc}
 294              	.L16:
 295 003e C046     		.align	2
 296              	.L15:
 297 0040 40010540 		.word	1074069824
 298 0044 FFFFFFF8 		.word	-117440513
 299              		.cfi_endproc
 300              	.LFE4:
 301              		.size	PWM_Servo_SetMode, .-PWM_Servo_SetMode
 302              		.section	.text.PWM_Servo_SetQDMode,"ax",%progbits
 303              		.align	2
 304              		.global	PWM_Servo_SetQDMode
 305              		.code	16
 306              		.thumb_func
 307              		.type	PWM_Servo_SetQDMode, %function
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 12


 308              	PWM_Servo_SetQDMode:
 309              	.LFB5:
 321:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 322:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 323:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetQDMode
 325:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 327:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 328:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 331:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 332:.\Generated_Source\PSoC4/PWM_Servo.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 334:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/PWM_Servo.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 339:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 340:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 341:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 342:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 310              		.loc 1 344 0
 311              		.cfi_startproc
 312 0000 90B5     		push	{r4, r7, lr}
 313              	.LCFI13:
 314              		.cfi_def_cfa_offset 12
 315              		.cfi_offset 4, -12
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 85B0     		sub	sp, sp, #20
 319              	.LCFI14:
 320              		.cfi_def_cfa_offset 32
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI15:
 323              		.cfi_def_cfa_register 7
 324 0006 7860     		str	r0, [r7, #4]
 345:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 347:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 325              		.loc 1 347 0
 326 0008 3C1C     		mov	r4, r7
 327 000a 0F34     		add	r4, r4, #15
 328 000c FFF7FEFF 		bl	CyEnterCriticalSection
 329 0010 031C     		mov	r3, r0
 330 0012 2370     		strb	r3, [r4]
 348:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 349:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_QUAD_MODE_MASK;
 331              		.loc 1 349 0
 332 0014 0A4B     		ldr	r3, .L18
 333 0016 0A4A     		ldr	r2, .L18
 334 0018 1168     		ldr	r1, [r2]
 335 001a 0A4A     		ldr	r2, .L18+4
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 13


 336 001c 0A40     		and	r2, r1
 337 001e 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= qdMode;
 338              		.loc 1 350 0
 339 0020 074B     		ldr	r3, .L18
 340 0022 074A     		ldr	r2, .L18
 341 0024 1168     		ldr	r1, [r2]
 342 0026 7A68     		ldr	r2, [r7, #4]
 343 0028 0A43     		orr	r2, r1
 344 002a 1A60     		str	r2, [r3]
 351:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 352:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 345              		.loc 1 352 0
 346 002c 3B1C     		mov	r3, r7
 347 002e 0F33     		add	r3, r3, #15
 348 0030 1B78     		ldrb	r3, [r3]
 349 0032 181C     		mov	r0, r3
 350 0034 FFF7FEFF 		bl	CyExitCriticalSection
 353:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 351              		.loc 1 353 0
 352 0038 BD46     		mov	sp, r7
 353 003a 05B0     		add	sp, sp, #20
 354              		@ sp needed for prologue
 355 003c 90BD     		pop	{r4, r7, pc}
 356              	.L19:
 357 003e C046     		.align	2
 358              	.L18:
 359 0040 40010540 		.word	1074069824
 360 0044 FFFF8FFF 		.word	-7340033
 361              		.cfi_endproc
 362              	.LFE5:
 363              		.size	PWM_Servo_SetQDMode, .-PWM_Servo_SetQDMode
 364              		.section	.text.PWM_Servo_SetPrescaler,"ax",%progbits
 365              		.align	2
 366              		.global	PWM_Servo_SetPrescaler
 367              		.code	16
 368              		.thumb_func
 369              		.type	PWM_Servo_SetPrescaler, %function
 370              	PWM_Servo_SetPrescaler:
 371              	.LFB6:
 354:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 355:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 356:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPrescaler
 358:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 360:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 361:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/PWM_Servo.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 364:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 365:.\Generated_Source\PSoC4/PWM_Servo.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 367:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY8    - Divide by 8
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 14


 371:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 376:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 377:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 378:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 379:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 372              		.loc 1 381 0
 373              		.cfi_startproc
 374 0000 90B5     		push	{r4, r7, lr}
 375              	.LCFI16:
 376              		.cfi_def_cfa_offset 12
 377              		.cfi_offset 4, -12
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 85B0     		sub	sp, sp, #20
 381              	.LCFI17:
 382              		.cfi_def_cfa_offset 32
 383 0004 00AF     		add	r7, sp, #0
 384              	.LCFI18:
 385              		.cfi_def_cfa_register 7
 386 0006 7860     		str	r0, [r7, #4]
 382:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 384:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 387              		.loc 1 384 0
 388 0008 3C1C     		mov	r4, r7
 389 000a 0F34     		add	r4, r4, #15
 390 000c FFF7FEFF 		bl	CyEnterCriticalSection
 391 0010 031C     		mov	r3, r0
 392 0012 2370     		strb	r3, [r4]
 385:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 386:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_PRESCALER_MASK;
 393              		.loc 1 386 0
 394 0014 0A4B     		ldr	r3, .L21
 395 0016 0A4A     		ldr	r2, .L21
 396 0018 1168     		ldr	r1, [r2]
 397 001a 0A4A     		ldr	r2, .L21+4
 398 001c 0A40     		and	r2, r1
 399 001e 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= prescaler;
 400              		.loc 1 387 0
 401 0020 074B     		ldr	r3, .L21
 402 0022 074A     		ldr	r2, .L21
 403 0024 1168     		ldr	r1, [r2]
 404 0026 7A68     		ldr	r2, [r7, #4]
 405 0028 0A43     		orr	r2, r1
 406 002a 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 389:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 407              		.loc 1 389 0
 408 002c 3B1C     		mov	r3, r7
 409 002e 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 15


 410 0030 1B78     		ldrb	r3, [r3]
 411 0032 181C     		mov	r0, r3
 412 0034 FFF7FEFF 		bl	CyExitCriticalSection
 390:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 413              		.loc 1 390 0
 414 0038 BD46     		mov	sp, r7
 415 003a 05B0     		add	sp, sp, #20
 416              		@ sp needed for prologue
 417 003c 90BD     		pop	{r4, r7, pc}
 418              	.L22:
 419 003e C046     		.align	2
 420              	.L21:
 421 0040 40010540 		.word	1074069824
 422 0044 FF00FFFF 		.word	-65281
 423              		.cfi_endproc
 424              	.LFE6:
 425              		.size	PWM_Servo_SetPrescaler, .-PWM_Servo_SetPrescaler
 426              		.section	.text.PWM_Servo_SetOneShot,"ax",%progbits
 427              		.align	2
 428              		.global	PWM_Servo_SetOneShot
 429              		.code	16
 430              		.thumb_func
 431              		.type	PWM_Servo_SetOneShot, %function
 432              	PWM_Servo_SetOneShot:
 433              	.LFB7:
 391:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 392:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 393:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetOneShot
 395:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 397:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 398:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the register that controls whether the PWM_Servo runs
 399:.\Generated_Source\PSoC4/PWM_Servo.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/PWM_Servo.c **** *  PWM_Servo operates in the continuous mode.
 401:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 402:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 403:.\Generated_Source\PSoC4/PWM_Servo.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 405:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 408:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 409:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 410:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 411:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 434              		.loc 1 413 0
 435              		.cfi_startproc
 436 0000 90B5     		push	{r4, r7, lr}
 437              	.LCFI19:
 438              		.cfi_def_cfa_offset 12
 439              		.cfi_offset 4, -12
 440              		.cfi_offset 7, -8
 441              		.cfi_offset 14, -4
 442 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 16


 443              	.LCFI20:
 444              		.cfi_def_cfa_offset 32
 445 0004 00AF     		add	r7, sp, #0
 446              	.LCFI21:
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 414:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 416:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 449              		.loc 1 416 0
 450 0008 3C1C     		mov	r4, r7
 451 000a 0F34     		add	r4, r4, #15
 452 000c FFF7FEFF 		bl	CyEnterCriticalSection
 453 0010 031C     		mov	r3, r0
 454 0012 2370     		strb	r3, [r4]
 417:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 418:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_ONESHOT_MASK;
 455              		.loc 1 418 0
 456 0014 0B4B     		ldr	r3, .L24
 457 0016 0B4A     		ldr	r2, .L24
 458 0018 1168     		ldr	r1, [r2]
 459 001a 0B4A     		ldr	r2, .L24+4
 460 001c 0A40     		and	r2, r1
 461 001e 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_Servo_1BIT_MASK) <<
 462              		.loc 1 419 0
 463 0020 084B     		ldr	r3, .L24
 464 0022 084A     		ldr	r2, .L24
 465 0024 1168     		ldr	r1, [r2]
 466 0026 7868     		ldr	r0, [r7, #4]
 467 0028 0122     		mov	r2, #1
 468 002a 0240     		and	r2, r0
 469 002c 9204     		lsl	r2, r2, #18
 470 002e 0A43     		orr	r2, r1
 471 0030 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/PWM_Servo.c ****                                                                PWM_Servo_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 422:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 472              		.loc 1 422 0
 473 0032 3B1C     		mov	r3, r7
 474 0034 0F33     		add	r3, r3, #15
 475 0036 1B78     		ldrb	r3, [r3]
 476 0038 181C     		mov	r0, r3
 477 003a FFF7FEFF 		bl	CyExitCriticalSection
 423:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 478              		.loc 1 423 0
 479 003e BD46     		mov	sp, r7
 480 0040 05B0     		add	sp, sp, #20
 481              		@ sp needed for prologue
 482 0042 90BD     		pop	{r4, r7, pc}
 483              	.L25:
 484              		.align	2
 485              	.L24:
 486 0044 40010540 		.word	1074069824
 487 0048 FFFFFBFF 		.word	-262145
 488              		.cfi_endproc
 489              	.LFE7:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 17


 490              		.size	PWM_Servo_SetOneShot, .-PWM_Servo_SetOneShot
 491              		.section	.text.PWM_Servo_SetPWMMode,"ax",%progbits
 492              		.align	2
 493              		.global	PWM_Servo_SetPWMMode
 494              		.code	16
 495              		.thumb_func
 496              		.type	PWM_Servo_SetPWMMode, %function
 497              	PWM_Servo_SetPWMMode:
 498              	.LFB8:
 424:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 425:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 426:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPWMMode
 428:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 430:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 431:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/PWM_Servo.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/PWM_Servo.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/PWM_Servo.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/PWM_Servo.c **** *  the mode.
 436:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 437:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 438:.\Generated_Source\PSoC4/PWM_Servo.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/PWM_Servo.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 441:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM_Servo.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/PWM_Servo.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/PWM_Servo.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/PWM_Servo.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 462:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 463:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 464:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 465:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 499              		.loc 1 467 0
 500              		.cfi_startproc
 501 0000 80B5     		push	{r7, lr}
 502              	.LCFI22:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 18


 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 82B0     		sub	sp, sp, #8
 507              	.LCFI23:
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI24:
 511              		.cfi_def_cfa_register 7
 512 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL2_REG = (modeMask & PWM_Servo_6BIT_MASK);
 513              		.loc 1 468 0
 514 0008 034B     		ldr	r3, .L27
 515 000a 7968     		ldr	r1, [r7, #4]
 516 000c 3F22     		mov	r2, #63
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 519              		.loc 1 469 0
 520 0012 BD46     		mov	sp, r7
 521 0014 02B0     		add	sp, sp, #8
 522              		@ sp needed for prologue
 523 0016 80BD     		pop	{r7, pc}
 524              	.L28:
 525              		.align	2
 526              	.L27:
 527 0018 68010540 		.word	1074069864
 528              		.cfi_endproc
 529              	.LFE8:
 530              		.size	PWM_Servo_SetPWMMode, .-PWM_Servo_SetPWMMode
 531              		.section	.text.PWM_Servo_SetPWMSyncKill,"ax",%progbits
 532              		.align	2
 533              		.global	PWM_Servo_SetPWMSyncKill
 534              		.code	16
 535              		.thumb_func
 536              		.type	PWM_Servo_SetPWMSyncKill, %function
 537              	PWM_Servo_SetPWMSyncKill:
 538              	.LFB9:
 470:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 471:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 472:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 473:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 477:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 478:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/PWM_Servo.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/PWM_Servo.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/PWM_Servo.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 483:.\Generated_Source\PSoC4/PWM_Servo.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/PWM_Servo.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 486:.\Generated_Source\PSoC4/PWM_Servo.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/PWM_Servo.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/PWM_Servo.c **** *  when the kill signal (stop input) is configured in the pass through mode
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 19


 489:.\Generated_Source\PSoC4/PWM_Servo.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 491:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 492:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 493:.\Generated_Source\PSoC4/PWM_Servo.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 495:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 498:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 499:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 500:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 501:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 539              		.loc 1 503 0
 540              		.cfi_startproc
 541 0000 90B5     		push	{r4, r7, lr}
 542              	.LCFI25:
 543              		.cfi_def_cfa_offset 12
 544              		.cfi_offset 4, -12
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 85B0     		sub	sp, sp, #20
 548              	.LCFI26:
 549              		.cfi_def_cfa_offset 32
 550 0004 00AF     		add	r7, sp, #0
 551              	.LCFI27:
 552              		.cfi_def_cfa_register 7
 553 0006 7860     		str	r0, [r7, #4]
 504:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 506:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 554              		.loc 1 506 0
 555 0008 3C1C     		mov	r4, r7
 556 000a 0F34     		add	r4, r4, #15
 557 000c FFF7FEFF 		bl	CyEnterCriticalSection
 558 0010 031C     		mov	r3, r0
 559 0012 2370     		strb	r3, [r4]
 507:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 508:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_PWM_SYNC_KILL_MASK;
 560              		.loc 1 508 0
 561 0014 0B4B     		ldr	r3, .L30
 562 0016 0B4A     		ldr	r2, .L30
 563 0018 1268     		ldr	r2, [r2]
 564 001a 0421     		mov	r1, #4
 565 001c 8A43     		bic	r2, r1
 566 001e 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_Servo_1BIT_MASK)  <<
 567              		.loc 1 509 0
 568 0020 084B     		ldr	r3, .L30
 569 0022 084A     		ldr	r2, .L30
 570 0024 1168     		ldr	r1, [r2]
 571 0026 7868     		ldr	r0, [r7, #4]
 572 0028 0122     		mov	r2, #1
 573 002a 0240     		and	r2, r0
 574 002c 9200     		lsl	r2, r2, #2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 20


 575 002e 0A43     		orr	r2, r1
 576 0030 1A60     		str	r2, [r3]
 510:.\Generated_Source\PSoC4/PWM_Servo.c ****                                                PWM_Servo_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 512:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 577              		.loc 1 512 0
 578 0032 3B1C     		mov	r3, r7
 579 0034 0F33     		add	r3, r3, #15
 580 0036 1B78     		ldrb	r3, [r3]
 581 0038 181C     		mov	r0, r3
 582 003a FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 583              		.loc 1 513 0
 584 003e BD46     		mov	sp, r7
 585 0040 05B0     		add	sp, sp, #20
 586              		@ sp needed for prologue
 587 0042 90BD     		pop	{r4, r7, pc}
 588              	.L31:
 589              		.align	2
 590              	.L30:
 591 0044 40010540 		.word	1074069824
 592              		.cfi_endproc
 593              	.LFE9:
 594              		.size	PWM_Servo_SetPWMSyncKill, .-PWM_Servo_SetPWMSyncKill
 595              		.section	.text.PWM_Servo_SetPWMStopOnKill,"ax",%progbits
 596              		.align	2
 597              		.global	PWM_Servo_SetPWMStopOnKill
 598              		.code	16
 599              		.thumb_func
 600              		.type	PWM_Servo_SetPWMStopOnKill, %function
 601              	PWM_Servo_SetPWMStopOnKill:
 602              	.LFB10:
 514:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 515:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 516:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 520:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 521:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/PWM_Servo.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/PWM_Servo.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 525:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 526:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 527:.\Generated_Source\PSoC4/PWM_Servo.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 529:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 532:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 533:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 534:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 535:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 603              		.loc 1 537 0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 21


 604              		.cfi_startproc
 605 0000 90B5     		push	{r4, r7, lr}
 606              	.LCFI28:
 607              		.cfi_def_cfa_offset 12
 608              		.cfi_offset 4, -12
 609              		.cfi_offset 7, -8
 610              		.cfi_offset 14, -4
 611 0002 85B0     		sub	sp, sp, #20
 612              	.LCFI29:
 613              		.cfi_def_cfa_offset 32
 614 0004 00AF     		add	r7, sp, #0
 615              	.LCFI30:
 616              		.cfi_def_cfa_register 7
 617 0006 7860     		str	r0, [r7, #4]
 538:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 540:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 618              		.loc 1 540 0
 619 0008 3C1C     		mov	r4, r7
 620 000a 0F34     		add	r4, r4, #15
 621 000c FFF7FEFF 		bl	CyEnterCriticalSection
 622 0010 031C     		mov	r3, r0
 623 0012 2370     		strb	r3, [r4]
 541:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 542:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_PWM_STOP_KILL_MASK;
 624              		.loc 1 542 0
 625 0014 0B4B     		ldr	r3, .L33
 626 0016 0B4A     		ldr	r2, .L33
 627 0018 1268     		ldr	r2, [r2]
 628 001a 0821     		mov	r1, #8
 629 001c 8A43     		bic	r2, r1
 630 001e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_Servo_1BIT_MASK)  <<
 631              		.loc 1 543 0
 632 0020 084B     		ldr	r3, .L33
 633 0022 084A     		ldr	r2, .L33
 634 0024 1168     		ldr	r1, [r2]
 635 0026 7868     		ldr	r0, [r7, #4]
 636 0028 0122     		mov	r2, #1
 637 002a 0240     		and	r2, r0
 638 002c D200     		lsl	r2, r2, #3
 639 002e 0A43     		orr	r2, r1
 640 0030 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC4/PWM_Servo.c ****                                                          PWM_Servo_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 546:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 641              		.loc 1 546 0
 642 0032 3B1C     		mov	r3, r7
 643 0034 0F33     		add	r3, r3, #15
 644 0036 1B78     		ldrb	r3, [r3]
 645 0038 181C     		mov	r0, r3
 646 003a FFF7FEFF 		bl	CyExitCriticalSection
 547:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 647              		.loc 1 547 0
 648 003e BD46     		mov	sp, r7
 649 0040 05B0     		add	sp, sp, #20
 650              		@ sp needed for prologue
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 22


 651 0042 90BD     		pop	{r4, r7, pc}
 652              	.L34:
 653              		.align	2
 654              	.L33:
 655 0044 40010540 		.word	1074069824
 656              		.cfi_endproc
 657              	.LFE10:
 658              		.size	PWM_Servo_SetPWMStopOnKill, .-PWM_Servo_SetPWMStopOnKill
 659              		.section	.text.PWM_Servo_SetPWMDeadTime,"ax",%progbits
 660              		.align	2
 661              		.global	PWM_Servo_SetPWMDeadTime
 662              		.code	16
 663              		.thumb_func
 664              		.type	PWM_Servo_SetPWMDeadTime, %function
 665              	PWM_Servo_SetPWMDeadTime:
 666              	.LFB11:
 548:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 549:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 550:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 554:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 555:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/PWM_Servo.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/PWM_Servo.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/PWM_Servo.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 560:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 561:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 562:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 565:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 566:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 567:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 568:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 667              		.loc 1 570 0
 668              		.cfi_startproc
 669 0000 90B5     		push	{r4, r7, lr}
 670              	.LCFI31:
 671              		.cfi_def_cfa_offset 12
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 85B0     		sub	sp, sp, #20
 676              	.LCFI32:
 677              		.cfi_def_cfa_offset 32
 678 0004 00AF     		add	r7, sp, #0
 679              	.LCFI33:
 680              		.cfi_def_cfa_register 7
 681 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 573:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 23


 682              		.loc 1 573 0
 683 0008 3C1C     		mov	r4, r7
 684 000a 0F34     		add	r4, r4, #15
 685 000c FFF7FEFF 		bl	CyEnterCriticalSection
 686 0010 031C     		mov	r3, r0
 687 0012 2370     		strb	r3, [r4]
 574:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 575:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_PRESCALER_MASK;
 688              		.loc 1 575 0
 689 0014 0B4B     		ldr	r3, .L36
 690 0016 0B4A     		ldr	r2, .L36
 691 0018 1168     		ldr	r1, [r2]
 692 001a 0B4A     		ldr	r2, .L36+4
 693 001c 0A40     		and	r2, r1
 694 001e 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= ((uint32)((deadTime & PWM_Servo_8BIT_MASK) <<
 695              		.loc 1 576 0
 696 0020 084B     		ldr	r3, .L36
 697 0022 084A     		ldr	r2, .L36
 698 0024 1168     		ldr	r1, [r2]
 699 0026 7A68     		ldr	r2, [r7, #4]
 700 0028 1202     		lsl	r2, r2, #8
 701 002a 1204     		lsl	r2, r2, #16
 702 002c 120C     		lsr	r2, r2, #16
 703 002e 0A43     		orr	r2, r1
 704 0030 1A60     		str	r2, [r3]
 577:.\Generated_Source\PSoC4/PWM_Servo.c ****                                                           PWM_Servo_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 579:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 705              		.loc 1 579 0
 706 0032 3B1C     		mov	r3, r7
 707 0034 0F33     		add	r3, r3, #15
 708 0036 1B78     		ldrb	r3, [r3]
 709 0038 181C     		mov	r0, r3
 710 003a FFF7FEFF 		bl	CyExitCriticalSection
 580:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 711              		.loc 1 580 0
 712 003e BD46     		mov	sp, r7
 713 0040 05B0     		add	sp, sp, #20
 714              		@ sp needed for prologue
 715 0042 90BD     		pop	{r4, r7, pc}
 716              	.L37:
 717              		.align	2
 718              	.L36:
 719 0044 40010540 		.word	1074069824
 720 0048 FF00FFFF 		.word	-65281
 721              		.cfi_endproc
 722              	.LFE11:
 723              		.size	PWM_Servo_SetPWMDeadTime, .-PWM_Servo_SetPWMDeadTime
 724              		.section	.text.PWM_Servo_SetPWMInvert,"ax",%progbits
 725              		.align	2
 726              		.global	PWM_Servo_SetPWMInvert
 727              		.code	16
 728              		.thumb_func
 729              		.type	PWM_Servo_SetPWMInvert, %function
 730              	PWM_Servo_SetPWMInvert:
 731              	.LFB12:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 24


 581:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 582:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 583:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPWMInvert
 585:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 587:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 588:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/PWM_Servo.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/PWM_Servo.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 592:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 593:.\Generated_Source\PSoC4/PWM_Servo.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 595:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/PWM_Servo.c **** *         - PWM_Servo_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 598:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 599:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 600:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 601:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 732              		.loc 1 603 0
 733              		.cfi_startproc
 734 0000 90B5     		push	{r4, r7, lr}
 735              	.LCFI34:
 736              		.cfi_def_cfa_offset 12
 737              		.cfi_offset 4, -12
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 85B0     		sub	sp, sp, #20
 741              	.LCFI35:
 742              		.cfi_def_cfa_offset 32
 743 0004 00AF     		add	r7, sp, #0
 744              	.LCFI36:
 745              		.cfi_def_cfa_register 7
 746 0006 7860     		str	r0, [r7, #4]
 604:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 606:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 747              		.loc 1 606 0
 748 0008 3C1C     		mov	r4, r7
 749 000a 0F34     		add	r4, r4, #15
 750 000c FFF7FEFF 		bl	CyEnterCriticalSection
 751 0010 031C     		mov	r3, r0
 752 0012 2370     		strb	r3, [r4]
 607:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 608:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_INV_OUT_MASK;
 753              		.loc 1 608 0
 754 0014 0A4B     		ldr	r3, .L39
 755 0016 0A4A     		ldr	r2, .L39
 756 0018 1168     		ldr	r1, [r2]
 757 001a 0A4A     		ldr	r2, .L39+4
 758 001c 0A40     		and	r2, r1
 759 001e 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= mask;
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 25


 760              		.loc 1 609 0
 761 0020 074B     		ldr	r3, .L39
 762 0022 074A     		ldr	r2, .L39
 763 0024 1168     		ldr	r1, [r2]
 764 0026 7A68     		ldr	r2, [r7, #4]
 765 0028 0A43     		orr	r2, r1
 766 002a 1A60     		str	r2, [r3]
 610:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 611:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 767              		.loc 1 611 0
 768 002c 3B1C     		mov	r3, r7
 769 002e 0F33     		add	r3, r3, #15
 770 0030 1B78     		ldrb	r3, [r3]
 771 0032 181C     		mov	r0, r3
 772 0034 FFF7FEFF 		bl	CyExitCriticalSection
 612:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 773              		.loc 1 612 0
 774 0038 BD46     		mov	sp, r7
 775 003a 05B0     		add	sp, sp, #20
 776              		@ sp needed for prologue
 777 003c 90BD     		pop	{r4, r7, pc}
 778              	.L40:
 779 003e C046     		.align	2
 780              	.L39:
 781 0040 40010540 		.word	1074069824
 782 0044 FFFFCFFF 		.word	-3145729
 783              		.cfi_endproc
 784              	.LFE12:
 785              		.size	PWM_Servo_SetPWMInvert, .-PWM_Servo_SetPWMInvert
 786              		.section	.text.PWM_Servo_WriteCounter,"ax",%progbits
 787              		.align	2
 788              		.global	PWM_Servo_WriteCounter
 789              		.code	16
 790              		.thumb_func
 791              		.type	PWM_Servo_WriteCounter, %function
 792              	PWM_Servo_WriteCounter:
 793              	.LFB13:
 613:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 614:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 615:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 616:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_WriteCounter
 618:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 620:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 621:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/PWM_Servo.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/PWM_Servo.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 625:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 626:.\Generated_Source\PSoC4/PWM_Servo.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 628:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 629:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 630:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 631:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_WriteCounter(uint32 count)
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 26


 633:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 794              		.loc 1 633 0
 795              		.cfi_startproc
 796 0000 80B5     		push	{r7, lr}
 797              	.LCFI37:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 82B0     		sub	sp, sp, #8
 802              	.LCFI38:
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              	.LCFI39:
 806              		.cfi_def_cfa_register 7
 807 0006 7860     		str	r0, [r7, #4]
 634:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_COUNTER_REG = (count & PWM_Servo_16BIT_MASK);
 808              		.loc 1 634 0
 809 0008 034B     		ldr	r3, .L42
 810 000a 7A68     		ldr	r2, [r7, #4]
 811 000c 1204     		lsl	r2, r2, #16
 812 000e 120C     		lsr	r2, r2, #16
 813 0010 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 814              		.loc 1 635 0
 815 0012 BD46     		mov	sp, r7
 816 0014 02B0     		add	sp, sp, #8
 817              		@ sp needed for prologue
 818 0016 80BD     		pop	{r7, pc}
 819              	.L43:
 820              		.align	2
 821              	.L42:
 822 0018 48010540 		.word	1074069832
 823              		.cfi_endproc
 824              	.LFE13:
 825              		.size	PWM_Servo_WriteCounter, .-PWM_Servo_WriteCounter
 826              		.section	.text.PWM_Servo_ReadCounter,"ax",%progbits
 827              		.align	2
 828              		.global	PWM_Servo_ReadCounter
 829              		.code	16
 830              		.thumb_func
 831              		.type	PWM_Servo_ReadCounter, %function
 832              	PWM_Servo_ReadCounter:
 833              	.LFB14:
 636:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 637:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 638:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadCounter
 640:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 642:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 643:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 645:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 646:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 647:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 648:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 649:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Current counter value
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 27


 650:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 651:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadCounter(void)
 653:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 834              		.loc 1 653 0
 835              		.cfi_startproc
 836 0000 80B5     		push	{r7, lr}
 837              	.LCFI40:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 00AF     		add	r7, sp, #0
 842              	.LCFI41:
 843              		.cfi_def_cfa_register 7
 654:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_COUNTER_REG & PWM_Servo_16BIT_MASK);
 844              		.loc 1 654 0
 845 0004 034B     		ldr	r3, .L46
 846 0006 1B68     		ldr	r3, [r3]
 847 0008 1B04     		lsl	r3, r3, #16
 848 000a 1B0C     		lsr	r3, r3, #16
 655:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 849              		.loc 1 655 0
 850 000c 181C     		mov	r0, r3
 851 000e BD46     		mov	sp, r7
 852              		@ sp needed for prologue
 853 0010 80BD     		pop	{r7, pc}
 854              	.L47:
 855 0012 C046     		.align	2
 856              	.L46:
 857 0014 48010540 		.word	1074069832
 858              		.cfi_endproc
 859              	.LFE14:
 860              		.size	PWM_Servo_ReadCounter, .-PWM_Servo_ReadCounter
 861              		.section	.text.PWM_Servo_SetCounterMode,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_Servo_SetCounterMode
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_Servo_SetCounterMode, %function
 867              	PWM_Servo_SetCounterMode:
 868              	.LFB15:
 656:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 657:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 658:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetCounterMode
 660:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 662:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 663:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/PWM_Servo.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 666:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 667:.\Generated_Source\PSoC4/PWM_Servo.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 669:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_COUNT_UPDOWN0  - Counts up and down. Terminal count
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 28


 672:.\Generated_Source\PSoC4/PWM_Servo.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/PWM_Servo.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/PWM_Servo.c **** *                                         and period
 676:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 677:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 678:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 679:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 680:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 869              		.loc 1 682 0
 870              		.cfi_startproc
 871 0000 90B5     		push	{r4, r7, lr}
 872              	.LCFI42:
 873              		.cfi_def_cfa_offset 12
 874              		.cfi_offset 4, -12
 875              		.cfi_offset 7, -8
 876              		.cfi_offset 14, -4
 877 0002 85B0     		sub	sp, sp, #20
 878              	.LCFI43:
 879              		.cfi_def_cfa_offset 32
 880 0004 00AF     		add	r7, sp, #0
 881              	.LCFI44:
 882              		.cfi_def_cfa_register 7
 883 0006 7860     		str	r0, [r7, #4]
 683:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 685:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 884              		.loc 1 685 0
 885 0008 3C1C     		mov	r4, r7
 886 000a 0F34     		add	r4, r4, #15
 887 000c FFF7FEFF 		bl	CyEnterCriticalSection
 888 0010 031C     		mov	r3, r0
 889 0012 2370     		strb	r3, [r4]
 686:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 687:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_UPDOWN_MASK;
 890              		.loc 1 687 0
 891 0014 0A4B     		ldr	r3, .L49
 892 0016 0A4A     		ldr	r2, .L49
 893 0018 1168     		ldr	r1, [r2]
 894 001a 0A4A     		ldr	r2, .L49+4
 895 001c 0A40     		and	r2, r1
 896 001e 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= counterMode;
 897              		.loc 1 688 0
 898 0020 074B     		ldr	r3, .L49
 899 0022 074A     		ldr	r2, .L49
 900 0024 1168     		ldr	r1, [r2]
 901 0026 7A68     		ldr	r2, [r7, #4]
 902 0028 0A43     		orr	r2, r1
 903 002a 1A60     		str	r2, [r3]
 689:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 690:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 904              		.loc 1 690 0
 905 002c 3B1C     		mov	r3, r7
 906 002e 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 29


 907 0030 1B78     		ldrb	r3, [r3]
 908 0032 181C     		mov	r0, r3
 909 0034 FFF7FEFF 		bl	CyExitCriticalSection
 691:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 910              		.loc 1 691 0
 911 0038 BD46     		mov	sp, r7
 912 003a 05B0     		add	sp, sp, #20
 913              		@ sp needed for prologue
 914 003c 90BD     		pop	{r4, r7, pc}
 915              	.L50:
 916 003e C046     		.align	2
 917              	.L49:
 918 0040 40010540 		.word	1074069824
 919 0044 FFFFFCFF 		.word	-196609
 920              		.cfi_endproc
 921              	.LFE15:
 922              		.size	PWM_Servo_SetCounterMode, .-PWM_Servo_SetCounterMode
 923              		.section	.text.PWM_Servo_WritePeriod,"ax",%progbits
 924              		.align	2
 925              		.global	PWM_Servo_WritePeriod
 926              		.code	16
 927              		.thumb_func
 928              		.type	PWM_Servo_WritePeriod, %function
 929              	PWM_Servo_WritePeriod:
 930              	.LFB16:
 692:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 693:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 694:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_WritePeriod
 696:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 698:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 699:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/PWM_Servo.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/PWM_Servo.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 703:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 704:.\Generated_Source\PSoC4/PWM_Servo.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 706:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 707:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 708:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 709:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 931              		.loc 1 711 0
 932              		.cfi_startproc
 933 0000 80B5     		push	{r7, lr}
 934              	.LCFI45:
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              	.LCFI46:
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              	.LCFI47:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 30


 943              		.cfi_def_cfa_register 7
 944 0006 7860     		str	r0, [r7, #4]
 712:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_PERIOD_REG = (period & PWM_Servo_16BIT_MASK);
 945              		.loc 1 712 0
 946 0008 034B     		ldr	r3, .L52
 947 000a 7A68     		ldr	r2, [r7, #4]
 948 000c 1204     		lsl	r2, r2, #16
 949 000e 120C     		lsr	r2, r2, #16
 950 0010 1A60     		str	r2, [r3]
 713:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 951              		.loc 1 713 0
 952 0012 BD46     		mov	sp, r7
 953 0014 02B0     		add	sp, sp, #8
 954              		@ sp needed for prologue
 955 0016 80BD     		pop	{r7, pc}
 956              	.L53:
 957              		.align	2
 958              	.L52:
 959 0018 54010540 		.word	1074069844
 960              		.cfi_endproc
 961              	.LFE16:
 962              		.size	PWM_Servo_WritePeriod, .-PWM_Servo_WritePeriod
 963              		.section	.text.PWM_Servo_ReadPeriod,"ax",%progbits
 964              		.align	2
 965              		.global	PWM_Servo_ReadPeriod
 966              		.code	16
 967              		.thumb_func
 968              		.type	PWM_Servo_ReadPeriod, %function
 969              	PWM_Servo_ReadPeriod:
 970              	.LFB17:
 714:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 715:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 716:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadPeriod
 718:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 720:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 721:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 723:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 725:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 726:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 727:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Period value
 728:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 729:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 971              		.loc 1 731 0
 972              		.cfi_startproc
 973 0000 80B5     		push	{r7, lr}
 974              	.LCFI48:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 0002 00AF     		add	r7, sp, #0
 979              	.LCFI49:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 31


 980              		.cfi_def_cfa_register 7
 732:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_PERIOD_REG & PWM_Servo_16BIT_MASK);
 981              		.loc 1 732 0
 982 0004 034B     		ldr	r3, .L56
 983 0006 1B68     		ldr	r3, [r3]
 984 0008 1B04     		lsl	r3, r3, #16
 985 000a 1B0C     		lsr	r3, r3, #16
 733:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 986              		.loc 1 733 0
 987 000c 181C     		mov	r0, r3
 988 000e BD46     		mov	sp, r7
 989              		@ sp needed for prologue
 990 0010 80BD     		pop	{r7, pc}
 991              	.L57:
 992 0012 C046     		.align	2
 993              	.L56:
 994 0014 54010540 		.word	1074069844
 995              		.cfi_endproc
 996              	.LFE17:
 997              		.size	PWM_Servo_ReadPeriod, .-PWM_Servo_ReadPeriod
 998              		.section	.text.PWM_Servo_SetCompareSwap,"ax",%progbits
 999              		.align	2
 1000              		.global	PWM_Servo_SetCompareSwap
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	PWM_Servo_SetCompareSwap, %function
 1004              	PWM_Servo_SetCompareSwap:
 1005              	.LFB18:
 734:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 735:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 736:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetCompareSwap
 738:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 740:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 741:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/PWM_Servo.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/PWM_Servo.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/PWM_Servo.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 746:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 747:.\Generated_Source\PSoC4/PWM_Servo.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 749:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 752:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 753:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 754:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 755:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1006              		.loc 1 757 0
 1007              		.cfi_startproc
 1008 0000 90B5     		push	{r4, r7, lr}
 1009              	.LCFI50:
 1010              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 32


 1011              		.cfi_offset 4, -12
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 85B0     		sub	sp, sp, #20
 1015              	.LCFI51:
 1016              		.cfi_def_cfa_offset 32
 1017 0004 00AF     		add	r7, sp, #0
 1018              	.LCFI52:
 1019              		.cfi_def_cfa_register 7
 1020 0006 7860     		str	r0, [r7, #4]
 758:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 760:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1021              		.loc 1 760 0
 1022 0008 3C1C     		mov	r4, r7
 1023 000a 0F34     		add	r4, r4, #15
 1024 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1025 0010 031C     		mov	r3, r0
 1026 0012 2370     		strb	r3, [r4]
 761:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 762:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_RELOAD_CC_MASK;
 1027              		.loc 1 762 0
 1028 0014 0B4B     		ldr	r3, .L59
 1029 0016 0B4A     		ldr	r2, .L59
 1030 0018 1268     		ldr	r2, [r2]
 1031 001a 0121     		mov	r1, #1
 1032 001c 8A43     		bic	r2, r1
 1033 001e 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= (swapEnable & PWM_Servo_1BIT_MASK);
 1034              		.loc 1 763 0
 1035 0020 084B     		ldr	r3, .L59
 1036 0022 084A     		ldr	r2, .L59
 1037 0024 1168     		ldr	r1, [r2]
 1038 0026 7868     		ldr	r0, [r7, #4]
 1039 0028 0122     		mov	r2, #1
 1040 002a 0240     		and	r2, r0
 1041 002c 0A43     		orr	r2, r1
 1042 002e 1A60     		str	r2, [r3]
 764:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 765:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1043              		.loc 1 765 0
 1044 0030 3B1C     		mov	r3, r7
 1045 0032 0F33     		add	r3, r3, #15
 1046 0034 1B78     		ldrb	r3, [r3]
 1047 0036 181C     		mov	r0, r3
 1048 0038 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1049              		.loc 1 766 0
 1050 003c BD46     		mov	sp, r7
 1051 003e 05B0     		add	sp, sp, #20
 1052              		@ sp needed for prologue
 1053 0040 90BD     		pop	{r4, r7, pc}
 1054              	.L60:
 1055 0042 C046     		.align	2
 1056              	.L59:
 1057 0044 40010540 		.word	1074069824
 1058              		.cfi_endproc
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 33


 1059              	.LFE18:
 1060              		.size	PWM_Servo_SetCompareSwap, .-PWM_Servo_SetCompareSwap
 1061              		.section	.text.PWM_Servo_WritePeriodBuf,"ax",%progbits
 1062              		.align	2
 1063              		.global	PWM_Servo_WritePeriodBuf
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	PWM_Servo_WritePeriodBuf, %function
 1067              	PWM_Servo_WritePeriodBuf:
 1068              	.LFB19:
 767:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 768:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 769:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_WritePeriodBuf
 771:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 773:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 774:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 776:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 777:.\Generated_Source\PSoC4/PWM_Servo.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 779:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 780:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 781:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 782:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1069              		.loc 1 784 0
 1070              		.cfi_startproc
 1071 0000 80B5     		push	{r7, lr}
 1072              	.LCFI53:
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 82B0     		sub	sp, sp, #8
 1077              	.LCFI54:
 1078              		.cfi_def_cfa_offset 16
 1079 0004 00AF     		add	r7, sp, #0
 1080              	.LCFI55:
 1081              		.cfi_def_cfa_register 7
 1082 0006 7860     		str	r0, [r7, #4]
 785:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_PERIOD_BUF_REG = (periodBuf & PWM_Servo_16BIT_MASK);
 1083              		.loc 1 785 0
 1084 0008 034B     		ldr	r3, .L62
 1085 000a 7A68     		ldr	r2, [r7, #4]
 1086 000c 1204     		lsl	r2, r2, #16
 1087 000e 120C     		lsr	r2, r2, #16
 1088 0010 1A60     		str	r2, [r3]
 786:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1089              		.loc 1 786 0
 1090 0012 BD46     		mov	sp, r7
 1091 0014 02B0     		add	sp, sp, #8
 1092              		@ sp needed for prologue
 1093 0016 80BD     		pop	{r7, pc}
 1094              	.L63:
 1095              		.align	2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 34


 1096              	.L62:
 1097 0018 58010540 		.word	1074069848
 1098              		.cfi_endproc
 1099              	.LFE19:
 1100              		.size	PWM_Servo_WritePeriodBuf, .-PWM_Servo_WritePeriodBuf
 1101              		.section	.text.PWM_Servo_ReadPeriodBuf,"ax",%progbits
 1102              		.align	2
 1103              		.global	PWM_Servo_ReadPeriodBuf
 1104              		.code	16
 1105              		.thumb_func
 1106              		.type	PWM_Servo_ReadPeriodBuf, %function
 1107              	PWM_Servo_ReadPeriodBuf:
 1108              	.LFB20:
 787:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 788:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 789:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 793:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 794:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 796:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 798:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 799:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 800:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Period value
 801:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 802:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1109              		.loc 1 804 0
 1110              		.cfi_startproc
 1111 0000 80B5     		push	{r7, lr}
 1112              	.LCFI56:
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 14, -4
 1116 0002 00AF     		add	r7, sp, #0
 1117              	.LCFI57:
 1118              		.cfi_def_cfa_register 7
 805:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_PERIOD_BUF_REG & PWM_Servo_16BIT_MASK);
 1119              		.loc 1 805 0
 1120 0004 034B     		ldr	r3, .L66
 1121 0006 1B68     		ldr	r3, [r3]
 1122 0008 1B04     		lsl	r3, r3, #16
 1123 000a 1B0C     		lsr	r3, r3, #16
 806:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1124              		.loc 1 806 0
 1125 000c 181C     		mov	r0, r3
 1126 000e BD46     		mov	sp, r7
 1127              		@ sp needed for prologue
 1128 0010 80BD     		pop	{r7, pc}
 1129              	.L67:
 1130 0012 C046     		.align	2
 1131              	.L66:
 1132 0014 58010540 		.word	1074069848
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 35


 1133              		.cfi_endproc
 1134              	.LFE20:
 1135              		.size	PWM_Servo_ReadPeriodBuf, .-PWM_Servo_ReadPeriodBuf
 1136              		.section	.text.PWM_Servo_SetPeriodSwap,"ax",%progbits
 1137              		.align	2
 1138              		.global	PWM_Servo_SetPeriodSwap
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	PWM_Servo_SetPeriodSwap, %function
 1142              	PWM_Servo_SetPeriodSwap:
 1143              	.LFB21:
 807:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 808:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 809:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetPeriodSwap
 811:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 813:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 814:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/PWM_Servo.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/PWM_Servo.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/PWM_Servo.c **** *  switch event.
 818:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 819:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 820:.\Generated_Source\PSoC4/PWM_Servo.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
 822:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 825:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 826:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 827:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 828:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1144              		.loc 1 830 0
 1145              		.cfi_startproc
 1146 0000 90B5     		push	{r4, r7, lr}
 1147              	.LCFI58:
 1148              		.cfi_def_cfa_offset 12
 1149              		.cfi_offset 4, -12
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 85B0     		sub	sp, sp, #20
 1153              	.LCFI59:
 1154              		.cfi_def_cfa_offset 32
 1155 0004 00AF     		add	r7, sp, #0
 1156              	.LCFI60:
 1157              		.cfi_def_cfa_register 7
 1158 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 833:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1159              		.loc 1 833 0
 1160 0008 3C1C     		mov	r4, r7
 1161 000a 0F34     		add	r4, r4, #15
 1162 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 36


 1163 0010 031C     		mov	r3, r0
 1164 0012 2370     		strb	r3, [r4]
 834:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 835:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG &= (uint32)~PWM_Servo_RELOAD_PERIOD_MASK;
 1165              		.loc 1 835 0
 1166 0014 0B4B     		ldr	r3, .L69
 1167 0016 0B4A     		ldr	r2, .L69
 1168 0018 1268     		ldr	r2, [r2]
 1169 001a 0221     		mov	r1, #2
 1170 001c 8A43     		bic	r2, r1
 1171 001e 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_CONTROL_REG |= ((uint32)((swapEnable & PWM_Servo_1BIT_MASK) <<
 1172              		.loc 1 836 0
 1173 0020 084B     		ldr	r3, .L69
 1174 0022 084A     		ldr	r2, .L69
 1175 0024 1168     		ldr	r1, [r2]
 1176 0026 7868     		ldr	r0, [r7, #4]
 1177 0028 0122     		mov	r2, #1
 1178 002a 0240     		and	r2, r0
 1179 002c 5200     		lsl	r2, r2, #1
 1180 002e 0A43     		orr	r2, r1
 1181 0030 1A60     		str	r2, [r3]
 837:.\Generated_Source\PSoC4/PWM_Servo.c ****                                                             PWM_Servo_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 839:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1182              		.loc 1 839 0
 1183 0032 3B1C     		mov	r3, r7
 1184 0034 0F33     		add	r3, r3, #15
 1185 0036 1B78     		ldrb	r3, [r3]
 1186 0038 181C     		mov	r0, r3
 1187 003a FFF7FEFF 		bl	CyExitCriticalSection
 840:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1188              		.loc 1 840 0
 1189 003e BD46     		mov	sp, r7
 1190 0040 05B0     		add	sp, sp, #20
 1191              		@ sp needed for prologue
 1192 0042 90BD     		pop	{r4, r7, pc}
 1193              	.L70:
 1194              		.align	2
 1195              	.L69:
 1196 0044 40010540 		.word	1074069824
 1197              		.cfi_endproc
 1198              	.LFE21:
 1199              		.size	PWM_Servo_SetPeriodSwap, .-PWM_Servo_SetPeriodSwap
 1200              		.section	.text.PWM_Servo_WriteCompare,"ax",%progbits
 1201              		.align	2
 1202              		.global	PWM_Servo_WriteCompare
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	PWM_Servo_WriteCompare, %function
 1206              	PWM_Servo_WriteCompare:
 1207              	.LFB22:
 841:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 842:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 843:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_WriteCompare
 845:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 37


 846:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 847:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 848:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/PWM_Servo.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 851:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 852:.\Generated_Source\PSoC4/PWM_Servo.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 854:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 855:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 856:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 857:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1208              		.loc 1 859 0
 1209              		.cfi_startproc
 1210 0000 80B5     		push	{r7, lr}
 1211              	.LCFI61:
 1212              		.cfi_def_cfa_offset 8
 1213              		.cfi_offset 7, -8
 1214              		.cfi_offset 14, -4
 1215 0002 82B0     		sub	sp, sp, #8
 1216              	.LCFI62:
 1217              		.cfi_def_cfa_offset 16
 1218 0004 00AF     		add	r7, sp, #0
 1219              	.LCFI63:
 1220              		.cfi_def_cfa_register 7
 1221 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/PWM_Servo.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 864:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/PWM_Servo.c ****         currentMode = ((PWM_Servo_CONTROL_REG & PWM_Servo_UPDOWN_MASK) >> PWM_Servo_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 867:.\Generated_Source\PSoC4/PWM_Servo.c ****         if (PWM_Servo__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 869:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_COMP_CAP_REG = ((compare + 1u) & PWM_Servo_16BIT_MASK);
 870:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 871:.\Generated_Source\PSoC4/PWM_Servo.c ****         else if (PWM_Servo__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 873:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_COMP_CAP_REG = ((compare - 1u) & PWM_Servo_16BIT_MASK);
 874:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 875:.\Generated_Source\PSoC4/PWM_Servo.c ****         else
 876:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 877:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_COMP_CAP_REG = (compare & PWM_Servo_16BIT_MASK);
 878:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 879:.\Generated_Source\PSoC4/PWM_Servo.c ****     #else
 880:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_COMP_CAP_REG = (compare & PWM_Servo_16BIT_MASK);
 1222              		.loc 1 880 0
 1223 0008 034B     		ldr	r3, .L72
 1224 000a 7A68     		ldr	r2, [r7, #4]
 1225 000c 1204     		lsl	r2, r2, #16
 1226 000e 120C     		lsr	r2, r2, #16
 1227 0010 1A60     		str	r2, [r3]
 881:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/PWM_Servo.c **** }
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 38


 1228              		.loc 1 882 0
 1229 0012 BD46     		mov	sp, r7
 1230 0014 02B0     		add	sp, sp, #8
 1231              		@ sp needed for prologue
 1232 0016 80BD     		pop	{r7, pc}
 1233              	.L73:
 1234              		.align	2
 1235              	.L72:
 1236 0018 4C010540 		.word	1074069836
 1237              		.cfi_endproc
 1238              	.LFE22:
 1239              		.size	PWM_Servo_WriteCompare, .-PWM_Servo_WriteCompare
 1240              		.section	.text.PWM_Servo_ReadCompare,"ax",%progbits
 1241              		.align	2
 1242              		.global	PWM_Servo_ReadCompare
 1243              		.code	16
 1244              		.thumb_func
 1245              		.type	PWM_Servo_ReadCompare, %function
 1246              	PWM_Servo_ReadCompare:
 1247              	.LFB23:
 883:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 884:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 885:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadCompare
 887:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 889:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 890:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/PWM_Servo.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 893:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 894:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 895:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 896:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 897:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Compare value
 898:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 899:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1248              		.loc 1 901 0
 1249              		.cfi_startproc
 1250 0000 80B5     		push	{r7, lr}
 1251              	.LCFI64:
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 00AF     		add	r7, sp, #0
 1256              	.LCFI65:
 1257              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/PWM_Servo.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM_Servo.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 907:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/PWM_Servo.c ****         currentMode = ((PWM_Servo_CONTROL_REG & PWM_Servo_UPDOWN_MASK) >> PWM_Servo_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM_Servo.c **** 
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 39


 910:.\Generated_Source\PSoC4/PWM_Servo.c ****         if (PWM_Servo__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 912:.\Generated_Source\PSoC4/PWM_Servo.c ****             regVal = ((PWM_Servo_COMP_CAP_REG - 1u) & PWM_Servo_16BIT_MASK);
 913:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 914:.\Generated_Source\PSoC4/PWM_Servo.c ****         else if (PWM_Servo__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 916:.\Generated_Source\PSoC4/PWM_Servo.c ****             regVal = ((PWM_Servo_COMP_CAP_REG + 1u) & PWM_Servo_16BIT_MASK);
 917:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 918:.\Generated_Source\PSoC4/PWM_Servo.c ****         else
 919:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 920:.\Generated_Source\PSoC4/PWM_Servo.c ****             regVal = (PWM_Servo_COMP_CAP_REG & PWM_Servo_16BIT_MASK);
 921:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 922:.\Generated_Source\PSoC4/PWM_Servo.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/PWM_Servo.c ****     #else
 924:.\Generated_Source\PSoC4/PWM_Servo.c ****         return (PWM_Servo_COMP_CAP_REG & PWM_Servo_16BIT_MASK);
 1258              		.loc 1 924 0
 1259 0004 034B     		ldr	r3, .L76
 1260 0006 1B68     		ldr	r3, [r3]
 1261 0008 1B04     		lsl	r3, r3, #16
 1262 000a 1B0C     		lsr	r3, r3, #16
 925:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1263              		.loc 1 926 0
 1264 000c 181C     		mov	r0, r3
 1265 000e BD46     		mov	sp, r7
 1266              		@ sp needed for prologue
 1267 0010 80BD     		pop	{r7, pc}
 1268              	.L77:
 1269 0012 C046     		.align	2
 1270              	.L76:
 1271 0014 4C010540 		.word	1074069836
 1272              		.cfi_endproc
 1273              	.LFE23:
 1274              		.size	PWM_Servo_ReadCompare, .-PWM_Servo_ReadCompare
 1275              		.section	.text.PWM_Servo_WriteCompareBuf,"ax",%progbits
 1276              		.align	2
 1277              		.global	PWM_Servo_WriteCompareBuf
 1278              		.code	16
 1279              		.thumb_func
 1280              		.type	PWM_Servo_WriteCompareBuf, %function
 1281              	PWM_Servo_WriteCompareBuf:
 1282              	.LFB24:
 927:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 928:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 929:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_WriteCompareBuf
 931:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 933:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 934:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/PWM_Servo.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 937:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 938:.\Generated_Source\PSoC4/PWM_Servo.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 940:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 941:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 40


 942:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 943:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1283              		.loc 1 945 0
 1284              		.cfi_startproc
 1285 0000 80B5     		push	{r7, lr}
 1286              	.LCFI66:
 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 7, -8
 1289              		.cfi_offset 14, -4
 1290 0002 82B0     		sub	sp, sp, #8
 1291              	.LCFI67:
 1292              		.cfi_def_cfa_offset 16
 1293 0004 00AF     		add	r7, sp, #0
 1294              	.LCFI68:
 1295              		.cfi_def_cfa_register 7
 1296 0006 7860     		str	r0, [r7, #4]
 946:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/PWM_Servo.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 950:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/PWM_Servo.c ****         currentMode = ((PWM_Servo_CONTROL_REG & PWM_Servo_UPDOWN_MASK) >> PWM_Servo_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 953:.\Generated_Source\PSoC4/PWM_Servo.c ****         if (PWM_Servo__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 955:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_COMP_CAP_BUF_REG = ((compareBuf + 1u) & PWM_Servo_16BIT_MASK);
 956:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 957:.\Generated_Source\PSoC4/PWM_Servo.c ****         else if (PWM_Servo__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 959:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_COMP_CAP_BUF_REG = ((compareBuf - 1u) & PWM_Servo_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 961:.\Generated_Source\PSoC4/PWM_Servo.c ****         else
 962:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 963:.\Generated_Source\PSoC4/PWM_Servo.c ****             PWM_Servo_COMP_CAP_BUF_REG = (compareBuf & PWM_Servo_16BIT_MASK);
 964:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
 965:.\Generated_Source\PSoC4/PWM_Servo.c ****     #else
 966:.\Generated_Source\PSoC4/PWM_Servo.c ****         PWM_Servo_COMP_CAP_BUF_REG = (compareBuf & PWM_Servo_16BIT_MASK);
 1297              		.loc 1 966 0
 1298 0008 034B     		ldr	r3, .L79
 1299 000a 7A68     		ldr	r2, [r7, #4]
 1300 000c 1204     		lsl	r2, r2, #16
 1301 000e 120C     		lsr	r2, r2, #16
 1302 0010 1A60     		str	r2, [r3]
 967:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1303              		.loc 1 968 0
 1304 0012 BD46     		mov	sp, r7
 1305 0014 02B0     		add	sp, sp, #8
 1306              		@ sp needed for prologue
 1307 0016 80BD     		pop	{r7, pc}
 1308              	.L80:
 1309              		.align	2
 1310              	.L79:
 1311 0018 50010540 		.word	1074069840
 1312              		.cfi_endproc
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 41


 1313              	.LFE24:
 1314              		.size	PWM_Servo_WriteCompareBuf, .-PWM_Servo_WriteCompareBuf
 1315              		.section	.text.PWM_Servo_ReadCompareBuf,"ax",%progbits
 1316              		.align	2
 1317              		.global	PWM_Servo_ReadCompareBuf
 1318              		.code	16
 1319              		.thumb_func
 1320              		.type	PWM_Servo_ReadCompareBuf, %function
 1321              	PWM_Servo_ReadCompareBuf:
 1322              	.LFB25:
 969:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 970:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 971:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadCompareBuf
 973:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 975:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
 976:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 979:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
 980:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
 981:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 982:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
 983:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/PWM_Servo.c **** *
 985:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1323              		.loc 1 987 0
 1324              		.cfi_startproc
 1325 0000 80B5     		push	{r7, lr}
 1326              	.LCFI69:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 7, -8
 1329              		.cfi_offset 14, -4
 1330 0002 00AF     		add	r7, sp, #0
 1331              	.LCFI70:
 1332              		.cfi_def_cfa_register 7
 988:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/PWM_Servo.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/PWM_Servo.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 993:.\Generated_Source\PSoC4/PWM_Servo.c ****     #if (PWM_Servo_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/PWM_Servo.c ****         currentMode = ((PWM_Servo_CONTROL_REG & PWM_Servo_UPDOWN_MASK) >> PWM_Servo_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/PWM_Servo.c **** 
 996:.\Generated_Source\PSoC4/PWM_Servo.c ****         if (PWM_Servo__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
 998:.\Generated_Source\PSoC4/PWM_Servo.c ****             regVal = ((PWM_Servo_COMP_CAP_BUF_REG - 1u) & PWM_Servo_16BIT_MASK);
 999:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
1000:.\Generated_Source\PSoC4/PWM_Servo.c ****         else if (PWM_Servo__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
1002:.\Generated_Source\PSoC4/PWM_Servo.c ****             regVal = ((PWM_Servo_COMP_CAP_BUF_REG + 1u) & PWM_Servo_16BIT_MASK);
1003:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
1004:.\Generated_Source\PSoC4/PWM_Servo.c ****         else
1005:.\Generated_Source\PSoC4/PWM_Servo.c ****         {
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 42


1006:.\Generated_Source\PSoC4/PWM_Servo.c ****             regVal = (PWM_Servo_COMP_CAP_BUF_REG & PWM_Servo_16BIT_MASK);
1007:.\Generated_Source\PSoC4/PWM_Servo.c ****         }
1008:.\Generated_Source\PSoC4/PWM_Servo.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/PWM_Servo.c ****     #else
1010:.\Generated_Source\PSoC4/PWM_Servo.c ****         return (PWM_Servo_COMP_CAP_BUF_REG & PWM_Servo_16BIT_MASK);
 1333              		.loc 1 1010 0
 1334 0004 034B     		ldr	r3, .L83
 1335 0006 1B68     		ldr	r3, [r3]
 1336 0008 1B04     		lsl	r3, r3, #16
 1337 000a 1B0C     		lsr	r3, r3, #16
1011:.\Generated_Source\PSoC4/PWM_Servo.c ****     #endif /* (PWM_Servo_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1338              		.loc 1 1012 0
 1339 000c 181C     		mov	r0, r3
 1340 000e BD46     		mov	sp, r7
 1341              		@ sp needed for prologue
 1342 0010 80BD     		pop	{r7, pc}
 1343              	.L84:
 1344 0012 C046     		.align	2
 1345              	.L83:
 1346 0014 50010540 		.word	1074069840
 1347              		.cfi_endproc
 1348              	.LFE25:
 1349              		.size	PWM_Servo_ReadCompareBuf, .-PWM_Servo_ReadCompareBuf
 1350              		.section	.text.PWM_Servo_ReadCapture,"ax",%progbits
 1351              		.align	2
 1352              		.global	PWM_Servo_ReadCapture
 1353              		.code	16
 1354              		.thumb_func
 1355              		.type	PWM_Servo_ReadCapture, %function
 1356              	PWM_Servo_ReadCapture:
 1357              	.LFB26:
1013:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1014:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1015:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadCapture
1017:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1019:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1020:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1023:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1024:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1025:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1026:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1027:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Capture value
1028:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1029:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadCapture(void)
1031:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1358              		.loc 1 1031 0
 1359              		.cfi_startproc
 1360 0000 80B5     		push	{r7, lr}
 1361              	.LCFI71:
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 43


 1364              		.cfi_offset 14, -4
 1365 0002 00AF     		add	r7, sp, #0
 1366              	.LCFI72:
 1367              		.cfi_def_cfa_register 7
1032:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_COMP_CAP_REG & PWM_Servo_16BIT_MASK);
 1368              		.loc 1 1032 0
 1369 0004 034B     		ldr	r3, .L87
 1370 0006 1B68     		ldr	r3, [r3]
 1371 0008 1B04     		lsl	r3, r3, #16
 1372 000a 1B0C     		lsr	r3, r3, #16
1033:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1373              		.loc 1 1033 0
 1374 000c 181C     		mov	r0, r3
 1375 000e BD46     		mov	sp, r7
 1376              		@ sp needed for prologue
 1377 0010 80BD     		pop	{r7, pc}
 1378              	.L88:
 1379 0012 C046     		.align	2
 1380              	.L87:
 1381 0014 4C010540 		.word	1074069836
 1382              		.cfi_endproc
 1383              	.LFE26:
 1384              		.size	PWM_Servo_ReadCapture, .-PWM_Servo_ReadCapture
 1385              		.section	.text.PWM_Servo_ReadCaptureBuf,"ax",%progbits
 1386              		.align	2
 1387              		.global	PWM_Servo_ReadCaptureBuf
 1388              		.code	16
 1389              		.thumb_func
 1390              		.type	PWM_Servo_ReadCaptureBuf, %function
 1391              	PWM_Servo_ReadCaptureBuf:
 1392              	.LFB27:
1034:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1035:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1036:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1040:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1041:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1044:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1045:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1046:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1047:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1048:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1050:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1393              		.loc 1 1052 0
 1394              		.cfi_startproc
 1395 0000 80B5     		push	{r7, lr}
 1396              	.LCFI73:
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 44


 1400 0002 00AF     		add	r7, sp, #0
 1401              	.LCFI74:
 1402              		.cfi_def_cfa_register 7
1053:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_COMP_CAP_BUF_REG & PWM_Servo_16BIT_MASK);
 1403              		.loc 1 1053 0
 1404 0004 034B     		ldr	r3, .L91
 1405 0006 1B68     		ldr	r3, [r3]
 1406 0008 1B04     		lsl	r3, r3, #16
 1407 000a 1B0C     		lsr	r3, r3, #16
1054:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1408              		.loc 1 1054 0
 1409 000c 181C     		mov	r0, r3
 1410 000e BD46     		mov	sp, r7
 1411              		@ sp needed for prologue
 1412 0010 80BD     		pop	{r7, pc}
 1413              	.L92:
 1414 0012 C046     		.align	2
 1415              	.L91:
 1416 0014 50010540 		.word	1074069840
 1417              		.cfi_endproc
 1418              	.LFE27:
 1419              		.size	PWM_Servo_ReadCaptureBuf, .-PWM_Servo_ReadCaptureBuf
 1420              		.section	.text.PWM_Servo_SetCaptureMode,"ax",%progbits
 1421              		.align	2
 1422              		.global	PWM_Servo_SetCaptureMode
 1423              		.code	16
 1424              		.thumb_func
 1425              		.type	PWM_Servo_SetCaptureMode, %function
 1426              	PWM_Servo_SetCaptureMode:
 1427              	.LFB28:
1055:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1056:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1057:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetCaptureMode
1059:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1061:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1062:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/PWM_Servo.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1066:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1067:.\Generated_Source\PSoC4/PWM_Servo.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1069:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1074:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1075:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1076:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1077:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1428              		.loc 1 1079 0
 1429              		.cfi_startproc
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 45


 1430 0000 90B5     		push	{r4, r7, lr}
 1431              	.LCFI75:
 1432              		.cfi_def_cfa_offset 12
 1433              		.cfi_offset 4, -12
 1434              		.cfi_offset 7, -8
 1435              		.cfi_offset 14, -4
 1436 0002 85B0     		sub	sp, sp, #20
 1437              	.LCFI76:
 1438              		.cfi_def_cfa_offset 32
 1439 0004 00AF     		add	r7, sp, #0
 1440              	.LCFI77:
 1441              		.cfi_def_cfa_register 7
 1442 0006 7860     		str	r0, [r7, #4]
1080:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1082:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1443              		.loc 1 1082 0
 1444 0008 3C1C     		mov	r4, r7
 1445 000a 0F34     		add	r4, r4, #15
 1446 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1447 0010 031C     		mov	r3, r0
 1448 0012 2370     		strb	r3, [r4]
1083:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1084:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG &= (uint32)~PWM_Servo_CAPTURE_MASK;
 1449              		.loc 1 1084 0
 1450 0014 0A4B     		ldr	r3, .L94
 1451 0016 0A4A     		ldr	r2, .L94
 1452 0018 1268     		ldr	r2, [r2]
 1453 001a 0321     		mov	r1, #3
 1454 001c 8A43     		bic	r2, r1
 1455 001e 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG |= triggerMode;
 1456              		.loc 1 1085 0
 1457 0020 074B     		ldr	r3, .L94
 1458 0022 074A     		ldr	r2, .L94
 1459 0024 1168     		ldr	r1, [r2]
 1460 0026 7A68     		ldr	r2, [r7, #4]
 1461 0028 0A43     		orr	r2, r1
 1462 002a 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1087:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1463              		.loc 1 1087 0
 1464 002c 3B1C     		mov	r3, r7
 1465 002e 0F33     		add	r3, r3, #15
 1466 0030 1B78     		ldrb	r3, [r3]
 1467 0032 181C     		mov	r0, r3
 1468 0034 FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1469              		.loc 1 1088 0
 1470 0038 BD46     		mov	sp, r7
 1471 003a 05B0     		add	sp, sp, #20
 1472              		@ sp needed for prologue
 1473 003c 90BD     		pop	{r4, r7, pc}
 1474              	.L95:
 1475 003e C046     		.align	2
 1476              	.L94:
 1477 0040 64010540 		.word	1074069860
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 46


 1478              		.cfi_endproc
 1479              	.LFE28:
 1480              		.size	PWM_Servo_SetCaptureMode, .-PWM_Servo_SetCaptureMode
 1481              		.section	.text.PWM_Servo_SetReloadMode,"ax",%progbits
 1482              		.align	2
 1483              		.global	PWM_Servo_SetReloadMode
 1484              		.code	16
 1485              		.thumb_func
 1486              		.type	PWM_Servo_SetReloadMode, %function
 1487              	PWM_Servo_SetReloadMode:
 1488              	.LFB29:
1089:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1090:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1091:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetReloadMode
1093:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1095:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1096:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/PWM_Servo.c **** *  input.
1098:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1099:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1100:.\Generated_Source\PSoC4/PWM_Servo.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1102:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1107:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1108:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1109:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1110:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1489              		.loc 1 1112 0
 1490              		.cfi_startproc
 1491 0000 90B5     		push	{r4, r7, lr}
 1492              	.LCFI78:
 1493              		.cfi_def_cfa_offset 12
 1494              		.cfi_offset 4, -12
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 85B0     		sub	sp, sp, #20
 1498              	.LCFI79:
 1499              		.cfi_def_cfa_offset 32
 1500 0004 00AF     		add	r7, sp, #0
 1501              	.LCFI80:
 1502              		.cfi_def_cfa_register 7
 1503 0006 7860     		str	r0, [r7, #4]
1113:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1115:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1504              		.loc 1 1115 0
 1505 0008 3C1C     		mov	r4, r7
 1506 000a 0F34     		add	r4, r4, #15
 1507 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 47


 1508 0010 031C     		mov	r3, r0
 1509 0012 2370     		strb	r3, [r4]
1116:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1117:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG &= (uint32)~PWM_Servo_RELOAD_MASK;
 1510              		.loc 1 1117 0
 1511 0014 0A4B     		ldr	r3, .L97
 1512 0016 0A4A     		ldr	r2, .L97
 1513 0018 1268     		ldr	r2, [r2]
 1514 001a 3021     		mov	r1, #48
 1515 001c 8A43     		bic	r2, r1
 1516 001e 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Servo_RELOAD_SHIFT));
 1517              		.loc 1 1118 0
 1518 0020 074B     		ldr	r3, .L97
 1519 0022 074A     		ldr	r2, .L97
 1520 0024 1168     		ldr	r1, [r2]
 1521 0026 7A68     		ldr	r2, [r7, #4]
 1522 0028 1201     		lsl	r2, r2, #4
 1523 002a 0A43     		orr	r2, r1
 1524 002c 1A60     		str	r2, [r3]
1119:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1120:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1525              		.loc 1 1120 0
 1526 002e 3B1C     		mov	r3, r7
 1527 0030 0F33     		add	r3, r3, #15
 1528 0032 1B78     		ldrb	r3, [r3]
 1529 0034 181C     		mov	r0, r3
 1530 0036 FFF7FEFF 		bl	CyExitCriticalSection
1121:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1531              		.loc 1 1121 0
 1532 003a BD46     		mov	sp, r7
 1533 003c 05B0     		add	sp, sp, #20
 1534              		@ sp needed for prologue
 1535 003e 90BD     		pop	{r4, r7, pc}
 1536              	.L98:
 1537              		.align	2
 1538              	.L97:
 1539 0040 64010540 		.word	1074069860
 1540              		.cfi_endproc
 1541              	.LFE29:
 1542              		.size	PWM_Servo_SetReloadMode, .-PWM_Servo_SetReloadMode
 1543              		.section	.text.PWM_Servo_SetStartMode,"ax",%progbits
 1544              		.align	2
 1545              		.global	PWM_Servo_SetStartMode
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	PWM_Servo_SetStartMode, %function
 1549              	PWM_Servo_SetStartMode:
 1550              	.LFB30:
1122:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1123:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1124:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetStartMode
1126:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1128:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1129:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 48


1130:.\Generated_Source\PSoC4/PWM_Servo.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1132:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1133:.\Generated_Source\PSoC4/PWM_Servo.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1135:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1140:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1141:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1142:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1143:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1551              		.loc 1 1145 0
 1552              		.cfi_startproc
 1553 0000 90B5     		push	{r4, r7, lr}
 1554              	.LCFI81:
 1555              		.cfi_def_cfa_offset 12
 1556              		.cfi_offset 4, -12
 1557              		.cfi_offset 7, -8
 1558              		.cfi_offset 14, -4
 1559 0002 85B0     		sub	sp, sp, #20
 1560              	.LCFI82:
 1561              		.cfi_def_cfa_offset 32
 1562 0004 00AF     		add	r7, sp, #0
 1563              	.LCFI83:
 1564              		.cfi_def_cfa_register 7
 1565 0006 7860     		str	r0, [r7, #4]
1146:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1148:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1566              		.loc 1 1148 0
 1567 0008 3C1C     		mov	r4, r7
 1568 000a 0F34     		add	r4, r4, #15
 1569 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1570 0010 031C     		mov	r3, r0
 1571 0012 2370     		strb	r3, [r4]
1149:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1150:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG &= (uint32)~PWM_Servo_START_MASK;
 1572              		.loc 1 1150 0
 1573 0014 0A4B     		ldr	r3, .L100
 1574 0016 0A4A     		ldr	r2, .L100
 1575 0018 1168     		ldr	r1, [r2]
 1576 001a 0A4A     		ldr	r2, .L100+4
 1577 001c 0A40     		and	r2, r1
 1578 001e 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Servo_START_SHIFT));
 1579              		.loc 1 1151 0
 1580 0020 074B     		ldr	r3, .L100
 1581 0022 074A     		ldr	r2, .L100
 1582 0024 1168     		ldr	r1, [r2]
 1583 0026 7A68     		ldr	r2, [r7, #4]
 1584 0028 1202     		lsl	r2, r2, #8
 1585 002a 0A43     		orr	r2, r1
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 49


 1586 002c 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1153:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1587              		.loc 1 1153 0
 1588 002e 3B1C     		mov	r3, r7
 1589 0030 0F33     		add	r3, r3, #15
 1590 0032 1B78     		ldrb	r3, [r3]
 1591 0034 181C     		mov	r0, r3
 1592 0036 FFF7FEFF 		bl	CyExitCriticalSection
1154:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1593              		.loc 1 1154 0
 1594 003a BD46     		mov	sp, r7
 1595 003c 05B0     		add	sp, sp, #20
 1596              		@ sp needed for prologue
 1597 003e 90BD     		pop	{r4, r7, pc}
 1598              	.L101:
 1599              		.align	2
 1600              	.L100:
 1601 0040 64010540 		.word	1074069860
 1602 0044 FFFCFFFF 		.word	-769
 1603              		.cfi_endproc
 1604              	.LFE30:
 1605              		.size	PWM_Servo_SetStartMode, .-PWM_Servo_SetStartMode
 1606              		.section	.text.PWM_Servo_SetStopMode,"ax",%progbits
 1607              		.align	2
 1608              		.global	PWM_Servo_SetStopMode
 1609              		.code	16
 1610              		.thumb_func
 1611              		.type	PWM_Servo_SetStopMode, %function
 1612              	PWM_Servo_SetStopMode:
 1613              	.LFB31:
1155:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1156:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1157:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetStopMode
1159:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1161:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1162:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1164:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1165:.\Generated_Source\PSoC4/PWM_Servo.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1167:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1172:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1173:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1174:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1175:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1614              		.loc 1 1177 0
 1615              		.cfi_startproc
 1616 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 50


 1617              	.LCFI84:
 1618              		.cfi_def_cfa_offset 12
 1619              		.cfi_offset 4, -12
 1620              		.cfi_offset 7, -8
 1621              		.cfi_offset 14, -4
 1622 0002 85B0     		sub	sp, sp, #20
 1623              	.LCFI85:
 1624              		.cfi_def_cfa_offset 32
 1625 0004 00AF     		add	r7, sp, #0
 1626              	.LCFI86:
 1627              		.cfi_def_cfa_register 7
 1628 0006 7860     		str	r0, [r7, #4]
1178:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1180:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1629              		.loc 1 1180 0
 1630 0008 3C1C     		mov	r4, r7
 1631 000a 0F34     		add	r4, r4, #15
 1632 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1633 0010 031C     		mov	r3, r0
 1634 0012 2370     		strb	r3, [r4]
1181:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1182:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG &= (uint32)~PWM_Servo_STOP_MASK;
 1635              		.loc 1 1182 0
 1636 0014 0A4B     		ldr	r3, .L103
 1637 0016 0A4A     		ldr	r2, .L103
 1638 0018 1268     		ldr	r2, [r2]
 1639 001a C021     		mov	r1, #192
 1640 001c 8A43     		bic	r2, r1
 1641 001e 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Servo_STOP_SHIFT));
 1642              		.loc 1 1183 0
 1643 0020 074B     		ldr	r3, .L103
 1644 0022 074A     		ldr	r2, .L103
 1645 0024 1168     		ldr	r1, [r2]
 1646 0026 7A68     		ldr	r2, [r7, #4]
 1647 0028 9201     		lsl	r2, r2, #6
 1648 002a 0A43     		orr	r2, r1
 1649 002c 1A60     		str	r2, [r3]
1184:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1185:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1650              		.loc 1 1185 0
 1651 002e 3B1C     		mov	r3, r7
 1652 0030 0F33     		add	r3, r3, #15
 1653 0032 1B78     		ldrb	r3, [r3]
 1654 0034 181C     		mov	r0, r3
 1655 0036 FFF7FEFF 		bl	CyExitCriticalSection
1186:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1656              		.loc 1 1186 0
 1657 003a BD46     		mov	sp, r7
 1658 003c 05B0     		add	sp, sp, #20
 1659              		@ sp needed for prologue
 1660 003e 90BD     		pop	{r4, r7, pc}
 1661              	.L104:
 1662              		.align	2
 1663              	.L103:
 1664 0040 64010540 		.word	1074069860
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 51


 1665              		.cfi_endproc
 1666              	.LFE31:
 1667              		.size	PWM_Servo_SetStopMode, .-PWM_Servo_SetStopMode
 1668              		.section	.text.PWM_Servo_SetCountMode,"ax",%progbits
 1669              		.align	2
 1670              		.global	PWM_Servo_SetCountMode
 1671              		.code	16
 1672              		.thumb_func
 1673              		.type	PWM_Servo_SetCountMode, %function
 1674              	PWM_Servo_SetCountMode:
 1675              	.LFB32:
1187:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1188:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1189:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetCountMode
1191:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1193:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1194:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/PWM_Servo.c **** *  input.
1196:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1197:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1198:.\Generated_Source\PSoC4/PWM_Servo.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1200:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1205:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1207:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1208:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1676              		.loc 1 1210 0
 1677              		.cfi_startproc
 1678 0000 90B5     		push	{r4, r7, lr}
 1679              	.LCFI87:
 1680              		.cfi_def_cfa_offset 12
 1681              		.cfi_offset 4, -12
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 85B0     		sub	sp, sp, #20
 1685              	.LCFI88:
 1686              		.cfi_def_cfa_offset 32
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI89:
 1689              		.cfi_def_cfa_register 7
 1690 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1213:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1691              		.loc 1 1213 0
 1692 0008 3C1C     		mov	r4, r7
 1693 000a 0F34     		add	r4, r4, #15
 1694 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 52


 1695 0010 031C     		mov	r3, r0
 1696 0012 2370     		strb	r3, [r4]
1214:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1215:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG &= (uint32)~PWM_Servo_COUNT_MASK;
 1697              		.loc 1 1215 0
 1698 0014 0A4B     		ldr	r3, .L106
 1699 0016 0A4A     		ldr	r2, .L106
 1700 0018 1268     		ldr	r2, [r2]
 1701 001a 0C21     		mov	r1, #12
 1702 001c 8A43     		bic	r2, r1
 1703 001e 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Servo_COUNT_SHIFT));
 1704              		.loc 1 1216 0
 1705 0020 074B     		ldr	r3, .L106
 1706 0022 074A     		ldr	r2, .L106
 1707 0024 1168     		ldr	r1, [r2]
 1708 0026 7A68     		ldr	r2, [r7, #4]
 1709 0028 9200     		lsl	r2, r2, #2
 1710 002a 0A43     		orr	r2, r1
 1711 002c 1A60     		str	r2, [r3]
1217:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1218:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1712              		.loc 1 1218 0
 1713 002e 3B1C     		mov	r3, r7
 1714 0030 0F33     		add	r3, r3, #15
 1715 0032 1B78     		ldrb	r3, [r3]
 1716 0034 181C     		mov	r0, r3
 1717 0036 FFF7FEFF 		bl	CyExitCriticalSection
1219:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1718              		.loc 1 1219 0
 1719 003a BD46     		mov	sp, r7
 1720 003c 05B0     		add	sp, sp, #20
 1721              		@ sp needed for prologue
 1722 003e 90BD     		pop	{r4, r7, pc}
 1723              	.L107:
 1724              		.align	2
 1725              	.L106:
 1726 0040 64010540 		.word	1074069860
 1727              		.cfi_endproc
 1728              	.LFE32:
 1729              		.size	PWM_Servo_SetCountMode, .-PWM_Servo_SetCountMode
 1730              		.section	.text.PWM_Servo_TriggerCommand,"ax",%progbits
 1731              		.align	2
 1732              		.global	PWM_Servo_TriggerCommand
 1733              		.code	16
 1734              		.thumb_func
 1735              		.type	PWM_Servo_TriggerCommand, %function
 1736              	PWM_Servo_TriggerCommand:
 1737              	.LFB33:
1220:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1221:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1222:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_TriggerCommand
1224:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1226:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1227:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 53


1228:.\Generated_Source\PSoC4/PWM_Servo.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/PWM_Servo.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1231:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1232:.\Generated_Source\PSoC4/PWM_Servo.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/PWM_Servo.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/PWM_Servo.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/PWM_Servo.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/PWM_Servo.c **** *        define.
1237:.\Generated_Source\PSoC4/PWM_Servo.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/PWM_Servo.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1240:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1245:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1246:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1247:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1248:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1738              		.loc 1 1250 0
 1739              		.cfi_startproc
 1740 0000 90B5     		push	{r4, r7, lr}
 1741              	.LCFI90:
 1742              		.cfi_def_cfa_offset 12
 1743              		.cfi_offset 4, -12
 1744              		.cfi_offset 7, -8
 1745              		.cfi_offset 14, -4
 1746 0002 85B0     		sub	sp, sp, #20
 1747              	.LCFI91:
 1748              		.cfi_def_cfa_offset 32
 1749 0004 00AF     		add	r7, sp, #0
 1750              	.LCFI92:
 1751              		.cfi_def_cfa_register 7
 1752 0006 7860     		str	r0, [r7, #4]
 1753 0008 3960     		str	r1, [r7]
1251:.\Generated_Source\PSoC4/PWM_Servo.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1253:.\Generated_Source\PSoC4/PWM_Servo.c ****     enableInterrupts = CyEnterCriticalSection();
 1754              		.loc 1 1253 0
 1755 000a 3C1C     		mov	r4, r7
 1756 000c 0F34     		add	r4, r4, #15
 1757 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1758 0012 031C     		mov	r3, r0
 1759 0014 2370     		strb	r3, [r4]
1254:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1255:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_COMMAND_REG = ((uint32)(mask << command));
 1760              		.loc 1 1255 0
 1761 0016 084B     		ldr	r3, .L109
 1762 0018 3A68     		ldr	r2, [r7]
 1763 001a 7968     		ldr	r1, [r7, #4]
 1764 001c 081C     		mov	r0, r1
 1765 001e 9040     		lsl	r0, r0, r2
 1766 0020 021C     		mov	r2, r0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 54


 1767 0022 1A60     		str	r2, [r3]
1256:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1257:.\Generated_Source\PSoC4/PWM_Servo.c ****     CyExitCriticalSection(enableInterrupts);
 1768              		.loc 1 1257 0
 1769 0024 3B1C     		mov	r3, r7
 1770 0026 0F33     		add	r3, r3, #15
 1771 0028 1B78     		ldrb	r3, [r3]
 1772 002a 181C     		mov	r0, r3
 1773 002c FFF7FEFF 		bl	CyExitCriticalSection
1258:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1774              		.loc 1 1258 0
 1775 0030 BD46     		mov	sp, r7
 1776 0032 05B0     		add	sp, sp, #20
 1777              		@ sp needed for prologue
 1778 0034 90BD     		pop	{r4, r7, pc}
 1779              	.L110:
 1780 0036 C046     		.align	2
 1781              	.L109:
 1782 0038 08000540 		.word	1074069512
 1783              		.cfi_endproc
 1784              	.LFE33:
 1785              		.size	PWM_Servo_TriggerCommand, .-PWM_Servo_TriggerCommand
 1786              		.section	.text.PWM_Servo_ReadStatus,"ax",%progbits
 1787              		.align	2
 1788              		.global	PWM_Servo_ReadStatus
 1789              		.code	16
 1790              		.thumb_func
 1791              		.type	PWM_Servo_ReadStatus, %function
 1792              	PWM_Servo_ReadStatus:
 1793              	.LFB34:
1259:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1260:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1261:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ReadStatus
1263:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1265:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Reads the status of the PWM_Servo.
1267:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1268:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1270:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1271:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1272:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Status
1273:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1274:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1277:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_ReadStatus(void)
1279:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1794              		.loc 1 1279 0
 1795              		.cfi_startproc
 1796 0000 80B5     		push	{r7, lr}
 1797              	.LCFI93:
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 55


 1800              		.cfi_offset 14, -4
 1801 0002 00AF     		add	r7, sp, #0
 1802              	.LCFI94:
 1803              		.cfi_def_cfa_register 7
1280:.\Generated_Source\PSoC4/PWM_Servo.c ****     return ((PWM_Servo_STATUS_REG >> PWM_Servo_RUNNING_STATUS_SHIFT) |
 1804              		.loc 1 1280 0
 1805 0004 054B     		ldr	r3, .L113
 1806 0006 1B68     		ldr	r3, [r3]
 1807 0008 9A0F     		lsr	r2, r3, #30
1281:.\Generated_Source\PSoC4/PWM_Servo.c ****             (PWM_Servo_STATUS_REG & PWM_Servo_STATUS_DOWN));
 1808              		.loc 1 1281 0
 1809 000a 044B     		ldr	r3, .L113
 1810 000c 1968     		ldr	r1, [r3]
 1811 000e 0123     		mov	r3, #1
 1812 0010 0B40     		and	r3, r1
1280:.\Generated_Source\PSoC4/PWM_Servo.c ****     return ((PWM_Servo_STATUS_REG >> PWM_Servo_RUNNING_STATUS_SHIFT) |
 1813              		.loc 1 1280 0
 1814 0012 1343     		orr	r3, r2
1282:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1815              		.loc 1 1282 0
 1816 0014 181C     		mov	r0, r3
 1817 0016 BD46     		mov	sp, r7
 1818              		@ sp needed for prologue
 1819 0018 80BD     		pop	{r7, pc}
 1820              	.L114:
 1821 001a C046     		.align	2
 1822              	.L113:
 1823 001c 44010540 		.word	1074069828
 1824              		.cfi_endproc
 1825              	.LFE34:
 1826              		.size	PWM_Servo_ReadStatus, .-PWM_Servo_ReadStatus
 1827              		.section	.text.PWM_Servo_SetInterruptMode,"ax",%progbits
 1828              		.align	2
 1829              		.global	PWM_Servo_SetInterruptMode
 1830              		.code	16
 1831              		.thumb_func
 1832              		.type	PWM_Servo_SetInterruptMode, %function
 1833              	PWM_Servo_SetInterruptMode:
 1834              	.LFB35:
1283:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1284:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1285:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetInterruptMode
1287:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1289:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1290:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/PWM_Servo.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1293:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1294:.\Generated_Source\PSoC4/PWM_Servo.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1296:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1299:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1300:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 56


1301:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1302:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1835              		.loc 1 1304 0
 1836              		.cfi_startproc
 1837 0000 80B5     		push	{r7, lr}
 1838              	.LCFI95:
 1839              		.cfi_def_cfa_offset 8
 1840              		.cfi_offset 7, -8
 1841              		.cfi_offset 14, -4
 1842 0002 82B0     		sub	sp, sp, #8
 1843              	.LCFI96:
 1844              		.cfi_def_cfa_offset 16
 1845 0004 00AF     		add	r7, sp, #0
 1846              	.LCFI97:
 1847              		.cfi_def_cfa_register 7
 1848 0006 7860     		str	r0, [r7, #4]
1305:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_INTERRUPT_MASK_REG =  interruptMask;
 1849              		.loc 1 1305 0
 1850 0008 024B     		ldr	r3, .L116
 1851 000a 7A68     		ldr	r2, [r7, #4]
 1852 000c 1A60     		str	r2, [r3]
1306:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1853              		.loc 1 1306 0
 1854 000e BD46     		mov	sp, r7
 1855 0010 02B0     		add	sp, sp, #8
 1856              		@ sp needed for prologue
 1857 0012 80BD     		pop	{r7, pc}
 1858              	.L117:
 1859              		.align	2
 1860              	.L116:
 1861 0014 78010540 		.word	1074069880
 1862              		.cfi_endproc
 1863              	.LFE35:
 1864              		.size	PWM_Servo_SetInterruptMode, .-PWM_Servo_SetInterruptMode
 1865              		.section	.text.PWM_Servo_GetInterruptSourceMasked,"ax",%progbits
 1866              		.align	2
 1867              		.global	PWM_Servo_GetInterruptSourceMasked
 1868              		.code	16
 1869              		.thumb_func
 1870              		.type	PWM_Servo_GetInterruptSourceMasked, %function
 1871              	PWM_Servo_GetInterruptSourceMasked:
 1872              	.LFB36:
1307:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1308:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1309:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1313:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1314:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1316:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1317:.\Generated_Source\PSoC4/PWM_Servo.c **** *   None
1318:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1319:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 57


1320:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1322:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1325:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1873              		.loc 1 1327 0
 1874              		.cfi_startproc
 1875 0000 80B5     		push	{r7, lr}
 1876              	.LCFI98:
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 00AF     		add	r7, sp, #0
 1881              	.LCFI99:
 1882              		.cfi_def_cfa_register 7
1328:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_INTERRUPT_MASKED_REG);
 1883              		.loc 1 1328 0
 1884 0004 024B     		ldr	r3, .L120
 1885 0006 1B68     		ldr	r3, [r3]
1329:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1886              		.loc 1 1329 0
 1887 0008 181C     		mov	r0, r3
 1888 000a BD46     		mov	sp, r7
 1889              		@ sp needed for prologue
 1890 000c 80BD     		pop	{r7, pc}
 1891              	.L121:
 1892 000e C046     		.align	2
 1893              	.L120:
 1894 0010 7C010540 		.word	1074069884
 1895              		.cfi_endproc
 1896              	.LFE36:
 1897              		.size	PWM_Servo_GetInterruptSourceMasked, .-PWM_Servo_GetInterruptSourceMasked
 1898              		.section	.text.PWM_Servo_GetInterruptSource,"ax",%progbits
 1899              		.align	2
 1900              		.global	PWM_Servo_GetInterruptSource
 1901              		.code	16
 1902              		.thumb_func
 1903              		.type	PWM_Servo_GetInterruptSource, %function
 1904              	PWM_Servo_GetInterruptSource:
 1905              	.LFB37:
1330:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1331:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1332:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_GetInterruptSource
1334:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1336:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1337:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1339:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1340:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1341:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1342:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1343:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Interrupt request value
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 58


1344:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1345:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1348:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/PWM_Servo.c **** uint32 PWM_Servo_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1906              		.loc 1 1350 0
 1907              		.cfi_startproc
 1908 0000 80B5     		push	{r7, lr}
 1909              	.LCFI100:
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 7, -8
 1912              		.cfi_offset 14, -4
 1913 0002 00AF     		add	r7, sp, #0
 1914              	.LCFI101:
 1915              		.cfi_def_cfa_register 7
1351:.\Generated_Source\PSoC4/PWM_Servo.c ****     return (PWM_Servo_INTERRUPT_REQ_REG);
 1916              		.loc 1 1351 0
 1917 0004 024B     		ldr	r3, .L124
 1918 0006 1B68     		ldr	r3, [r3]
1352:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1919              		.loc 1 1352 0
 1920 0008 181C     		mov	r0, r3
 1921 000a BD46     		mov	sp, r7
 1922              		@ sp needed for prologue
 1923 000c 80BD     		pop	{r7, pc}
 1924              	.L125:
 1925 000e C046     		.align	2
 1926              	.L124:
 1927 0010 70010540 		.word	1074069872
 1928              		.cfi_endproc
 1929              	.LFE37:
 1930              		.size	PWM_Servo_GetInterruptSource, .-PWM_Servo_GetInterruptSource
 1931              		.section	.text.PWM_Servo_ClearInterrupt,"ax",%progbits
 1932              		.align	2
 1933              		.global	PWM_Servo_ClearInterrupt
 1934              		.code	16
 1935              		.thumb_func
 1936              		.type	PWM_Servo_ClearInterrupt, %function
 1937              	PWM_Servo_ClearInterrupt:
 1938              	.LFB38:
1353:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1354:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1355:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_ClearInterrupt
1357:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1359:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1360:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1362:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1363:.\Generated_Source\PSoC4/PWM_Servo.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1365:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/PWM_Servo.c **** *
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 59


1368:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1369:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1370:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1371:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1939              		.loc 1 1373 0
 1940              		.cfi_startproc
 1941 0000 80B5     		push	{r7, lr}
 1942              	.LCFI102:
 1943              		.cfi_def_cfa_offset 8
 1944              		.cfi_offset 7, -8
 1945              		.cfi_offset 14, -4
 1946 0002 82B0     		sub	sp, sp, #8
 1947              	.LCFI103:
 1948              		.cfi_def_cfa_offset 16
 1949 0004 00AF     		add	r7, sp, #0
 1950              	.LCFI104:
 1951              		.cfi_def_cfa_register 7
 1952 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_INTERRUPT_REQ_REG = interruptMask;
 1953              		.loc 1 1374 0
 1954 0008 024B     		ldr	r3, .L127
 1955 000a 7A68     		ldr	r2, [r7, #4]
 1956 000c 1A60     		str	r2, [r3]
1375:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1957              		.loc 1 1375 0
 1958 000e BD46     		mov	sp, r7
 1959 0010 02B0     		add	sp, sp, #8
 1960              		@ sp needed for prologue
 1961 0012 80BD     		pop	{r7, pc}
 1962              	.L128:
 1963              		.align	2
 1964              	.L127:
 1965 0014 70010540 		.word	1074069872
 1966              		.cfi_endproc
 1967              	.LFE38:
 1968              		.size	PWM_Servo_ClearInterrupt, .-PWM_Servo_ClearInterrupt
 1969              		.section	.text.PWM_Servo_SetInterrupt,"ax",%progbits
 1970              		.align	2
 1971              		.global	PWM_Servo_SetInterrupt
 1972              		.code	16
 1973              		.thumb_func
 1974              		.type	PWM_Servo_SetInterrupt, %function
 1975              	PWM_Servo_SetInterrupt:
 1976              	.LFB39:
1376:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1377:.\Generated_Source\PSoC4/PWM_Servo.c **** 
1378:.\Generated_Source\PSoC4/PWM_Servo.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/PWM_Servo.c **** * Function Name: PWM_Servo_SetInterrupt
1380:.\Generated_Source\PSoC4/PWM_Servo.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1382:.\Generated_Source\PSoC4/PWM_Servo.c **** * Summary:
1383:.\Generated_Source\PSoC4/PWM_Servo.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1385:.\Generated_Source\PSoC4/PWM_Servo.c **** * Parameters:
1386:.\Generated_Source\PSoC4/PWM_Servo.c **** *   interruptMask: Mask of interrupts to set
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 60


1387:.\Generated_Source\PSoC4/PWM_Servo.c **** *   Values:
1388:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/PWM_Servo.c **** *     - PWM_Servo_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1391:.\Generated_Source\PSoC4/PWM_Servo.c **** * Return:
1392:.\Generated_Source\PSoC4/PWM_Servo.c **** *  None
1393:.\Generated_Source\PSoC4/PWM_Servo.c **** *
1394:.\Generated_Source\PSoC4/PWM_Servo.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/PWM_Servo.c **** void PWM_Servo_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/PWM_Servo.c **** {
 1977              		.loc 1 1396 0
 1978              		.cfi_startproc
 1979 0000 80B5     		push	{r7, lr}
 1980              	.LCFI105:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 7, -8
 1983              		.cfi_offset 14, -4
 1984 0002 82B0     		sub	sp, sp, #8
 1985              	.LCFI106:
 1986              		.cfi_def_cfa_offset 16
 1987 0004 00AF     		add	r7, sp, #0
 1988              	.LCFI107:
 1989              		.cfi_def_cfa_register 7
 1990 0006 7860     		str	r0, [r7, #4]
1397:.\Generated_Source\PSoC4/PWM_Servo.c ****     PWM_Servo_INTERRUPT_SET_REG = interruptMask;
 1991              		.loc 1 1397 0
 1992 0008 024B     		ldr	r3, .L130
 1993 000a 7A68     		ldr	r2, [r7, #4]
 1994 000c 1A60     		str	r2, [r3]
1398:.\Generated_Source\PSoC4/PWM_Servo.c **** }
 1995              		.loc 1 1398 0
 1996 000e BD46     		mov	sp, r7
 1997 0010 02B0     		add	sp, sp, #8
 1998              		@ sp needed for prologue
 1999 0012 80BD     		pop	{r7, pc}
 2000              	.L131:
 2001              		.align	2
 2002              	.L130:
 2003 0014 74010540 		.word	1074069876
 2004              		.cfi_endproc
 2005              	.LFE39:
 2006              		.size	PWM_Servo_SetInterrupt, .-PWM_Servo_SetInterrupt
 2007              		.text
 2008              	.Letext0:
 2009              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2010              		.section	.debug_info,"",%progbits
 2011              	.Ldebug_info0:
 2012 0000 BA070000 		.4byte	0x7ba
 2013 0004 0200     		.2byte	0x2
 2014 0006 00000000 		.4byte	.Ldebug_abbrev0
 2015 000a 04       		.byte	0x4
 2016 000b 01       		.uleb128 0x1
 2017 000c 1C040000 		.4byte	.LASF76
 2018 0010 01       		.byte	0x1
 2019 0011 BF000000 		.4byte	.LASF77
 2020 0015 C2030000 		.4byte	.LASF78
 2021 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 61


 2022 001d 00000000 		.4byte	0
 2023 0021 00000000 		.4byte	0
 2024 0025 00000000 		.4byte	.Ldebug_line0
 2025 0029 02       		.uleb128 0x2
 2026 002a 01       		.byte	0x1
 2027 002b 06       		.byte	0x6
 2028 002c 12010000 		.4byte	.LASF0
 2029 0030 02       		.uleb128 0x2
 2030 0031 01       		.byte	0x1
 2031 0032 08       		.byte	0x8
 2032 0033 7A040000 		.4byte	.LASF1
 2033 0037 02       		.uleb128 0x2
 2034 0038 02       		.byte	0x2
 2035 0039 05       		.byte	0x5
 2036 003a AF040000 		.4byte	.LASF2
 2037 003e 02       		.uleb128 0x2
 2038 003f 02       		.byte	0x2
 2039 0040 07       		.byte	0x7
 2040 0041 62020000 		.4byte	.LASF3
 2041 0045 02       		.uleb128 0x2
 2042 0046 04       		.byte	0x4
 2043 0047 05       		.byte	0x5
 2044 0048 62010000 		.4byte	.LASF4
 2045 004c 02       		.uleb128 0x2
 2046 004d 04       		.byte	0x4
 2047 004e 07       		.byte	0x7
 2048 004f 0E020000 		.4byte	.LASF5
 2049 0053 02       		.uleb128 0x2
 2050 0054 08       		.byte	0x8
 2051 0055 05       		.byte	0x5
 2052 0056 04010000 		.4byte	.LASF6
 2053 005a 02       		.uleb128 0x2
 2054 005b 08       		.byte	0x8
 2055 005c 07       		.byte	0x7
 2056 005d 94000000 		.4byte	.LASF7
 2057 0061 03       		.uleb128 0x3
 2058 0062 04       		.byte	0x4
 2059 0063 05       		.byte	0x5
 2060 0064 696E7400 		.ascii	"int\000"
 2061 0068 02       		.uleb128 0x2
 2062 0069 04       		.byte	0x4
 2063 006a 07       		.byte	0x7
 2064 006b F9010000 		.4byte	.LASF8
 2065 006f 04       		.uleb128 0x4
 2066 0070 84010000 		.4byte	.LASF9
 2067 0074 02       		.byte	0x2
 2068 0075 5B       		.byte	0x5b
 2069 0076 30000000 		.4byte	0x30
 2070 007a 04       		.uleb128 0x4
 2071 007b BF010000 		.4byte	.LASF10
 2072 007f 02       		.byte	0x2
 2073 0080 5D       		.byte	0x5d
 2074 0081 4C000000 		.4byte	0x4c
 2075 0085 02       		.uleb128 0x2
 2076 0086 04       		.byte	0x4
 2077 0087 04       		.byte	0x4
 2078 0088 80030000 		.4byte	.LASF11
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 62


 2079 008c 02       		.uleb128 0x2
 2080 008d 08       		.byte	0x8
 2081 008e 04       		.byte	0x4
 2082 008f 8A010000 		.4byte	.LASF12
 2083 0093 02       		.uleb128 0x2
 2084 0094 01       		.byte	0x1
 2085 0095 08       		.byte	0x8
 2086 0096 29050000 		.4byte	.LASF13
 2087 009a 04       		.uleb128 0x4
 2088 009b E3020000 		.4byte	.LASF14
 2089 009f 02       		.byte	0x2
 2090 00a0 F2       		.byte	0xf2
 2091 00a1 A5000000 		.4byte	0xa5
 2092 00a5 05       		.uleb128 0x5
 2093 00a6 7A000000 		.4byte	0x7a
 2094 00aa 02       		.uleb128 0x2
 2095 00ab 04       		.byte	0x4
 2096 00ac 07       		.byte	0x7
 2097 00ad 12030000 		.4byte	.LASF15
 2098 00b1 06       		.uleb128 0x6
 2099 00b2 01       		.byte	0x1
 2100 00b3 8E020000 		.4byte	.LASF16
 2101 00b7 01       		.byte	0x1
 2102 00b8 27       		.byte	0x27
 2103 00b9 01       		.byte	0x1
 2104 00ba 00000000 		.4byte	.LFB0
 2105 00be 58000000 		.4byte	.LFE0
 2106 00c2 00000000 		.4byte	.LLST0
 2107 00c6 01       		.byte	0x1
 2108 00c7 07       		.uleb128 0x7
 2109 00c8 01       		.byte	0x1
 2110 00c9 51020000 		.4byte	.LASF18
 2111 00cd 01       		.byte	0x1
 2112 00ce C8       		.byte	0xc8
 2113 00cf 01       		.byte	0x1
 2114 00d0 00000000 		.4byte	.LFB1
 2115 00d4 38000000 		.4byte	.LFE1
 2116 00d8 2C000000 		.4byte	.LLST1
 2117 00dc 01       		.byte	0x1
 2118 00dd F0000000 		.4byte	0xf0
 2119 00e1 08       		.uleb128 0x8
 2120 00e2 8D050000 		.4byte	.LASF20
 2121 00e6 01       		.byte	0x1
 2122 00e7 CA       		.byte	0xca
 2123 00e8 6F000000 		.4byte	0x6f
 2124 00ec 02       		.byte	0x2
 2125 00ed 91       		.byte	0x91
 2126 00ee 6F       		.sleb128 -17
 2127 00ef 00       		.byte	0
 2128 00f0 06       		.uleb128 0x6
 2129 00f1 01       		.byte	0x1
 2130 00f2 E9020000 		.4byte	.LASF17
 2131 00f6 01       		.byte	0x1
 2132 00f7 F7       		.byte	0xf7
 2133 00f8 01       		.byte	0x1
 2134 00f9 00000000 		.4byte	.LFB2
 2135 00fd 24000000 		.4byte	.LFE2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 63


 2136 0101 64000000 		.4byte	.LLST2
 2137 0105 01       		.byte	0x1
 2138 0106 09       		.uleb128 0x9
 2139 0107 01       		.byte	0x1
 2140 0108 00000000 		.4byte	.LASF19
 2141 010c 01       		.byte	0x1
 2142 010d 1101     		.2byte	0x111
 2143 010f 01       		.byte	0x1
 2144 0110 00000000 		.4byte	.LFB3
 2145 0114 30000000 		.4byte	.LFE3
 2146 0118 90000000 		.4byte	.LLST3
 2147 011c 01       		.byte	0x1
 2148 011d 31010000 		.4byte	0x131
 2149 0121 0A       		.uleb128 0xa
 2150 0122 8D050000 		.4byte	.LASF20
 2151 0126 01       		.byte	0x1
 2152 0127 1301     		.2byte	0x113
 2153 0129 6F000000 		.4byte	0x6f
 2154 012d 02       		.byte	0x2
 2155 012e 91       		.byte	0x91
 2156 012f 6F       		.sleb128 -17
 2157 0130 00       		.byte	0
 2158 0131 09       		.uleb128 0x9
 2159 0132 01       		.byte	0x1
 2160 0133 33050000 		.4byte	.LASF21
 2161 0137 01       		.byte	0x1
 2162 0138 3601     		.2byte	0x136
 2163 013a 01       		.byte	0x1
 2164 013b 00000000 		.4byte	.LFB4
 2165 013f 48000000 		.4byte	.LFE4
 2166 0143 C8000000 		.4byte	.LLST4
 2167 0147 01       		.byte	0x1
 2168 0148 6B010000 		.4byte	0x16b
 2169 014c 0B       		.uleb128 0xb
 2170 014d 2E050000 		.4byte	.LASF23
 2171 0151 01       		.byte	0x1
 2172 0152 3601     		.2byte	0x136
 2173 0154 7A000000 		.4byte	0x7a
 2174 0158 02       		.byte	0x2
 2175 0159 91       		.byte	0x91
 2176 015a 64       		.sleb128 -28
 2177 015b 0A       		.uleb128 0xa
 2178 015c 8D050000 		.4byte	.LASF20
 2179 0160 01       		.byte	0x1
 2180 0161 3801     		.2byte	0x138
 2181 0163 6F000000 		.4byte	0x6f
 2182 0167 02       		.byte	0x2
 2183 0168 91       		.byte	0x91
 2184 0169 6F       		.sleb128 -17
 2185 016a 00       		.byte	0
 2186 016b 09       		.uleb128 0x9
 2187 016c 01       		.byte	0x1
 2188 016d AB000000 		.4byte	.LASF22
 2189 0171 01       		.byte	0x1
 2190 0172 5701     		.2byte	0x157
 2191 0174 01       		.byte	0x1
 2192 0175 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 64


 2193 0179 48000000 		.4byte	.LFE5
 2194 017d 00010000 		.4byte	.LLST5
 2195 0181 01       		.byte	0x1
 2196 0182 A5010000 		.4byte	0x1a5
 2197 0186 0B       		.uleb128 0xb
 2198 0187 E4000000 		.4byte	.LASF24
 2199 018b 01       		.byte	0x1
 2200 018c 5701     		.2byte	0x157
 2201 018e 7A000000 		.4byte	0x7a
 2202 0192 02       		.byte	0x2
 2203 0193 91       		.byte	0x91
 2204 0194 64       		.sleb128 -28
 2205 0195 0A       		.uleb128 0xa
 2206 0196 8D050000 		.4byte	.LASF20
 2207 019a 01       		.byte	0x1
 2208 019b 5901     		.2byte	0x159
 2209 019d 6F000000 		.4byte	0x6f
 2210 01a1 02       		.byte	0x2
 2211 01a2 91       		.byte	0x91
 2212 01a3 6F       		.sleb128 -17
 2213 01a4 00       		.byte	0
 2214 01a5 09       		.uleb128 0x9
 2215 01a6 01       		.byte	0x1
 2216 01a7 34010000 		.4byte	.LASF25
 2217 01ab 01       		.byte	0x1
 2218 01ac 7C01     		.2byte	0x17c
 2219 01ae 01       		.byte	0x1
 2220 01af 00000000 		.4byte	.LFB6
 2221 01b3 48000000 		.4byte	.LFE6
 2222 01b7 38010000 		.4byte	.LLST6
 2223 01bb 01       		.byte	0x1
 2224 01bc DF010000 		.4byte	0x1df
 2225 01c0 0B       		.uleb128 0xb
 2226 01c1 86030000 		.4byte	.LASF26
 2227 01c5 01       		.byte	0x1
 2228 01c6 7C01     		.2byte	0x17c
 2229 01c8 7A000000 		.4byte	0x7a
 2230 01cc 02       		.byte	0x2
 2231 01cd 91       		.byte	0x91
 2232 01ce 64       		.sleb128 -28
 2233 01cf 0A       		.uleb128 0xa
 2234 01d0 8D050000 		.4byte	.LASF20
 2235 01d4 01       		.byte	0x1
 2236 01d5 7E01     		.2byte	0x17e
 2237 01d7 6F000000 		.4byte	0x6f
 2238 01db 02       		.byte	0x2
 2239 01dc 91       		.byte	0x91
 2240 01dd 6F       		.sleb128 -17
 2241 01de 00       		.byte	0
 2242 01df 09       		.uleb128 0x9
 2243 01e0 01       		.byte	0x1
 2244 01e1 31030000 		.4byte	.LASF27
 2245 01e5 01       		.byte	0x1
 2246 01e6 9C01     		.2byte	0x19c
 2247 01e8 01       		.byte	0x1
 2248 01e9 00000000 		.4byte	.LFB7
 2249 01ed 4C000000 		.4byte	.LFE7
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 65


 2250 01f1 70010000 		.4byte	.LLST7
 2251 01f5 01       		.byte	0x1
 2252 01f6 19020000 		.4byte	0x219
 2253 01fa 0B       		.uleb128 0xb
 2254 01fb C0020000 		.4byte	.LASF28
 2255 01ff 01       		.byte	0x1
 2256 0200 9C01     		.2byte	0x19c
 2257 0202 7A000000 		.4byte	0x7a
 2258 0206 02       		.byte	0x2
 2259 0207 91       		.byte	0x91
 2260 0208 64       		.sleb128 -28
 2261 0209 0A       		.uleb128 0xa
 2262 020a 8D050000 		.4byte	.LASF20
 2263 020e 01       		.byte	0x1
 2264 020f 9E01     		.2byte	0x19e
 2265 0211 6F000000 		.4byte	0x6f
 2266 0215 02       		.byte	0x2
 2267 0216 91       		.byte	0x91
 2268 0217 6F       		.sleb128 -17
 2269 0218 00       		.byte	0
 2270 0219 0C       		.uleb128 0xc
 2271 021a 01       		.byte	0x1
 2272 021b 65040000 		.4byte	.LASF29
 2273 021f 01       		.byte	0x1
 2274 0220 D201     		.2byte	0x1d2
 2275 0222 01       		.byte	0x1
 2276 0223 00000000 		.4byte	.LFB8
 2277 0227 1C000000 		.4byte	.LFE8
 2278 022b A8010000 		.4byte	.LLST8
 2279 022f 01       		.byte	0x1
 2280 0230 44020000 		.4byte	0x244
 2281 0234 0B       		.uleb128 0xb
 2282 0235 20020000 		.4byte	.LASF30
 2283 0239 01       		.byte	0x1
 2284 023a D201     		.2byte	0x1d2
 2285 023c 7A000000 		.4byte	0x7a
 2286 0240 02       		.byte	0x2
 2287 0241 91       		.byte	0x91
 2288 0242 74       		.sleb128 -12
 2289 0243 00       		.byte	0
 2290 0244 09       		.uleb128 0x9
 2291 0245 01       		.byte	0x1
 2292 0246 F9020000 		.4byte	.LASF31
 2293 024a 01       		.byte	0x1
 2294 024b F601     		.2byte	0x1f6
 2295 024d 01       		.byte	0x1
 2296 024e 00000000 		.4byte	.LFB9
 2297 0252 48000000 		.4byte	.LFE9
 2298 0256 E0010000 		.4byte	.LLST9
 2299 025a 01       		.byte	0x1
 2300 025b 7E020000 		.4byte	0x27e
 2301 025f 0B       		.uleb128 0xb
 2302 0260 9E050000 		.4byte	.LASF32
 2303 0264 01       		.byte	0x1
 2304 0265 F601     		.2byte	0x1f6
 2305 0267 7A000000 		.4byte	0x7a
 2306 026b 02       		.byte	0x2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 66


 2307 026c 91       		.byte	0x91
 2308 026d 64       		.sleb128 -28
 2309 026e 0A       		.uleb128 0xa
 2310 026f 8D050000 		.4byte	.LASF20
 2311 0273 01       		.byte	0x1
 2312 0274 F801     		.2byte	0x1f8
 2313 0276 6F000000 		.4byte	0x6f
 2314 027a 02       		.byte	0x2
 2315 027b 91       		.byte	0x91
 2316 027c 6F       		.sleb128 -17
 2317 027d 00       		.byte	0
 2318 027e 09       		.uleb128 0x9
 2319 027f 01       		.byte	0x1
 2320 0280 01040000 		.4byte	.LASF33
 2321 0284 01       		.byte	0x1
 2322 0285 1802     		.2byte	0x218
 2323 0287 01       		.byte	0x1
 2324 0288 00000000 		.4byte	.LFB10
 2325 028c 48000000 		.4byte	.LFE10
 2326 0290 18020000 		.4byte	.LLST10
 2327 0294 01       		.byte	0x1
 2328 0295 B8020000 		.4byte	0x2b8
 2329 0299 0B       		.uleb128 0xb
 2330 029a 88040000 		.4byte	.LASF34
 2331 029e 01       		.byte	0x1
 2332 029f 1802     		.2byte	0x218
 2333 02a1 7A000000 		.4byte	0x7a
 2334 02a5 02       		.byte	0x2
 2335 02a6 91       		.byte	0x91
 2336 02a7 64       		.sleb128 -28
 2337 02a8 0A       		.uleb128 0xa
 2338 02a9 8D050000 		.4byte	.LASF20
 2339 02ad 01       		.byte	0x1
 2340 02ae 1A02     		.2byte	0x21a
 2341 02b0 6F000000 		.4byte	0x6f
 2342 02b4 02       		.byte	0x2
 2343 02b5 91       		.byte	0x91
 2344 02b6 6F       		.sleb128 -17
 2345 02b7 00       		.byte	0
 2346 02b8 09       		.uleb128 0x9
 2347 02b9 01       		.byte	0x1
 2348 02ba 45050000 		.4byte	.LASF35
 2349 02be 01       		.byte	0x1
 2350 02bf 3902     		.2byte	0x239
 2351 02c1 01       		.byte	0x1
 2352 02c2 00000000 		.4byte	.LFB11
 2353 02c6 4C000000 		.4byte	.LFE11
 2354 02ca 50020000 		.4byte	.LLST11
 2355 02ce 01       		.byte	0x1
 2356 02cf F2020000 		.4byte	0x2f2
 2357 02d3 0B       		.uleb128 0xb
 2358 02d4 D7010000 		.4byte	.LASF36
 2359 02d8 01       		.byte	0x1
 2360 02d9 3902     		.2byte	0x239
 2361 02db 7A000000 		.4byte	0x7a
 2362 02df 02       		.byte	0x2
 2363 02e0 91       		.byte	0x91
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 67


 2364 02e1 64       		.sleb128 -28
 2365 02e2 0A       		.uleb128 0xa
 2366 02e3 8D050000 		.4byte	.LASF20
 2367 02e7 01       		.byte	0x1
 2368 02e8 3B02     		.2byte	0x23b
 2369 02ea 6F000000 		.4byte	0x6f
 2370 02ee 02       		.byte	0x2
 2371 02ef 91       		.byte	0x91
 2372 02f0 6F       		.sleb128 -17
 2373 02f1 00       		.byte	0
 2374 02f2 09       		.uleb128 0x9
 2375 02f3 01       		.byte	0x1
 2376 02f4 15000000 		.4byte	.LASF37
 2377 02f8 01       		.byte	0x1
 2378 02f9 5A02     		.2byte	0x25a
 2379 02fb 01       		.byte	0x1
 2380 02fc 00000000 		.4byte	.LFB12
 2381 0300 48000000 		.4byte	.LFE12
 2382 0304 88020000 		.4byte	.LLST12
 2383 0308 01       		.byte	0x1
 2384 0309 2C030000 		.4byte	0x32c
 2385 030d 0B       		.uleb128 0xb
 2386 030e D2010000 		.4byte	.LASF38
 2387 0312 01       		.byte	0x1
 2388 0313 5A02     		.2byte	0x25a
 2389 0315 7A000000 		.4byte	0x7a
 2390 0319 02       		.byte	0x2
 2391 031a 91       		.byte	0x91
 2392 031b 64       		.sleb128 -28
 2393 031c 0A       		.uleb128 0xa
 2394 031d 8D050000 		.4byte	.LASF20
 2395 0321 01       		.byte	0x1
 2396 0322 5C02     		.2byte	0x25c
 2397 0324 6F000000 		.4byte	0x6f
 2398 0328 02       		.byte	0x2
 2399 0329 91       		.byte	0x91
 2400 032a 6F       		.sleb128 -17
 2401 032b 00       		.byte	0
 2402 032c 0C       		.uleb128 0xc
 2403 032d 01       		.byte	0x1
 2404 032e 4B010000 		.4byte	.LASF39
 2405 0332 01       		.byte	0x1
 2406 0333 7802     		.2byte	0x278
 2407 0335 01       		.byte	0x1
 2408 0336 00000000 		.4byte	.LFB13
 2409 033a 1C000000 		.4byte	.LFE13
 2410 033e C0020000 		.4byte	.LLST13
 2411 0342 01       		.byte	0x1
 2412 0343 57030000 		.4byte	0x357
 2413 0347 0B       		.uleb128 0xb
 2414 0348 0F000000 		.4byte	.LASF40
 2415 034c 01       		.byte	0x1
 2416 034d 7802     		.2byte	0x278
 2417 034f 7A000000 		.4byte	0x7a
 2418 0353 02       		.byte	0x2
 2419 0354 91       		.byte	0x91
 2420 0355 74       		.sleb128 -12
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 68


 2421 0356 00       		.byte	0
 2422 0357 0D       		.uleb128 0xd
 2423 0358 01       		.byte	0x1
 2424 0359 1E010000 		.4byte	.LASF45
 2425 035d 01       		.byte	0x1
 2426 035e 8C02     		.2byte	0x28c
 2427 0360 01       		.byte	0x1
 2428 0361 7A000000 		.4byte	0x7a
 2429 0365 00000000 		.4byte	.LFB14
 2430 0369 18000000 		.4byte	.LFE14
 2431 036d F8020000 		.4byte	.LLST14
 2432 0371 01       		.byte	0x1
 2433 0372 09       		.uleb128 0x9
 2434 0373 01       		.byte	0x1
 2435 0374 EB000000 		.4byte	.LASF41
 2436 0378 01       		.byte	0x1
 2437 0379 A902     		.2byte	0x2a9
 2438 037b 01       		.byte	0x1
 2439 037c 00000000 		.4byte	.LFB15
 2440 0380 48000000 		.4byte	.LFE15
 2441 0384 24030000 		.4byte	.LLST15
 2442 0388 01       		.byte	0x1
 2443 0389 AC030000 		.4byte	0x3ac
 2444 038d 0B       		.uleb128 0xb
 2445 038e 5E050000 		.4byte	.LASF42
 2446 0392 01       		.byte	0x1
 2447 0393 A902     		.2byte	0x2a9
 2448 0395 7A000000 		.4byte	0x7a
 2449 0399 02       		.byte	0x2
 2450 039a 91       		.byte	0x91
 2451 039b 64       		.sleb128 -28
 2452 039c 0A       		.uleb128 0xa
 2453 039d 8D050000 		.4byte	.LASF20
 2454 03a1 01       		.byte	0x1
 2455 03a2 AB02     		.2byte	0x2ab
 2456 03a4 6F000000 		.4byte	0x6f
 2457 03a8 02       		.byte	0x2
 2458 03a9 91       		.byte	0x91
 2459 03aa 6F       		.sleb128 -17
 2460 03ab 00       		.byte	0
 2461 03ac 0C       		.uleb128 0xc
 2462 03ad 01       		.byte	0x1
 2463 03ae 1B030000 		.4byte	.LASF43
 2464 03b2 01       		.byte	0x1
 2465 03b3 C602     		.2byte	0x2c6
 2466 03b5 01       		.byte	0x1
 2467 03b6 00000000 		.4byte	.LFB16
 2468 03ba 1C000000 		.4byte	.LFE16
 2469 03be 5C030000 		.4byte	.LLST16
 2470 03c2 01       		.byte	0x1
 2471 03c3 D7030000 		.4byte	0x3d7
 2472 03c7 0B       		.uleb128 0xb
 2473 03c8 8D000000 		.4byte	.LASF44
 2474 03cc 01       		.byte	0x1
 2475 03cd C602     		.2byte	0x2c6
 2476 03cf 7A000000 		.4byte	0x7a
 2477 03d3 02       		.byte	0x2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 69


 2478 03d4 91       		.byte	0x91
 2479 03d5 74       		.sleb128 -12
 2480 03d6 00       		.byte	0
 2481 03d7 0D       		.uleb128 0xd
 2482 03d8 01       		.byte	0x1
 2483 03d9 CE020000 		.4byte	.LASF46
 2484 03dd 01       		.byte	0x1
 2485 03de DA02     		.2byte	0x2da
 2486 03e0 01       		.byte	0x1
 2487 03e1 7A000000 		.4byte	0x7a
 2488 03e5 00000000 		.4byte	.LFB17
 2489 03e9 18000000 		.4byte	.LFE17
 2490 03ed 94030000 		.4byte	.LLST17
 2491 03f1 01       		.byte	0x1
 2492 03f2 09       		.uleb128 0x9
 2493 03f3 01       		.byte	0x1
 2494 03f4 75020000 		.4byte	.LASF47
 2495 03f8 01       		.byte	0x1
 2496 03f9 F402     		.2byte	0x2f4
 2497 03fb 01       		.byte	0x1
 2498 03fc 00000000 		.4byte	.LFB18
 2499 0400 48000000 		.4byte	.LFE18
 2500 0404 C0030000 		.4byte	.LLST18
 2501 0408 01       		.byte	0x1
 2502 0409 2C040000 		.4byte	0x42c
 2503 040d 0B       		.uleb128 0xb
 2504 040e AD050000 		.4byte	.LASF48
 2505 0412 01       		.byte	0x1
 2506 0413 F402     		.2byte	0x2f4
 2507 0415 7A000000 		.4byte	0x7a
 2508 0419 02       		.byte	0x2
 2509 041a 91       		.byte	0x91
 2510 041b 64       		.sleb128 -28
 2511 041c 0A       		.uleb128 0xa
 2512 041d 8D050000 		.4byte	.LASF20
 2513 0421 01       		.byte	0x1
 2514 0422 F602     		.2byte	0x2f6
 2515 0424 6F000000 		.4byte	0x6f
 2516 0428 02       		.byte	0x2
 2517 0429 91       		.byte	0x91
 2518 042a 6F       		.sleb128 -17
 2519 042b 00       		.byte	0
 2520 042c 0C       		.uleb128 0xc
 2521 042d 01       		.byte	0x1
 2522 042e 6B010000 		.4byte	.LASF49
 2523 0432 01       		.byte	0x1
 2524 0433 0F03     		.2byte	0x30f
 2525 0435 01       		.byte	0x1
 2526 0436 00000000 		.4byte	.LFB19
 2527 043a 1C000000 		.4byte	.LFE19
 2528 043e F8030000 		.4byte	.LLST19
 2529 0442 01       		.byte	0x1
 2530 0443 57040000 		.4byte	0x457
 2531 0447 0B       		.uleb128 0xb
 2532 0448 D0050000 		.4byte	.LASF50
 2533 044c 01       		.byte	0x1
 2534 044d 0F03     		.2byte	0x30f
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 70


 2535 044f 7A000000 		.4byte	0x7a
 2536 0453 02       		.byte	0x2
 2537 0454 91       		.byte	0x91
 2538 0455 74       		.sleb128 -12
 2539 0456 00       		.byte	0
 2540 0457 0D       		.uleb128 0xd
 2541 0458 01       		.byte	0x1
 2542 0459 11050000 		.4byte	.LASF51
 2543 045d 01       		.byte	0x1
 2544 045e 2303     		.2byte	0x323
 2545 0460 01       		.byte	0x1
 2546 0461 7A000000 		.4byte	0x7a
 2547 0465 00000000 		.4byte	.LFB20
 2548 0469 18000000 		.4byte	.LFE20
 2549 046d 30040000 		.4byte	.LLST20
 2550 0471 01       		.byte	0x1
 2551 0472 09       		.uleb128 0x9
 2552 0473 01       		.byte	0x1
 2553 0474 6A050000 		.4byte	.LASF52
 2554 0478 01       		.byte	0x1
 2555 0479 3D03     		.2byte	0x33d
 2556 047b 01       		.byte	0x1
 2557 047c 00000000 		.4byte	.LFB21
 2558 0480 48000000 		.4byte	.LFE21
 2559 0484 5C040000 		.4byte	.LLST21
 2560 0488 01       		.byte	0x1
 2561 0489 AC040000 		.4byte	0x4ac
 2562 048d 0B       		.uleb128 0xb
 2563 048e AD050000 		.4byte	.LASF48
 2564 0492 01       		.byte	0x1
 2565 0493 3D03     		.2byte	0x33d
 2566 0495 7A000000 		.4byte	0x7a
 2567 0499 02       		.byte	0x2
 2568 049a 91       		.byte	0x91
 2569 049b 64       		.sleb128 -28
 2570 049c 0A       		.uleb128 0xa
 2571 049d 8D050000 		.4byte	.LASF20
 2572 04a1 01       		.byte	0x1
 2573 04a2 3F03     		.2byte	0x33f
 2574 04a4 6F000000 		.4byte	0x6f
 2575 04a8 02       		.byte	0x2
 2576 04a9 91       		.byte	0x91
 2577 04aa 6F       		.sleb128 -17
 2578 04ab 00       		.byte	0
 2579 04ac 0C       		.uleb128 0xc
 2580 04ad 01       		.byte	0x1
 2581 04ae 76000000 		.4byte	.LASF53
 2582 04b2 01       		.byte	0x1
 2583 04b3 5A03     		.2byte	0x35a
 2584 04b5 01       		.byte	0x1
 2585 04b6 00000000 		.4byte	.LFB22
 2586 04ba 1C000000 		.4byte	.LFE22
 2587 04be 94040000 		.4byte	.LLST22
 2588 04c2 01       		.byte	0x1
 2589 04c3 D7040000 		.4byte	0x4d7
 2590 04c7 0B       		.uleb128 0xb
 2591 04c8 46030000 		.4byte	.LASF54
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 71


 2592 04cc 01       		.byte	0x1
 2593 04cd 5A03     		.2byte	0x35a
 2594 04cf 7A000000 		.4byte	0x7a
 2595 04d3 02       		.byte	0x2
 2596 04d4 91       		.byte	0x91
 2597 04d5 74       		.sleb128 -12
 2598 04d6 00       		.byte	0
 2599 04d7 0D       		.uleb128 0xd
 2600 04d8 01       		.byte	0x1
 2601 04d9 60000000 		.4byte	.LASF55
 2602 04dd 01       		.byte	0x1
 2603 04de 8403     		.2byte	0x384
 2604 04e0 01       		.byte	0x1
 2605 04e1 7A000000 		.4byte	0x7a
 2606 04e5 00000000 		.4byte	.LFB23
 2607 04e9 18000000 		.4byte	.LFE23
 2608 04ed CC040000 		.4byte	.LLST23
 2609 04f1 01       		.byte	0x1
 2610 04f2 0C       		.uleb128 0xc
 2611 04f3 01       		.byte	0x1
 2612 04f4 F7040000 		.4byte	.LASF56
 2613 04f8 01       		.byte	0x1
 2614 04f9 B003     		.2byte	0x3b0
 2615 04fb 01       		.byte	0x1
 2616 04fc 00000000 		.4byte	.LFB24
 2617 0500 1C000000 		.4byte	.LFE24
 2618 0504 F8040000 		.4byte	.LLST24
 2619 0508 01       		.byte	0x1
 2620 0509 1D050000 		.4byte	0x51d
 2621 050d 0B       		.uleb128 0xb
 2622 050e 82050000 		.4byte	.LASF57
 2623 0512 01       		.byte	0x1
 2624 0513 B003     		.2byte	0x3b0
 2625 0515 7A000000 		.4byte	0x7a
 2626 0519 02       		.byte	0x2
 2627 051a 91       		.byte	0x91
 2628 051b 74       		.sleb128 -12
 2629 051c 00       		.byte	0
 2630 051d 0D       		.uleb128 0xd
 2631 051e 01       		.byte	0x1
 2632 051f D0040000 		.4byte	.LASF58
 2633 0523 01       		.byte	0x1
 2634 0524 DA03     		.2byte	0x3da
 2635 0526 01       		.byte	0x1
 2636 0527 7A000000 		.4byte	0x7a
 2637 052b 00000000 		.4byte	.LFB25
 2638 052f 18000000 		.4byte	.LFE25
 2639 0533 30050000 		.4byte	.LLST25
 2640 0537 01       		.byte	0x1
 2641 0538 0D       		.uleb128 0xd
 2642 0539 01       		.byte	0x1
 2643 053a 99040000 		.4byte	.LASF59
 2644 053e 01       		.byte	0x1
 2645 053f 0604     		.2byte	0x406
 2646 0541 01       		.byte	0x1
 2647 0542 7A000000 		.4byte	0x7a
 2648 0546 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 72


 2649 054a 18000000 		.4byte	.LFE26
 2650 054e 5C050000 		.4byte	.LLST26
 2651 0552 01       		.byte	0x1
 2652 0553 0D       		.uleb128 0xd
 2653 0554 01       		.byte	0x1
 2654 0555 E0010000 		.4byte	.LASF60
 2655 0559 01       		.byte	0x1
 2656 055a 1B04     		.2byte	0x41b
 2657 055c 01       		.byte	0x1
 2658 055d 7A000000 		.4byte	0x7a
 2659 0561 00000000 		.4byte	.LFB27
 2660 0565 18000000 		.4byte	.LFE27
 2661 0569 88050000 		.4byte	.LLST27
 2662 056d 01       		.byte	0x1
 2663 056e 09       		.uleb128 0x9
 2664 056f 01       		.byte	0x1
 2665 0570 91010000 		.4byte	.LASF61
 2666 0574 01       		.byte	0x1
 2667 0575 3604     		.2byte	0x436
 2668 0577 01       		.byte	0x1
 2669 0578 00000000 		.4byte	.LFB28
 2670 057c 44000000 		.4byte	.LFE28
 2671 0580 B4050000 		.4byte	.LLST28
 2672 0584 01       		.byte	0x1
 2673 0585 A8050000 		.4byte	0x5a8
 2674 0589 0B       		.uleb128 0xb
 2675 058a C6010000 		.4byte	.LASF62
 2676 058e 01       		.byte	0x1
 2677 058f 3604     		.2byte	0x436
 2678 0591 7A000000 		.4byte	0x7a
 2679 0595 02       		.byte	0x2
 2680 0596 91       		.byte	0x91
 2681 0597 64       		.sleb128 -28
 2682 0598 0A       		.uleb128 0xa
 2683 0599 8D050000 		.4byte	.LASF20
 2684 059d 01       		.byte	0x1
 2685 059e 3804     		.2byte	0x438
 2686 05a0 6F000000 		.4byte	0x6f
 2687 05a4 02       		.byte	0x2
 2688 05a5 91       		.byte	0x91
 2689 05a6 6F       		.sleb128 -17
 2690 05a7 00       		.byte	0
 2691 05a8 09       		.uleb128 0x9
 2692 05a9 01       		.byte	0x1
 2693 05aa B8050000 		.4byte	.LASF63
 2694 05ae 01       		.byte	0x1
 2695 05af 5704     		.2byte	0x457
 2696 05b1 01       		.byte	0x1
 2697 05b2 00000000 		.4byte	.LFB29
 2698 05b6 44000000 		.4byte	.LFE29
 2699 05ba EC050000 		.4byte	.LLST29
 2700 05be 01       		.byte	0x1
 2701 05bf E2050000 		.4byte	0x5e2
 2702 05c3 0B       		.uleb128 0xb
 2703 05c4 C6010000 		.4byte	.LASF62
 2704 05c8 01       		.byte	0x1
 2705 05c9 5704     		.2byte	0x457
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 73


 2706 05cb 7A000000 		.4byte	0x7a
 2707 05cf 02       		.byte	0x2
 2708 05d0 91       		.byte	0x91
 2709 05d1 64       		.sleb128 -28
 2710 05d2 0A       		.uleb128 0xa
 2711 05d3 8D050000 		.4byte	.LASF20
 2712 05d7 01       		.byte	0x1
 2713 05d8 5904     		.2byte	0x459
 2714 05da 6F000000 		.4byte	0x6f
 2715 05de 02       		.byte	0x2
 2716 05df 91       		.byte	0x91
 2717 05e0 6F       		.sleb128 -17
 2718 05e1 00       		.byte	0
 2719 05e2 09       		.uleb128 0x9
 2720 05e3 01       		.byte	0x1
 2721 05e4 2C000000 		.4byte	.LASF64
 2722 05e8 01       		.byte	0x1
 2723 05e9 7804     		.2byte	0x478
 2724 05eb 01       		.byte	0x1
 2725 05ec 00000000 		.4byte	.LFB30
 2726 05f0 48000000 		.4byte	.LFE30
 2727 05f4 24060000 		.4byte	.LLST30
 2728 05f8 01       		.byte	0x1
 2729 05f9 1C060000 		.4byte	0x61c
 2730 05fd 0B       		.uleb128 0xb
 2731 05fe C6010000 		.4byte	.LASF62
 2732 0602 01       		.byte	0x1
 2733 0603 7804     		.2byte	0x478
 2734 0605 7A000000 		.4byte	0x7a
 2735 0609 02       		.byte	0x2
 2736 060a 91       		.byte	0x91
 2737 060b 64       		.sleb128 -28
 2738 060c 0A       		.uleb128 0xa
 2739 060d 8D050000 		.4byte	.LASF20
 2740 0611 01       		.byte	0x1
 2741 0612 7A04     		.2byte	0x47a
 2742 0614 6F000000 		.4byte	0x6f
 2743 0618 02       		.byte	0x2
 2744 0619 91       		.byte	0x91
 2745 061a 6F       		.sleb128 -17
 2746 061b 00       		.byte	0
 2747 061c 09       		.uleb128 0x9
 2748 061d 01       		.byte	0x1
 2749 061e 3B020000 		.4byte	.LASF65
 2750 0622 01       		.byte	0x1
 2751 0623 9804     		.2byte	0x498
 2752 0625 01       		.byte	0x1
 2753 0626 00000000 		.4byte	.LFB31
 2754 062a 44000000 		.4byte	.LFE31
 2755 062e 5C060000 		.4byte	.LLST31
 2756 0632 01       		.byte	0x1
 2757 0633 56060000 		.4byte	0x656
 2758 0637 0B       		.uleb128 0xb
 2759 0638 C6010000 		.4byte	.LASF62
 2760 063c 01       		.byte	0x1
 2761 063d 9804     		.2byte	0x498
 2762 063f 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 74


 2763 0643 02       		.byte	0x2
 2764 0644 91       		.byte	0x91
 2765 0645 64       		.sleb128 -28
 2766 0646 0A       		.uleb128 0xa
 2767 0647 8D050000 		.4byte	.LASF20
 2768 064b 01       		.byte	0x1
 2769 064c 9A04     		.2byte	0x49a
 2770 064e 6F000000 		.4byte	0x6f
 2771 0652 02       		.byte	0x2
 2772 0653 91       		.byte	0x91
 2773 0654 6F       		.sleb128 -17
 2774 0655 00       		.byte	0
 2775 0656 09       		.uleb128 0x9
 2776 0657 01       		.byte	0x1
 2777 0658 B9040000 		.4byte	.LASF66
 2778 065c 01       		.byte	0x1
 2779 065d B904     		.2byte	0x4b9
 2780 065f 01       		.byte	0x1
 2781 0660 00000000 		.4byte	.LFB32
 2782 0664 44000000 		.4byte	.LFE32
 2783 0668 94060000 		.4byte	.LLST32
 2784 066c 01       		.byte	0x1
 2785 066d 90060000 		.4byte	0x690
 2786 0671 0B       		.uleb128 0xb
 2787 0672 C6010000 		.4byte	.LASF62
 2788 0676 01       		.byte	0x1
 2789 0677 B904     		.2byte	0x4b9
 2790 0679 7A000000 		.4byte	0x7a
 2791 067d 02       		.byte	0x2
 2792 067e 91       		.byte	0x91
 2793 067f 64       		.sleb128 -28
 2794 0680 0A       		.uleb128 0xa
 2795 0681 8D050000 		.4byte	.LASF20
 2796 0685 01       		.byte	0x1
 2797 0686 BB04     		.2byte	0x4bb
 2798 0688 6F000000 		.4byte	0x6f
 2799 068c 02       		.byte	0x2
 2800 068d 91       		.byte	0x91
 2801 068e 6F       		.sleb128 -17
 2802 068f 00       		.byte	0
 2803 0690 09       		.uleb128 0x9
 2804 0691 01       		.byte	0x1
 2805 0692 90030000 		.4byte	.LASF67
 2806 0696 01       		.byte	0x1
 2807 0697 E104     		.2byte	0x4e1
 2808 0699 01       		.byte	0x1
 2809 069a 00000000 		.4byte	.LFB33
 2810 069e 3C000000 		.4byte	.LFE33
 2811 06a2 CC060000 		.4byte	.LLST33
 2812 06a6 01       		.byte	0x1
 2813 06a7 D9060000 		.4byte	0x6d9
 2814 06ab 0B       		.uleb128 0xb
 2815 06ac D2010000 		.4byte	.LASF38
 2816 06b0 01       		.byte	0x1
 2817 06b1 E104     		.2byte	0x4e1
 2818 06b3 7A000000 		.4byte	0x7a
 2819 06b7 02       		.byte	0x2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 75


 2820 06b8 91       		.byte	0x91
 2821 06b9 64       		.sleb128 -28
 2822 06ba 0B       		.uleb128 0xb
 2823 06bb 06020000 		.4byte	.LASF68
 2824 06bf 01       		.byte	0x1
 2825 06c0 E104     		.2byte	0x4e1
 2826 06c2 7A000000 		.4byte	0x7a
 2827 06c6 02       		.byte	0x2
 2828 06c7 91       		.byte	0x91
 2829 06c8 60       		.sleb128 -32
 2830 06c9 0A       		.uleb128 0xa
 2831 06ca 8D050000 		.4byte	.LASF20
 2832 06ce 01       		.byte	0x1
 2833 06cf E304     		.2byte	0x4e3
 2834 06d1 6F000000 		.4byte	0x6f
 2835 06d5 02       		.byte	0x2
 2836 06d6 91       		.byte	0x91
 2837 06d7 6F       		.sleb128 -17
 2838 06d8 00       		.byte	0
 2839 06d9 0D       		.uleb128 0xd
 2840 06da 01       		.byte	0x1
 2841 06db AA010000 		.4byte	.LASF69
 2842 06df 01       		.byte	0x1
 2843 06e0 FE04     		.2byte	0x4fe
 2844 06e2 01       		.byte	0x1
 2845 06e3 7A000000 		.4byte	0x7a
 2846 06e7 00000000 		.4byte	.LFB34
 2847 06eb 20000000 		.4byte	.LFE34
 2848 06ef 04070000 		.4byte	.LLST34
 2849 06f3 01       		.byte	0x1
 2850 06f4 0C       		.uleb128 0xc
 2851 06f5 01       		.byte	0x1
 2852 06f6 65030000 		.4byte	.LASF70
 2853 06fa 01       		.byte	0x1
 2854 06fb 1705     		.2byte	0x517
 2855 06fd 01       		.byte	0x1
 2856 06fe 00000000 		.4byte	.LFB35
 2857 0702 18000000 		.4byte	.LFE35
 2858 0706 30070000 		.4byte	.LLST35
 2859 070a 01       		.byte	0x1
 2860 070b 1F070000 		.4byte	0x71f
 2861 070f 0B       		.uleb128 0xb
 2862 0710 E9040000 		.4byte	.LASF71
 2863 0714 01       		.byte	0x1
 2864 0715 1705     		.2byte	0x517
 2865 0717 7A000000 		.4byte	0x7a
 2866 071b 02       		.byte	0x2
 2867 071c 91       		.byte	0x91
 2868 071d 74       		.sleb128 -12
 2869 071e 00       		.byte	0
 2870 071f 0D       		.uleb128 0xd
 2871 0720 01       		.byte	0x1
 2872 0721 9D020000 		.4byte	.LASF72
 2873 0725 01       		.byte	0x1
 2874 0726 2E05     		.2byte	0x52e
 2875 0728 01       		.byte	0x1
 2876 0729 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 76


 2877 072d 00000000 		.4byte	.LFB36
 2878 0731 14000000 		.4byte	.LFE36
 2879 0735 68070000 		.4byte	.LLST36
 2880 0739 01       		.byte	0x1
 2881 073a 0D       		.uleb128 0xd
 2882 073b 01       		.byte	0x1
 2883 073c 43000000 		.4byte	.LASF73
 2884 0740 01       		.byte	0x1
 2885 0741 4505     		.2byte	0x545
 2886 0743 01       		.byte	0x1
 2887 0744 7A000000 		.4byte	0x7a
 2888 0748 00000000 		.4byte	.LFB37
 2889 074c 14000000 		.4byte	.LFE37
 2890 0750 94070000 		.4byte	.LLST37
 2891 0754 01       		.byte	0x1
 2892 0755 0C       		.uleb128 0xc
 2893 0756 01       		.byte	0x1
 2894 0757 A9030000 		.4byte	.LASF74
 2895 075b 01       		.byte	0x1
 2896 075c 5C05     		.2byte	0x55c
 2897 075e 01       		.byte	0x1
 2898 075f 00000000 		.4byte	.LFB38
 2899 0763 18000000 		.4byte	.LFE38
 2900 0767 C0070000 		.4byte	.LLST38
 2901 076b 01       		.byte	0x1
 2902 076c 80070000 		.4byte	0x780
 2903 0770 0B       		.uleb128 0xb
 2904 0771 E9040000 		.4byte	.LASF71
 2905 0775 01       		.byte	0x1
 2906 0776 5C05     		.2byte	0x55c
 2907 0778 7A000000 		.4byte	0x7a
 2908 077c 02       		.byte	0x2
 2909 077d 91       		.byte	0x91
 2910 077e 74       		.sleb128 -12
 2911 077f 00       		.byte	0
 2912 0780 0C       		.uleb128 0xc
 2913 0781 01       		.byte	0x1
 2914 0782 4E030000 		.4byte	.LASF75
 2915 0786 01       		.byte	0x1
 2916 0787 7305     		.2byte	0x573
 2917 0789 01       		.byte	0x1
 2918 078a 00000000 		.4byte	.LFB39
 2919 078e 18000000 		.4byte	.LFE39
 2920 0792 F8070000 		.4byte	.LLST39
 2921 0796 01       		.byte	0x1
 2922 0797 AB070000 		.4byte	0x7ab
 2923 079b 0B       		.uleb128 0xb
 2924 079c E9040000 		.4byte	.LASF71
 2925 07a0 01       		.byte	0x1
 2926 07a1 7305     		.2byte	0x573
 2927 07a3 7A000000 		.4byte	0x7a
 2928 07a7 02       		.byte	0x2
 2929 07a8 91       		.byte	0x91
 2930 07a9 74       		.sleb128 -12
 2931 07aa 00       		.byte	0
 2932 07ab 0E       		.uleb128 0xe
 2933 07ac 29020000 		.4byte	.LASF79
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 77


 2934 07b0 01       		.byte	0x1
 2935 07b1 16       		.byte	0x16
 2936 07b2 6F000000 		.4byte	0x6f
 2937 07b6 01       		.byte	0x1
 2938 07b7 05       		.byte	0x5
 2939 07b8 03       		.byte	0x3
 2940 07b9 00000000 		.4byte	PWM_Servo_initVar
 2941 07bd 00       		.byte	0
 2942              		.section	.debug_abbrev,"",%progbits
 2943              	.Ldebug_abbrev0:
 2944 0000 01       		.uleb128 0x1
 2945 0001 11       		.uleb128 0x11
 2946 0002 01       		.byte	0x1
 2947 0003 25       		.uleb128 0x25
 2948 0004 0E       		.uleb128 0xe
 2949 0005 13       		.uleb128 0x13
 2950 0006 0B       		.uleb128 0xb
 2951 0007 03       		.uleb128 0x3
 2952 0008 0E       		.uleb128 0xe
 2953 0009 1B       		.uleb128 0x1b
 2954 000a 0E       		.uleb128 0xe
 2955 000b 55       		.uleb128 0x55
 2956 000c 06       		.uleb128 0x6
 2957 000d 11       		.uleb128 0x11
 2958 000e 01       		.uleb128 0x1
 2959 000f 52       		.uleb128 0x52
 2960 0010 01       		.uleb128 0x1
 2961 0011 10       		.uleb128 0x10
 2962 0012 06       		.uleb128 0x6
 2963 0013 00       		.byte	0
 2964 0014 00       		.byte	0
 2965 0015 02       		.uleb128 0x2
 2966 0016 24       		.uleb128 0x24
 2967 0017 00       		.byte	0
 2968 0018 0B       		.uleb128 0xb
 2969 0019 0B       		.uleb128 0xb
 2970 001a 3E       		.uleb128 0x3e
 2971 001b 0B       		.uleb128 0xb
 2972 001c 03       		.uleb128 0x3
 2973 001d 0E       		.uleb128 0xe
 2974 001e 00       		.byte	0
 2975 001f 00       		.byte	0
 2976 0020 03       		.uleb128 0x3
 2977 0021 24       		.uleb128 0x24
 2978 0022 00       		.byte	0
 2979 0023 0B       		.uleb128 0xb
 2980 0024 0B       		.uleb128 0xb
 2981 0025 3E       		.uleb128 0x3e
 2982 0026 0B       		.uleb128 0xb
 2983 0027 03       		.uleb128 0x3
 2984 0028 08       		.uleb128 0x8
 2985 0029 00       		.byte	0
 2986 002a 00       		.byte	0
 2987 002b 04       		.uleb128 0x4
 2988 002c 16       		.uleb128 0x16
 2989 002d 00       		.byte	0
 2990 002e 03       		.uleb128 0x3
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 78


 2991 002f 0E       		.uleb128 0xe
 2992 0030 3A       		.uleb128 0x3a
 2993 0031 0B       		.uleb128 0xb
 2994 0032 3B       		.uleb128 0x3b
 2995 0033 0B       		.uleb128 0xb
 2996 0034 49       		.uleb128 0x49
 2997 0035 13       		.uleb128 0x13
 2998 0036 00       		.byte	0
 2999 0037 00       		.byte	0
 3000 0038 05       		.uleb128 0x5
 3001 0039 35       		.uleb128 0x35
 3002 003a 00       		.byte	0
 3003 003b 49       		.uleb128 0x49
 3004 003c 13       		.uleb128 0x13
 3005 003d 00       		.byte	0
 3006 003e 00       		.byte	0
 3007 003f 06       		.uleb128 0x6
 3008 0040 2E       		.uleb128 0x2e
 3009 0041 00       		.byte	0
 3010 0042 3F       		.uleb128 0x3f
 3011 0043 0C       		.uleb128 0xc
 3012 0044 03       		.uleb128 0x3
 3013 0045 0E       		.uleb128 0xe
 3014 0046 3A       		.uleb128 0x3a
 3015 0047 0B       		.uleb128 0xb
 3016 0048 3B       		.uleb128 0x3b
 3017 0049 0B       		.uleb128 0xb
 3018 004a 27       		.uleb128 0x27
 3019 004b 0C       		.uleb128 0xc
 3020 004c 11       		.uleb128 0x11
 3021 004d 01       		.uleb128 0x1
 3022 004e 12       		.uleb128 0x12
 3023 004f 01       		.uleb128 0x1
 3024 0050 40       		.uleb128 0x40
 3025 0051 06       		.uleb128 0x6
 3026 0052 9642     		.uleb128 0x2116
 3027 0054 0C       		.uleb128 0xc
 3028 0055 00       		.byte	0
 3029 0056 00       		.byte	0
 3030 0057 07       		.uleb128 0x7
 3031 0058 2E       		.uleb128 0x2e
 3032 0059 01       		.byte	0x1
 3033 005a 3F       		.uleb128 0x3f
 3034 005b 0C       		.uleb128 0xc
 3035 005c 03       		.uleb128 0x3
 3036 005d 0E       		.uleb128 0xe
 3037 005e 3A       		.uleb128 0x3a
 3038 005f 0B       		.uleb128 0xb
 3039 0060 3B       		.uleb128 0x3b
 3040 0061 0B       		.uleb128 0xb
 3041 0062 27       		.uleb128 0x27
 3042 0063 0C       		.uleb128 0xc
 3043 0064 11       		.uleb128 0x11
 3044 0065 01       		.uleb128 0x1
 3045 0066 12       		.uleb128 0x12
 3046 0067 01       		.uleb128 0x1
 3047 0068 40       		.uleb128 0x40
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 79


 3048 0069 06       		.uleb128 0x6
 3049 006a 9642     		.uleb128 0x2116
 3050 006c 0C       		.uleb128 0xc
 3051 006d 01       		.uleb128 0x1
 3052 006e 13       		.uleb128 0x13
 3053 006f 00       		.byte	0
 3054 0070 00       		.byte	0
 3055 0071 08       		.uleb128 0x8
 3056 0072 34       		.uleb128 0x34
 3057 0073 00       		.byte	0
 3058 0074 03       		.uleb128 0x3
 3059 0075 0E       		.uleb128 0xe
 3060 0076 3A       		.uleb128 0x3a
 3061 0077 0B       		.uleb128 0xb
 3062 0078 3B       		.uleb128 0x3b
 3063 0079 0B       		.uleb128 0xb
 3064 007a 49       		.uleb128 0x49
 3065 007b 13       		.uleb128 0x13
 3066 007c 02       		.uleb128 0x2
 3067 007d 0A       		.uleb128 0xa
 3068 007e 00       		.byte	0
 3069 007f 00       		.byte	0
 3070 0080 09       		.uleb128 0x9
 3071 0081 2E       		.uleb128 0x2e
 3072 0082 01       		.byte	0x1
 3073 0083 3F       		.uleb128 0x3f
 3074 0084 0C       		.uleb128 0xc
 3075 0085 03       		.uleb128 0x3
 3076 0086 0E       		.uleb128 0xe
 3077 0087 3A       		.uleb128 0x3a
 3078 0088 0B       		.uleb128 0xb
 3079 0089 3B       		.uleb128 0x3b
 3080 008a 05       		.uleb128 0x5
 3081 008b 27       		.uleb128 0x27
 3082 008c 0C       		.uleb128 0xc
 3083 008d 11       		.uleb128 0x11
 3084 008e 01       		.uleb128 0x1
 3085 008f 12       		.uleb128 0x12
 3086 0090 01       		.uleb128 0x1
 3087 0091 40       		.uleb128 0x40
 3088 0092 06       		.uleb128 0x6
 3089 0093 9642     		.uleb128 0x2116
 3090 0095 0C       		.uleb128 0xc
 3091 0096 01       		.uleb128 0x1
 3092 0097 13       		.uleb128 0x13
 3093 0098 00       		.byte	0
 3094 0099 00       		.byte	0
 3095 009a 0A       		.uleb128 0xa
 3096 009b 34       		.uleb128 0x34
 3097 009c 00       		.byte	0
 3098 009d 03       		.uleb128 0x3
 3099 009e 0E       		.uleb128 0xe
 3100 009f 3A       		.uleb128 0x3a
 3101 00a0 0B       		.uleb128 0xb
 3102 00a1 3B       		.uleb128 0x3b
 3103 00a2 05       		.uleb128 0x5
 3104 00a3 49       		.uleb128 0x49
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 80


 3105 00a4 13       		.uleb128 0x13
 3106 00a5 02       		.uleb128 0x2
 3107 00a6 0A       		.uleb128 0xa
 3108 00a7 00       		.byte	0
 3109 00a8 00       		.byte	0
 3110 00a9 0B       		.uleb128 0xb
 3111 00aa 05       		.uleb128 0x5
 3112 00ab 00       		.byte	0
 3113 00ac 03       		.uleb128 0x3
 3114 00ad 0E       		.uleb128 0xe
 3115 00ae 3A       		.uleb128 0x3a
 3116 00af 0B       		.uleb128 0xb
 3117 00b0 3B       		.uleb128 0x3b
 3118 00b1 05       		.uleb128 0x5
 3119 00b2 49       		.uleb128 0x49
 3120 00b3 13       		.uleb128 0x13
 3121 00b4 02       		.uleb128 0x2
 3122 00b5 0A       		.uleb128 0xa
 3123 00b6 00       		.byte	0
 3124 00b7 00       		.byte	0
 3125 00b8 0C       		.uleb128 0xc
 3126 00b9 2E       		.uleb128 0x2e
 3127 00ba 01       		.byte	0x1
 3128 00bb 3F       		.uleb128 0x3f
 3129 00bc 0C       		.uleb128 0xc
 3130 00bd 03       		.uleb128 0x3
 3131 00be 0E       		.uleb128 0xe
 3132 00bf 3A       		.uleb128 0x3a
 3133 00c0 0B       		.uleb128 0xb
 3134 00c1 3B       		.uleb128 0x3b
 3135 00c2 05       		.uleb128 0x5
 3136 00c3 27       		.uleb128 0x27
 3137 00c4 0C       		.uleb128 0xc
 3138 00c5 11       		.uleb128 0x11
 3139 00c6 01       		.uleb128 0x1
 3140 00c7 12       		.uleb128 0x12
 3141 00c8 01       		.uleb128 0x1
 3142 00c9 40       		.uleb128 0x40
 3143 00ca 06       		.uleb128 0x6
 3144 00cb 9742     		.uleb128 0x2117
 3145 00cd 0C       		.uleb128 0xc
 3146 00ce 01       		.uleb128 0x1
 3147 00cf 13       		.uleb128 0x13
 3148 00d0 00       		.byte	0
 3149 00d1 00       		.byte	0
 3150 00d2 0D       		.uleb128 0xd
 3151 00d3 2E       		.uleb128 0x2e
 3152 00d4 00       		.byte	0
 3153 00d5 3F       		.uleb128 0x3f
 3154 00d6 0C       		.uleb128 0xc
 3155 00d7 03       		.uleb128 0x3
 3156 00d8 0E       		.uleb128 0xe
 3157 00d9 3A       		.uleb128 0x3a
 3158 00da 0B       		.uleb128 0xb
 3159 00db 3B       		.uleb128 0x3b
 3160 00dc 05       		.uleb128 0x5
 3161 00dd 27       		.uleb128 0x27
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 81


 3162 00de 0C       		.uleb128 0xc
 3163 00df 49       		.uleb128 0x49
 3164 00e0 13       		.uleb128 0x13
 3165 00e1 11       		.uleb128 0x11
 3166 00e2 01       		.uleb128 0x1
 3167 00e3 12       		.uleb128 0x12
 3168 00e4 01       		.uleb128 0x1
 3169 00e5 40       		.uleb128 0x40
 3170 00e6 06       		.uleb128 0x6
 3171 00e7 9742     		.uleb128 0x2117
 3172 00e9 0C       		.uleb128 0xc
 3173 00ea 00       		.byte	0
 3174 00eb 00       		.byte	0
 3175 00ec 0E       		.uleb128 0xe
 3176 00ed 34       		.uleb128 0x34
 3177 00ee 00       		.byte	0
 3178 00ef 03       		.uleb128 0x3
 3179 00f0 0E       		.uleb128 0xe
 3180 00f1 3A       		.uleb128 0x3a
 3181 00f2 0B       		.uleb128 0xb
 3182 00f3 3B       		.uleb128 0x3b
 3183 00f4 0B       		.uleb128 0xb
 3184 00f5 49       		.uleb128 0x49
 3185 00f6 13       		.uleb128 0x13
 3186 00f7 3F       		.uleb128 0x3f
 3187 00f8 0C       		.uleb128 0xc
 3188 00f9 02       		.uleb128 0x2
 3189 00fa 0A       		.uleb128 0xa
 3190 00fb 00       		.byte	0
 3191 00fc 00       		.byte	0
 3192 00fd 00       		.byte	0
 3193              		.section	.debug_loc,"",%progbits
 3194              	.Ldebug_loc0:
 3195              	.LLST0:
 3196 0000 00000000 		.4byte	.LFB0
 3197 0004 02000000 		.4byte	.LCFI0
 3198 0008 0200     		.2byte	0x2
 3199 000a 7D       		.byte	0x7d
 3200 000b 00       		.sleb128 0
 3201 000c 02000000 		.4byte	.LCFI0
 3202 0010 04000000 		.4byte	.LCFI1
 3203 0014 0200     		.2byte	0x2
 3204 0016 7D       		.byte	0x7d
 3205 0017 08       		.sleb128 8
 3206 0018 04000000 		.4byte	.LCFI1
 3207 001c 58000000 		.4byte	.LFE0
 3208 0020 0200     		.2byte	0x2
 3209 0022 77       		.byte	0x77
 3210 0023 08       		.sleb128 8
 3211 0024 00000000 		.4byte	0
 3212 0028 00000000 		.4byte	0
 3213              	.LLST1:
 3214 002c 00000000 		.4byte	.LFB1
 3215 0030 02000000 		.4byte	.LCFI2
 3216 0034 0200     		.2byte	0x2
 3217 0036 7D       		.byte	0x7d
 3218 0037 00       		.sleb128 0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 82


 3219 0038 02000000 		.4byte	.LCFI2
 3220 003c 04000000 		.4byte	.LCFI3
 3221 0040 0200     		.2byte	0x2
 3222 0042 7D       		.byte	0x7d
 3223 0043 0C       		.sleb128 12
 3224 0044 04000000 		.4byte	.LCFI3
 3225 0048 06000000 		.4byte	.LCFI4
 3226 004c 0200     		.2byte	0x2
 3227 004e 7D       		.byte	0x7d
 3228 004f 18       		.sleb128 24
 3229 0050 06000000 		.4byte	.LCFI4
 3230 0054 38000000 		.4byte	.LFE1
 3231 0058 0200     		.2byte	0x2
 3232 005a 77       		.byte	0x77
 3233 005b 18       		.sleb128 24
 3234 005c 00000000 		.4byte	0
 3235 0060 00000000 		.4byte	0
 3236              	.LLST2:
 3237 0064 00000000 		.4byte	.LFB2
 3238 0068 02000000 		.4byte	.LCFI5
 3239 006c 0200     		.2byte	0x2
 3240 006e 7D       		.byte	0x7d
 3241 006f 00       		.sleb128 0
 3242 0070 02000000 		.4byte	.LCFI5
 3243 0074 04000000 		.4byte	.LCFI6
 3244 0078 0200     		.2byte	0x2
 3245 007a 7D       		.byte	0x7d
 3246 007b 08       		.sleb128 8
 3247 007c 04000000 		.4byte	.LCFI6
 3248 0080 24000000 		.4byte	.LFE2
 3249 0084 0200     		.2byte	0x2
 3250 0086 77       		.byte	0x77
 3251 0087 08       		.sleb128 8
 3252 0088 00000000 		.4byte	0
 3253 008c 00000000 		.4byte	0
 3254              	.LLST3:
 3255 0090 00000000 		.4byte	.LFB3
 3256 0094 02000000 		.4byte	.LCFI7
 3257 0098 0200     		.2byte	0x2
 3258 009a 7D       		.byte	0x7d
 3259 009b 00       		.sleb128 0
 3260 009c 02000000 		.4byte	.LCFI7
 3261 00a0 04000000 		.4byte	.LCFI8
 3262 00a4 0200     		.2byte	0x2
 3263 00a6 7D       		.byte	0x7d
 3264 00a7 0C       		.sleb128 12
 3265 00a8 04000000 		.4byte	.LCFI8
 3266 00ac 06000000 		.4byte	.LCFI9
 3267 00b0 0200     		.2byte	0x2
 3268 00b2 7D       		.byte	0x7d
 3269 00b3 18       		.sleb128 24
 3270 00b4 06000000 		.4byte	.LCFI9
 3271 00b8 30000000 		.4byte	.LFE3
 3272 00bc 0200     		.2byte	0x2
 3273 00be 77       		.byte	0x77
 3274 00bf 18       		.sleb128 24
 3275 00c0 00000000 		.4byte	0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 83


 3276 00c4 00000000 		.4byte	0
 3277              	.LLST4:
 3278 00c8 00000000 		.4byte	.LFB4
 3279 00cc 02000000 		.4byte	.LCFI10
 3280 00d0 0200     		.2byte	0x2
 3281 00d2 7D       		.byte	0x7d
 3282 00d3 00       		.sleb128 0
 3283 00d4 02000000 		.4byte	.LCFI10
 3284 00d8 04000000 		.4byte	.LCFI11
 3285 00dc 0200     		.2byte	0x2
 3286 00de 7D       		.byte	0x7d
 3287 00df 0C       		.sleb128 12
 3288 00e0 04000000 		.4byte	.LCFI11
 3289 00e4 06000000 		.4byte	.LCFI12
 3290 00e8 0200     		.2byte	0x2
 3291 00ea 7D       		.byte	0x7d
 3292 00eb 20       		.sleb128 32
 3293 00ec 06000000 		.4byte	.LCFI12
 3294 00f0 48000000 		.4byte	.LFE4
 3295 00f4 0200     		.2byte	0x2
 3296 00f6 77       		.byte	0x77
 3297 00f7 20       		.sleb128 32
 3298 00f8 00000000 		.4byte	0
 3299 00fc 00000000 		.4byte	0
 3300              	.LLST5:
 3301 0100 00000000 		.4byte	.LFB5
 3302 0104 02000000 		.4byte	.LCFI13
 3303 0108 0200     		.2byte	0x2
 3304 010a 7D       		.byte	0x7d
 3305 010b 00       		.sleb128 0
 3306 010c 02000000 		.4byte	.LCFI13
 3307 0110 04000000 		.4byte	.LCFI14
 3308 0114 0200     		.2byte	0x2
 3309 0116 7D       		.byte	0x7d
 3310 0117 0C       		.sleb128 12
 3311 0118 04000000 		.4byte	.LCFI14
 3312 011c 06000000 		.4byte	.LCFI15
 3313 0120 0200     		.2byte	0x2
 3314 0122 7D       		.byte	0x7d
 3315 0123 20       		.sleb128 32
 3316 0124 06000000 		.4byte	.LCFI15
 3317 0128 48000000 		.4byte	.LFE5
 3318 012c 0200     		.2byte	0x2
 3319 012e 77       		.byte	0x77
 3320 012f 20       		.sleb128 32
 3321 0130 00000000 		.4byte	0
 3322 0134 00000000 		.4byte	0
 3323              	.LLST6:
 3324 0138 00000000 		.4byte	.LFB6
 3325 013c 02000000 		.4byte	.LCFI16
 3326 0140 0200     		.2byte	0x2
 3327 0142 7D       		.byte	0x7d
 3328 0143 00       		.sleb128 0
 3329 0144 02000000 		.4byte	.LCFI16
 3330 0148 04000000 		.4byte	.LCFI17
 3331 014c 0200     		.2byte	0x2
 3332 014e 7D       		.byte	0x7d
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 84


 3333 014f 0C       		.sleb128 12
 3334 0150 04000000 		.4byte	.LCFI17
 3335 0154 06000000 		.4byte	.LCFI18
 3336 0158 0200     		.2byte	0x2
 3337 015a 7D       		.byte	0x7d
 3338 015b 20       		.sleb128 32
 3339 015c 06000000 		.4byte	.LCFI18
 3340 0160 48000000 		.4byte	.LFE6
 3341 0164 0200     		.2byte	0x2
 3342 0166 77       		.byte	0x77
 3343 0167 20       		.sleb128 32
 3344 0168 00000000 		.4byte	0
 3345 016c 00000000 		.4byte	0
 3346              	.LLST7:
 3347 0170 00000000 		.4byte	.LFB7
 3348 0174 02000000 		.4byte	.LCFI19
 3349 0178 0200     		.2byte	0x2
 3350 017a 7D       		.byte	0x7d
 3351 017b 00       		.sleb128 0
 3352 017c 02000000 		.4byte	.LCFI19
 3353 0180 04000000 		.4byte	.LCFI20
 3354 0184 0200     		.2byte	0x2
 3355 0186 7D       		.byte	0x7d
 3356 0187 0C       		.sleb128 12
 3357 0188 04000000 		.4byte	.LCFI20
 3358 018c 06000000 		.4byte	.LCFI21
 3359 0190 0200     		.2byte	0x2
 3360 0192 7D       		.byte	0x7d
 3361 0193 20       		.sleb128 32
 3362 0194 06000000 		.4byte	.LCFI21
 3363 0198 4C000000 		.4byte	.LFE7
 3364 019c 0200     		.2byte	0x2
 3365 019e 77       		.byte	0x77
 3366 019f 20       		.sleb128 32
 3367 01a0 00000000 		.4byte	0
 3368 01a4 00000000 		.4byte	0
 3369              	.LLST8:
 3370 01a8 00000000 		.4byte	.LFB8
 3371 01ac 02000000 		.4byte	.LCFI22
 3372 01b0 0200     		.2byte	0x2
 3373 01b2 7D       		.byte	0x7d
 3374 01b3 00       		.sleb128 0
 3375 01b4 02000000 		.4byte	.LCFI22
 3376 01b8 04000000 		.4byte	.LCFI23
 3377 01bc 0200     		.2byte	0x2
 3378 01be 7D       		.byte	0x7d
 3379 01bf 08       		.sleb128 8
 3380 01c0 04000000 		.4byte	.LCFI23
 3381 01c4 06000000 		.4byte	.LCFI24
 3382 01c8 0200     		.2byte	0x2
 3383 01ca 7D       		.byte	0x7d
 3384 01cb 10       		.sleb128 16
 3385 01cc 06000000 		.4byte	.LCFI24
 3386 01d0 1C000000 		.4byte	.LFE8
 3387 01d4 0200     		.2byte	0x2
 3388 01d6 77       		.byte	0x77
 3389 01d7 10       		.sleb128 16
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 85


 3390 01d8 00000000 		.4byte	0
 3391 01dc 00000000 		.4byte	0
 3392              	.LLST9:
 3393 01e0 00000000 		.4byte	.LFB9
 3394 01e4 02000000 		.4byte	.LCFI25
 3395 01e8 0200     		.2byte	0x2
 3396 01ea 7D       		.byte	0x7d
 3397 01eb 00       		.sleb128 0
 3398 01ec 02000000 		.4byte	.LCFI25
 3399 01f0 04000000 		.4byte	.LCFI26
 3400 01f4 0200     		.2byte	0x2
 3401 01f6 7D       		.byte	0x7d
 3402 01f7 0C       		.sleb128 12
 3403 01f8 04000000 		.4byte	.LCFI26
 3404 01fc 06000000 		.4byte	.LCFI27
 3405 0200 0200     		.2byte	0x2
 3406 0202 7D       		.byte	0x7d
 3407 0203 20       		.sleb128 32
 3408 0204 06000000 		.4byte	.LCFI27
 3409 0208 48000000 		.4byte	.LFE9
 3410 020c 0200     		.2byte	0x2
 3411 020e 77       		.byte	0x77
 3412 020f 20       		.sleb128 32
 3413 0210 00000000 		.4byte	0
 3414 0214 00000000 		.4byte	0
 3415              	.LLST10:
 3416 0218 00000000 		.4byte	.LFB10
 3417 021c 02000000 		.4byte	.LCFI28
 3418 0220 0200     		.2byte	0x2
 3419 0222 7D       		.byte	0x7d
 3420 0223 00       		.sleb128 0
 3421 0224 02000000 		.4byte	.LCFI28
 3422 0228 04000000 		.4byte	.LCFI29
 3423 022c 0200     		.2byte	0x2
 3424 022e 7D       		.byte	0x7d
 3425 022f 0C       		.sleb128 12
 3426 0230 04000000 		.4byte	.LCFI29
 3427 0234 06000000 		.4byte	.LCFI30
 3428 0238 0200     		.2byte	0x2
 3429 023a 7D       		.byte	0x7d
 3430 023b 20       		.sleb128 32
 3431 023c 06000000 		.4byte	.LCFI30
 3432 0240 48000000 		.4byte	.LFE10
 3433 0244 0200     		.2byte	0x2
 3434 0246 77       		.byte	0x77
 3435 0247 20       		.sleb128 32
 3436 0248 00000000 		.4byte	0
 3437 024c 00000000 		.4byte	0
 3438              	.LLST11:
 3439 0250 00000000 		.4byte	.LFB11
 3440 0254 02000000 		.4byte	.LCFI31
 3441 0258 0200     		.2byte	0x2
 3442 025a 7D       		.byte	0x7d
 3443 025b 00       		.sleb128 0
 3444 025c 02000000 		.4byte	.LCFI31
 3445 0260 04000000 		.4byte	.LCFI32
 3446 0264 0200     		.2byte	0x2
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 86


 3447 0266 7D       		.byte	0x7d
 3448 0267 0C       		.sleb128 12
 3449 0268 04000000 		.4byte	.LCFI32
 3450 026c 06000000 		.4byte	.LCFI33
 3451 0270 0200     		.2byte	0x2
 3452 0272 7D       		.byte	0x7d
 3453 0273 20       		.sleb128 32
 3454 0274 06000000 		.4byte	.LCFI33
 3455 0278 4C000000 		.4byte	.LFE11
 3456 027c 0200     		.2byte	0x2
 3457 027e 77       		.byte	0x77
 3458 027f 20       		.sleb128 32
 3459 0280 00000000 		.4byte	0
 3460 0284 00000000 		.4byte	0
 3461              	.LLST12:
 3462 0288 00000000 		.4byte	.LFB12
 3463 028c 02000000 		.4byte	.LCFI34
 3464 0290 0200     		.2byte	0x2
 3465 0292 7D       		.byte	0x7d
 3466 0293 00       		.sleb128 0
 3467 0294 02000000 		.4byte	.LCFI34
 3468 0298 04000000 		.4byte	.LCFI35
 3469 029c 0200     		.2byte	0x2
 3470 029e 7D       		.byte	0x7d
 3471 029f 0C       		.sleb128 12
 3472 02a0 04000000 		.4byte	.LCFI35
 3473 02a4 06000000 		.4byte	.LCFI36
 3474 02a8 0200     		.2byte	0x2
 3475 02aa 7D       		.byte	0x7d
 3476 02ab 20       		.sleb128 32
 3477 02ac 06000000 		.4byte	.LCFI36
 3478 02b0 48000000 		.4byte	.LFE12
 3479 02b4 0200     		.2byte	0x2
 3480 02b6 77       		.byte	0x77
 3481 02b7 20       		.sleb128 32
 3482 02b8 00000000 		.4byte	0
 3483 02bc 00000000 		.4byte	0
 3484              	.LLST13:
 3485 02c0 00000000 		.4byte	.LFB13
 3486 02c4 02000000 		.4byte	.LCFI37
 3487 02c8 0200     		.2byte	0x2
 3488 02ca 7D       		.byte	0x7d
 3489 02cb 00       		.sleb128 0
 3490 02cc 02000000 		.4byte	.LCFI37
 3491 02d0 04000000 		.4byte	.LCFI38
 3492 02d4 0200     		.2byte	0x2
 3493 02d6 7D       		.byte	0x7d
 3494 02d7 08       		.sleb128 8
 3495 02d8 04000000 		.4byte	.LCFI38
 3496 02dc 06000000 		.4byte	.LCFI39
 3497 02e0 0200     		.2byte	0x2
 3498 02e2 7D       		.byte	0x7d
 3499 02e3 10       		.sleb128 16
 3500 02e4 06000000 		.4byte	.LCFI39
 3501 02e8 1C000000 		.4byte	.LFE13
 3502 02ec 0200     		.2byte	0x2
 3503 02ee 77       		.byte	0x77
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 87


 3504 02ef 10       		.sleb128 16
 3505 02f0 00000000 		.4byte	0
 3506 02f4 00000000 		.4byte	0
 3507              	.LLST14:
 3508 02f8 00000000 		.4byte	.LFB14
 3509 02fc 02000000 		.4byte	.LCFI40
 3510 0300 0200     		.2byte	0x2
 3511 0302 7D       		.byte	0x7d
 3512 0303 00       		.sleb128 0
 3513 0304 02000000 		.4byte	.LCFI40
 3514 0308 04000000 		.4byte	.LCFI41
 3515 030c 0200     		.2byte	0x2
 3516 030e 7D       		.byte	0x7d
 3517 030f 08       		.sleb128 8
 3518 0310 04000000 		.4byte	.LCFI41
 3519 0314 18000000 		.4byte	.LFE14
 3520 0318 0200     		.2byte	0x2
 3521 031a 77       		.byte	0x77
 3522 031b 08       		.sleb128 8
 3523 031c 00000000 		.4byte	0
 3524 0320 00000000 		.4byte	0
 3525              	.LLST15:
 3526 0324 00000000 		.4byte	.LFB15
 3527 0328 02000000 		.4byte	.LCFI42
 3528 032c 0200     		.2byte	0x2
 3529 032e 7D       		.byte	0x7d
 3530 032f 00       		.sleb128 0
 3531 0330 02000000 		.4byte	.LCFI42
 3532 0334 04000000 		.4byte	.LCFI43
 3533 0338 0200     		.2byte	0x2
 3534 033a 7D       		.byte	0x7d
 3535 033b 0C       		.sleb128 12
 3536 033c 04000000 		.4byte	.LCFI43
 3537 0340 06000000 		.4byte	.LCFI44
 3538 0344 0200     		.2byte	0x2
 3539 0346 7D       		.byte	0x7d
 3540 0347 20       		.sleb128 32
 3541 0348 06000000 		.4byte	.LCFI44
 3542 034c 48000000 		.4byte	.LFE15
 3543 0350 0200     		.2byte	0x2
 3544 0352 77       		.byte	0x77
 3545 0353 20       		.sleb128 32
 3546 0354 00000000 		.4byte	0
 3547 0358 00000000 		.4byte	0
 3548              	.LLST16:
 3549 035c 00000000 		.4byte	.LFB16
 3550 0360 02000000 		.4byte	.LCFI45
 3551 0364 0200     		.2byte	0x2
 3552 0366 7D       		.byte	0x7d
 3553 0367 00       		.sleb128 0
 3554 0368 02000000 		.4byte	.LCFI45
 3555 036c 04000000 		.4byte	.LCFI46
 3556 0370 0200     		.2byte	0x2
 3557 0372 7D       		.byte	0x7d
 3558 0373 08       		.sleb128 8
 3559 0374 04000000 		.4byte	.LCFI46
 3560 0378 06000000 		.4byte	.LCFI47
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 88


 3561 037c 0200     		.2byte	0x2
 3562 037e 7D       		.byte	0x7d
 3563 037f 10       		.sleb128 16
 3564 0380 06000000 		.4byte	.LCFI47
 3565 0384 1C000000 		.4byte	.LFE16
 3566 0388 0200     		.2byte	0x2
 3567 038a 77       		.byte	0x77
 3568 038b 10       		.sleb128 16
 3569 038c 00000000 		.4byte	0
 3570 0390 00000000 		.4byte	0
 3571              	.LLST17:
 3572 0394 00000000 		.4byte	.LFB17
 3573 0398 02000000 		.4byte	.LCFI48
 3574 039c 0200     		.2byte	0x2
 3575 039e 7D       		.byte	0x7d
 3576 039f 00       		.sleb128 0
 3577 03a0 02000000 		.4byte	.LCFI48
 3578 03a4 04000000 		.4byte	.LCFI49
 3579 03a8 0200     		.2byte	0x2
 3580 03aa 7D       		.byte	0x7d
 3581 03ab 08       		.sleb128 8
 3582 03ac 04000000 		.4byte	.LCFI49
 3583 03b0 18000000 		.4byte	.LFE17
 3584 03b4 0200     		.2byte	0x2
 3585 03b6 77       		.byte	0x77
 3586 03b7 08       		.sleb128 8
 3587 03b8 00000000 		.4byte	0
 3588 03bc 00000000 		.4byte	0
 3589              	.LLST18:
 3590 03c0 00000000 		.4byte	.LFB18
 3591 03c4 02000000 		.4byte	.LCFI50
 3592 03c8 0200     		.2byte	0x2
 3593 03ca 7D       		.byte	0x7d
 3594 03cb 00       		.sleb128 0
 3595 03cc 02000000 		.4byte	.LCFI50
 3596 03d0 04000000 		.4byte	.LCFI51
 3597 03d4 0200     		.2byte	0x2
 3598 03d6 7D       		.byte	0x7d
 3599 03d7 0C       		.sleb128 12
 3600 03d8 04000000 		.4byte	.LCFI51
 3601 03dc 06000000 		.4byte	.LCFI52
 3602 03e0 0200     		.2byte	0x2
 3603 03e2 7D       		.byte	0x7d
 3604 03e3 20       		.sleb128 32
 3605 03e4 06000000 		.4byte	.LCFI52
 3606 03e8 48000000 		.4byte	.LFE18
 3607 03ec 0200     		.2byte	0x2
 3608 03ee 77       		.byte	0x77
 3609 03ef 20       		.sleb128 32
 3610 03f0 00000000 		.4byte	0
 3611 03f4 00000000 		.4byte	0
 3612              	.LLST19:
 3613 03f8 00000000 		.4byte	.LFB19
 3614 03fc 02000000 		.4byte	.LCFI53
 3615 0400 0200     		.2byte	0x2
 3616 0402 7D       		.byte	0x7d
 3617 0403 00       		.sleb128 0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 89


 3618 0404 02000000 		.4byte	.LCFI53
 3619 0408 04000000 		.4byte	.LCFI54
 3620 040c 0200     		.2byte	0x2
 3621 040e 7D       		.byte	0x7d
 3622 040f 08       		.sleb128 8
 3623 0410 04000000 		.4byte	.LCFI54
 3624 0414 06000000 		.4byte	.LCFI55
 3625 0418 0200     		.2byte	0x2
 3626 041a 7D       		.byte	0x7d
 3627 041b 10       		.sleb128 16
 3628 041c 06000000 		.4byte	.LCFI55
 3629 0420 1C000000 		.4byte	.LFE19
 3630 0424 0200     		.2byte	0x2
 3631 0426 77       		.byte	0x77
 3632 0427 10       		.sleb128 16
 3633 0428 00000000 		.4byte	0
 3634 042c 00000000 		.4byte	0
 3635              	.LLST20:
 3636 0430 00000000 		.4byte	.LFB20
 3637 0434 02000000 		.4byte	.LCFI56
 3638 0438 0200     		.2byte	0x2
 3639 043a 7D       		.byte	0x7d
 3640 043b 00       		.sleb128 0
 3641 043c 02000000 		.4byte	.LCFI56
 3642 0440 04000000 		.4byte	.LCFI57
 3643 0444 0200     		.2byte	0x2
 3644 0446 7D       		.byte	0x7d
 3645 0447 08       		.sleb128 8
 3646 0448 04000000 		.4byte	.LCFI57
 3647 044c 18000000 		.4byte	.LFE20
 3648 0450 0200     		.2byte	0x2
 3649 0452 77       		.byte	0x77
 3650 0453 08       		.sleb128 8
 3651 0454 00000000 		.4byte	0
 3652 0458 00000000 		.4byte	0
 3653              	.LLST21:
 3654 045c 00000000 		.4byte	.LFB21
 3655 0460 02000000 		.4byte	.LCFI58
 3656 0464 0200     		.2byte	0x2
 3657 0466 7D       		.byte	0x7d
 3658 0467 00       		.sleb128 0
 3659 0468 02000000 		.4byte	.LCFI58
 3660 046c 04000000 		.4byte	.LCFI59
 3661 0470 0200     		.2byte	0x2
 3662 0472 7D       		.byte	0x7d
 3663 0473 0C       		.sleb128 12
 3664 0474 04000000 		.4byte	.LCFI59
 3665 0478 06000000 		.4byte	.LCFI60
 3666 047c 0200     		.2byte	0x2
 3667 047e 7D       		.byte	0x7d
 3668 047f 20       		.sleb128 32
 3669 0480 06000000 		.4byte	.LCFI60
 3670 0484 48000000 		.4byte	.LFE21
 3671 0488 0200     		.2byte	0x2
 3672 048a 77       		.byte	0x77
 3673 048b 20       		.sleb128 32
 3674 048c 00000000 		.4byte	0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 90


 3675 0490 00000000 		.4byte	0
 3676              	.LLST22:
 3677 0494 00000000 		.4byte	.LFB22
 3678 0498 02000000 		.4byte	.LCFI61
 3679 049c 0200     		.2byte	0x2
 3680 049e 7D       		.byte	0x7d
 3681 049f 00       		.sleb128 0
 3682 04a0 02000000 		.4byte	.LCFI61
 3683 04a4 04000000 		.4byte	.LCFI62
 3684 04a8 0200     		.2byte	0x2
 3685 04aa 7D       		.byte	0x7d
 3686 04ab 08       		.sleb128 8
 3687 04ac 04000000 		.4byte	.LCFI62
 3688 04b0 06000000 		.4byte	.LCFI63
 3689 04b4 0200     		.2byte	0x2
 3690 04b6 7D       		.byte	0x7d
 3691 04b7 10       		.sleb128 16
 3692 04b8 06000000 		.4byte	.LCFI63
 3693 04bc 1C000000 		.4byte	.LFE22
 3694 04c0 0200     		.2byte	0x2
 3695 04c2 77       		.byte	0x77
 3696 04c3 10       		.sleb128 16
 3697 04c4 00000000 		.4byte	0
 3698 04c8 00000000 		.4byte	0
 3699              	.LLST23:
 3700 04cc 00000000 		.4byte	.LFB23
 3701 04d0 02000000 		.4byte	.LCFI64
 3702 04d4 0200     		.2byte	0x2
 3703 04d6 7D       		.byte	0x7d
 3704 04d7 00       		.sleb128 0
 3705 04d8 02000000 		.4byte	.LCFI64
 3706 04dc 04000000 		.4byte	.LCFI65
 3707 04e0 0200     		.2byte	0x2
 3708 04e2 7D       		.byte	0x7d
 3709 04e3 08       		.sleb128 8
 3710 04e4 04000000 		.4byte	.LCFI65
 3711 04e8 18000000 		.4byte	.LFE23
 3712 04ec 0200     		.2byte	0x2
 3713 04ee 77       		.byte	0x77
 3714 04ef 08       		.sleb128 8
 3715 04f0 00000000 		.4byte	0
 3716 04f4 00000000 		.4byte	0
 3717              	.LLST24:
 3718 04f8 00000000 		.4byte	.LFB24
 3719 04fc 02000000 		.4byte	.LCFI66
 3720 0500 0200     		.2byte	0x2
 3721 0502 7D       		.byte	0x7d
 3722 0503 00       		.sleb128 0
 3723 0504 02000000 		.4byte	.LCFI66
 3724 0508 04000000 		.4byte	.LCFI67
 3725 050c 0200     		.2byte	0x2
 3726 050e 7D       		.byte	0x7d
 3727 050f 08       		.sleb128 8
 3728 0510 04000000 		.4byte	.LCFI67
 3729 0514 06000000 		.4byte	.LCFI68
 3730 0518 0200     		.2byte	0x2
 3731 051a 7D       		.byte	0x7d
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 91


 3732 051b 10       		.sleb128 16
 3733 051c 06000000 		.4byte	.LCFI68
 3734 0520 1C000000 		.4byte	.LFE24
 3735 0524 0200     		.2byte	0x2
 3736 0526 77       		.byte	0x77
 3737 0527 10       		.sleb128 16
 3738 0528 00000000 		.4byte	0
 3739 052c 00000000 		.4byte	0
 3740              	.LLST25:
 3741 0530 00000000 		.4byte	.LFB25
 3742 0534 02000000 		.4byte	.LCFI69
 3743 0538 0200     		.2byte	0x2
 3744 053a 7D       		.byte	0x7d
 3745 053b 00       		.sleb128 0
 3746 053c 02000000 		.4byte	.LCFI69
 3747 0540 04000000 		.4byte	.LCFI70
 3748 0544 0200     		.2byte	0x2
 3749 0546 7D       		.byte	0x7d
 3750 0547 08       		.sleb128 8
 3751 0548 04000000 		.4byte	.LCFI70
 3752 054c 18000000 		.4byte	.LFE25
 3753 0550 0200     		.2byte	0x2
 3754 0552 77       		.byte	0x77
 3755 0553 08       		.sleb128 8
 3756 0554 00000000 		.4byte	0
 3757 0558 00000000 		.4byte	0
 3758              	.LLST26:
 3759 055c 00000000 		.4byte	.LFB26
 3760 0560 02000000 		.4byte	.LCFI71
 3761 0564 0200     		.2byte	0x2
 3762 0566 7D       		.byte	0x7d
 3763 0567 00       		.sleb128 0
 3764 0568 02000000 		.4byte	.LCFI71
 3765 056c 04000000 		.4byte	.LCFI72
 3766 0570 0200     		.2byte	0x2
 3767 0572 7D       		.byte	0x7d
 3768 0573 08       		.sleb128 8
 3769 0574 04000000 		.4byte	.LCFI72
 3770 0578 18000000 		.4byte	.LFE26
 3771 057c 0200     		.2byte	0x2
 3772 057e 77       		.byte	0x77
 3773 057f 08       		.sleb128 8
 3774 0580 00000000 		.4byte	0
 3775 0584 00000000 		.4byte	0
 3776              	.LLST27:
 3777 0588 00000000 		.4byte	.LFB27
 3778 058c 02000000 		.4byte	.LCFI73
 3779 0590 0200     		.2byte	0x2
 3780 0592 7D       		.byte	0x7d
 3781 0593 00       		.sleb128 0
 3782 0594 02000000 		.4byte	.LCFI73
 3783 0598 04000000 		.4byte	.LCFI74
 3784 059c 0200     		.2byte	0x2
 3785 059e 7D       		.byte	0x7d
 3786 059f 08       		.sleb128 8
 3787 05a0 04000000 		.4byte	.LCFI74
 3788 05a4 18000000 		.4byte	.LFE27
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 92


 3789 05a8 0200     		.2byte	0x2
 3790 05aa 77       		.byte	0x77
 3791 05ab 08       		.sleb128 8
 3792 05ac 00000000 		.4byte	0
 3793 05b0 00000000 		.4byte	0
 3794              	.LLST28:
 3795 05b4 00000000 		.4byte	.LFB28
 3796 05b8 02000000 		.4byte	.LCFI75
 3797 05bc 0200     		.2byte	0x2
 3798 05be 7D       		.byte	0x7d
 3799 05bf 00       		.sleb128 0
 3800 05c0 02000000 		.4byte	.LCFI75
 3801 05c4 04000000 		.4byte	.LCFI76
 3802 05c8 0200     		.2byte	0x2
 3803 05ca 7D       		.byte	0x7d
 3804 05cb 0C       		.sleb128 12
 3805 05cc 04000000 		.4byte	.LCFI76
 3806 05d0 06000000 		.4byte	.LCFI77
 3807 05d4 0200     		.2byte	0x2
 3808 05d6 7D       		.byte	0x7d
 3809 05d7 20       		.sleb128 32
 3810 05d8 06000000 		.4byte	.LCFI77
 3811 05dc 44000000 		.4byte	.LFE28
 3812 05e0 0200     		.2byte	0x2
 3813 05e2 77       		.byte	0x77
 3814 05e3 20       		.sleb128 32
 3815 05e4 00000000 		.4byte	0
 3816 05e8 00000000 		.4byte	0
 3817              	.LLST29:
 3818 05ec 00000000 		.4byte	.LFB29
 3819 05f0 02000000 		.4byte	.LCFI78
 3820 05f4 0200     		.2byte	0x2
 3821 05f6 7D       		.byte	0x7d
 3822 05f7 00       		.sleb128 0
 3823 05f8 02000000 		.4byte	.LCFI78
 3824 05fc 04000000 		.4byte	.LCFI79
 3825 0600 0200     		.2byte	0x2
 3826 0602 7D       		.byte	0x7d
 3827 0603 0C       		.sleb128 12
 3828 0604 04000000 		.4byte	.LCFI79
 3829 0608 06000000 		.4byte	.LCFI80
 3830 060c 0200     		.2byte	0x2
 3831 060e 7D       		.byte	0x7d
 3832 060f 20       		.sleb128 32
 3833 0610 06000000 		.4byte	.LCFI80
 3834 0614 44000000 		.4byte	.LFE29
 3835 0618 0200     		.2byte	0x2
 3836 061a 77       		.byte	0x77
 3837 061b 20       		.sleb128 32
 3838 061c 00000000 		.4byte	0
 3839 0620 00000000 		.4byte	0
 3840              	.LLST30:
 3841 0624 00000000 		.4byte	.LFB30
 3842 0628 02000000 		.4byte	.LCFI81
 3843 062c 0200     		.2byte	0x2
 3844 062e 7D       		.byte	0x7d
 3845 062f 00       		.sleb128 0
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 93


 3846 0630 02000000 		.4byte	.LCFI81
 3847 0634 04000000 		.4byte	.LCFI82
 3848 0638 0200     		.2byte	0x2
 3849 063a 7D       		.byte	0x7d
 3850 063b 0C       		.sleb128 12
 3851 063c 04000000 		.4byte	.LCFI82
 3852 0640 06000000 		.4byte	.LCFI83
 3853 0644 0200     		.2byte	0x2
 3854 0646 7D       		.byte	0x7d
 3855 0647 20       		.sleb128 32
 3856 0648 06000000 		.4byte	.LCFI83
 3857 064c 48000000 		.4byte	.LFE30
 3858 0650 0200     		.2byte	0x2
 3859 0652 77       		.byte	0x77
 3860 0653 20       		.sleb128 32
 3861 0654 00000000 		.4byte	0
 3862 0658 00000000 		.4byte	0
 3863              	.LLST31:
 3864 065c 00000000 		.4byte	.LFB31
 3865 0660 02000000 		.4byte	.LCFI84
 3866 0664 0200     		.2byte	0x2
 3867 0666 7D       		.byte	0x7d
 3868 0667 00       		.sleb128 0
 3869 0668 02000000 		.4byte	.LCFI84
 3870 066c 04000000 		.4byte	.LCFI85
 3871 0670 0200     		.2byte	0x2
 3872 0672 7D       		.byte	0x7d
 3873 0673 0C       		.sleb128 12
 3874 0674 04000000 		.4byte	.LCFI85
 3875 0678 06000000 		.4byte	.LCFI86
 3876 067c 0200     		.2byte	0x2
 3877 067e 7D       		.byte	0x7d
 3878 067f 20       		.sleb128 32
 3879 0680 06000000 		.4byte	.LCFI86
 3880 0684 44000000 		.4byte	.LFE31
 3881 0688 0200     		.2byte	0x2
 3882 068a 77       		.byte	0x77
 3883 068b 20       		.sleb128 32
 3884 068c 00000000 		.4byte	0
 3885 0690 00000000 		.4byte	0
 3886              	.LLST32:
 3887 0694 00000000 		.4byte	.LFB32
 3888 0698 02000000 		.4byte	.LCFI87
 3889 069c 0200     		.2byte	0x2
 3890 069e 7D       		.byte	0x7d
 3891 069f 00       		.sleb128 0
 3892 06a0 02000000 		.4byte	.LCFI87
 3893 06a4 04000000 		.4byte	.LCFI88
 3894 06a8 0200     		.2byte	0x2
 3895 06aa 7D       		.byte	0x7d
 3896 06ab 0C       		.sleb128 12
 3897 06ac 04000000 		.4byte	.LCFI88
 3898 06b0 06000000 		.4byte	.LCFI89
 3899 06b4 0200     		.2byte	0x2
 3900 06b6 7D       		.byte	0x7d
 3901 06b7 20       		.sleb128 32
 3902 06b8 06000000 		.4byte	.LCFI89
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 94


 3903 06bc 44000000 		.4byte	.LFE32
 3904 06c0 0200     		.2byte	0x2
 3905 06c2 77       		.byte	0x77
 3906 06c3 20       		.sleb128 32
 3907 06c4 00000000 		.4byte	0
 3908 06c8 00000000 		.4byte	0
 3909              	.LLST33:
 3910 06cc 00000000 		.4byte	.LFB33
 3911 06d0 02000000 		.4byte	.LCFI90
 3912 06d4 0200     		.2byte	0x2
 3913 06d6 7D       		.byte	0x7d
 3914 06d7 00       		.sleb128 0
 3915 06d8 02000000 		.4byte	.LCFI90
 3916 06dc 04000000 		.4byte	.LCFI91
 3917 06e0 0200     		.2byte	0x2
 3918 06e2 7D       		.byte	0x7d
 3919 06e3 0C       		.sleb128 12
 3920 06e4 04000000 		.4byte	.LCFI91
 3921 06e8 06000000 		.4byte	.LCFI92
 3922 06ec 0200     		.2byte	0x2
 3923 06ee 7D       		.byte	0x7d
 3924 06ef 20       		.sleb128 32
 3925 06f0 06000000 		.4byte	.LCFI92
 3926 06f4 3C000000 		.4byte	.LFE33
 3927 06f8 0200     		.2byte	0x2
 3928 06fa 77       		.byte	0x77
 3929 06fb 20       		.sleb128 32
 3930 06fc 00000000 		.4byte	0
 3931 0700 00000000 		.4byte	0
 3932              	.LLST34:
 3933 0704 00000000 		.4byte	.LFB34
 3934 0708 02000000 		.4byte	.LCFI93
 3935 070c 0200     		.2byte	0x2
 3936 070e 7D       		.byte	0x7d
 3937 070f 00       		.sleb128 0
 3938 0710 02000000 		.4byte	.LCFI93
 3939 0714 04000000 		.4byte	.LCFI94
 3940 0718 0200     		.2byte	0x2
 3941 071a 7D       		.byte	0x7d
 3942 071b 08       		.sleb128 8
 3943 071c 04000000 		.4byte	.LCFI94
 3944 0720 20000000 		.4byte	.LFE34
 3945 0724 0200     		.2byte	0x2
 3946 0726 77       		.byte	0x77
 3947 0727 08       		.sleb128 8
 3948 0728 00000000 		.4byte	0
 3949 072c 00000000 		.4byte	0
 3950              	.LLST35:
 3951 0730 00000000 		.4byte	.LFB35
 3952 0734 02000000 		.4byte	.LCFI95
 3953 0738 0200     		.2byte	0x2
 3954 073a 7D       		.byte	0x7d
 3955 073b 00       		.sleb128 0
 3956 073c 02000000 		.4byte	.LCFI95
 3957 0740 04000000 		.4byte	.LCFI96
 3958 0744 0200     		.2byte	0x2
 3959 0746 7D       		.byte	0x7d
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 95


 3960 0747 08       		.sleb128 8
 3961 0748 04000000 		.4byte	.LCFI96
 3962 074c 06000000 		.4byte	.LCFI97
 3963 0750 0200     		.2byte	0x2
 3964 0752 7D       		.byte	0x7d
 3965 0753 10       		.sleb128 16
 3966 0754 06000000 		.4byte	.LCFI97
 3967 0758 18000000 		.4byte	.LFE35
 3968 075c 0200     		.2byte	0x2
 3969 075e 77       		.byte	0x77
 3970 075f 10       		.sleb128 16
 3971 0760 00000000 		.4byte	0
 3972 0764 00000000 		.4byte	0
 3973              	.LLST36:
 3974 0768 00000000 		.4byte	.LFB36
 3975 076c 02000000 		.4byte	.LCFI98
 3976 0770 0200     		.2byte	0x2
 3977 0772 7D       		.byte	0x7d
 3978 0773 00       		.sleb128 0
 3979 0774 02000000 		.4byte	.LCFI98
 3980 0778 04000000 		.4byte	.LCFI99
 3981 077c 0200     		.2byte	0x2
 3982 077e 7D       		.byte	0x7d
 3983 077f 08       		.sleb128 8
 3984 0780 04000000 		.4byte	.LCFI99
 3985 0784 14000000 		.4byte	.LFE36
 3986 0788 0200     		.2byte	0x2
 3987 078a 77       		.byte	0x77
 3988 078b 08       		.sleb128 8
 3989 078c 00000000 		.4byte	0
 3990 0790 00000000 		.4byte	0
 3991              	.LLST37:
 3992 0794 00000000 		.4byte	.LFB37
 3993 0798 02000000 		.4byte	.LCFI100
 3994 079c 0200     		.2byte	0x2
 3995 079e 7D       		.byte	0x7d
 3996 079f 00       		.sleb128 0
 3997 07a0 02000000 		.4byte	.LCFI100
 3998 07a4 04000000 		.4byte	.LCFI101
 3999 07a8 0200     		.2byte	0x2
 4000 07aa 7D       		.byte	0x7d
 4001 07ab 08       		.sleb128 8
 4002 07ac 04000000 		.4byte	.LCFI101
 4003 07b0 14000000 		.4byte	.LFE37
 4004 07b4 0200     		.2byte	0x2
 4005 07b6 77       		.byte	0x77
 4006 07b7 08       		.sleb128 8
 4007 07b8 00000000 		.4byte	0
 4008 07bc 00000000 		.4byte	0
 4009              	.LLST38:
 4010 07c0 00000000 		.4byte	.LFB38
 4011 07c4 02000000 		.4byte	.LCFI102
 4012 07c8 0200     		.2byte	0x2
 4013 07ca 7D       		.byte	0x7d
 4014 07cb 00       		.sleb128 0
 4015 07cc 02000000 		.4byte	.LCFI102
 4016 07d0 04000000 		.4byte	.LCFI103
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 96


 4017 07d4 0200     		.2byte	0x2
 4018 07d6 7D       		.byte	0x7d
 4019 07d7 08       		.sleb128 8
 4020 07d8 04000000 		.4byte	.LCFI103
 4021 07dc 06000000 		.4byte	.LCFI104
 4022 07e0 0200     		.2byte	0x2
 4023 07e2 7D       		.byte	0x7d
 4024 07e3 10       		.sleb128 16
 4025 07e4 06000000 		.4byte	.LCFI104
 4026 07e8 18000000 		.4byte	.LFE38
 4027 07ec 0200     		.2byte	0x2
 4028 07ee 77       		.byte	0x77
 4029 07ef 10       		.sleb128 16
 4030 07f0 00000000 		.4byte	0
 4031 07f4 00000000 		.4byte	0
 4032              	.LLST39:
 4033 07f8 00000000 		.4byte	.LFB39
 4034 07fc 02000000 		.4byte	.LCFI105
 4035 0800 0200     		.2byte	0x2
 4036 0802 7D       		.byte	0x7d
 4037 0803 00       		.sleb128 0
 4038 0804 02000000 		.4byte	.LCFI105
 4039 0808 04000000 		.4byte	.LCFI106
 4040 080c 0200     		.2byte	0x2
 4041 080e 7D       		.byte	0x7d
 4042 080f 08       		.sleb128 8
 4043 0810 04000000 		.4byte	.LCFI106
 4044 0814 06000000 		.4byte	.LCFI107
 4045 0818 0200     		.2byte	0x2
 4046 081a 7D       		.byte	0x7d
 4047 081b 10       		.sleb128 16
 4048 081c 06000000 		.4byte	.LCFI107
 4049 0820 18000000 		.4byte	.LFE39
 4050 0824 0200     		.2byte	0x2
 4051 0826 77       		.byte	0x77
 4052 0827 10       		.sleb128 16
 4053 0828 00000000 		.4byte	0
 4054 082c 00000000 		.4byte	0
 4055              		.section	.debug_aranges,"",%progbits
 4056 0000 54010000 		.4byte	0x154
 4057 0004 0200     		.2byte	0x2
 4058 0006 00000000 		.4byte	.Ldebug_info0
 4059 000a 04       		.byte	0x4
 4060 000b 00       		.byte	0
 4061 000c 0000     		.2byte	0
 4062 000e 0000     		.2byte	0
 4063 0010 00000000 		.4byte	.LFB0
 4064 0014 58000000 		.4byte	.LFE0-.LFB0
 4065 0018 00000000 		.4byte	.LFB1
 4066 001c 38000000 		.4byte	.LFE1-.LFB1
 4067 0020 00000000 		.4byte	.LFB2
 4068 0024 24000000 		.4byte	.LFE2-.LFB2
 4069 0028 00000000 		.4byte	.LFB3
 4070 002c 30000000 		.4byte	.LFE3-.LFB3
 4071 0030 00000000 		.4byte	.LFB4
 4072 0034 48000000 		.4byte	.LFE4-.LFB4
 4073 0038 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 97


 4074 003c 48000000 		.4byte	.LFE5-.LFB5
 4075 0040 00000000 		.4byte	.LFB6
 4076 0044 48000000 		.4byte	.LFE6-.LFB6
 4077 0048 00000000 		.4byte	.LFB7
 4078 004c 4C000000 		.4byte	.LFE7-.LFB7
 4079 0050 00000000 		.4byte	.LFB8
 4080 0054 1C000000 		.4byte	.LFE8-.LFB8
 4081 0058 00000000 		.4byte	.LFB9
 4082 005c 48000000 		.4byte	.LFE9-.LFB9
 4083 0060 00000000 		.4byte	.LFB10
 4084 0064 48000000 		.4byte	.LFE10-.LFB10
 4085 0068 00000000 		.4byte	.LFB11
 4086 006c 4C000000 		.4byte	.LFE11-.LFB11
 4087 0070 00000000 		.4byte	.LFB12
 4088 0074 48000000 		.4byte	.LFE12-.LFB12
 4089 0078 00000000 		.4byte	.LFB13
 4090 007c 1C000000 		.4byte	.LFE13-.LFB13
 4091 0080 00000000 		.4byte	.LFB14
 4092 0084 18000000 		.4byte	.LFE14-.LFB14
 4093 0088 00000000 		.4byte	.LFB15
 4094 008c 48000000 		.4byte	.LFE15-.LFB15
 4095 0090 00000000 		.4byte	.LFB16
 4096 0094 1C000000 		.4byte	.LFE16-.LFB16
 4097 0098 00000000 		.4byte	.LFB17
 4098 009c 18000000 		.4byte	.LFE17-.LFB17
 4099 00a0 00000000 		.4byte	.LFB18
 4100 00a4 48000000 		.4byte	.LFE18-.LFB18
 4101 00a8 00000000 		.4byte	.LFB19
 4102 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4103 00b0 00000000 		.4byte	.LFB20
 4104 00b4 18000000 		.4byte	.LFE20-.LFB20
 4105 00b8 00000000 		.4byte	.LFB21
 4106 00bc 48000000 		.4byte	.LFE21-.LFB21
 4107 00c0 00000000 		.4byte	.LFB22
 4108 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4109 00c8 00000000 		.4byte	.LFB23
 4110 00cc 18000000 		.4byte	.LFE23-.LFB23
 4111 00d0 00000000 		.4byte	.LFB24
 4112 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4113 00d8 00000000 		.4byte	.LFB25
 4114 00dc 18000000 		.4byte	.LFE25-.LFB25
 4115 00e0 00000000 		.4byte	.LFB26
 4116 00e4 18000000 		.4byte	.LFE26-.LFB26
 4117 00e8 00000000 		.4byte	.LFB27
 4118 00ec 18000000 		.4byte	.LFE27-.LFB27
 4119 00f0 00000000 		.4byte	.LFB28
 4120 00f4 44000000 		.4byte	.LFE28-.LFB28
 4121 00f8 00000000 		.4byte	.LFB29
 4122 00fc 44000000 		.4byte	.LFE29-.LFB29
 4123 0100 00000000 		.4byte	.LFB30
 4124 0104 48000000 		.4byte	.LFE30-.LFB30
 4125 0108 00000000 		.4byte	.LFB31
 4126 010c 44000000 		.4byte	.LFE31-.LFB31
 4127 0110 00000000 		.4byte	.LFB32
 4128 0114 44000000 		.4byte	.LFE32-.LFB32
 4129 0118 00000000 		.4byte	.LFB33
 4130 011c 3C000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 98


 4131 0120 00000000 		.4byte	.LFB34
 4132 0124 20000000 		.4byte	.LFE34-.LFB34
 4133 0128 00000000 		.4byte	.LFB35
 4134 012c 18000000 		.4byte	.LFE35-.LFB35
 4135 0130 00000000 		.4byte	.LFB36
 4136 0134 14000000 		.4byte	.LFE36-.LFB36
 4137 0138 00000000 		.4byte	.LFB37
 4138 013c 14000000 		.4byte	.LFE37-.LFB37
 4139 0140 00000000 		.4byte	.LFB38
 4140 0144 18000000 		.4byte	.LFE38-.LFB38
 4141 0148 00000000 		.4byte	.LFB39
 4142 014c 18000000 		.4byte	.LFE39-.LFB39
 4143 0150 00000000 		.4byte	0
 4144 0154 00000000 		.4byte	0
 4145              		.section	.debug_ranges,"",%progbits
 4146              	.Ldebug_ranges0:
 4147 0000 00000000 		.4byte	.LFB0
 4148 0004 58000000 		.4byte	.LFE0
 4149 0008 00000000 		.4byte	.LFB1
 4150 000c 38000000 		.4byte	.LFE1
 4151 0010 00000000 		.4byte	.LFB2
 4152 0014 24000000 		.4byte	.LFE2
 4153 0018 00000000 		.4byte	.LFB3
 4154 001c 30000000 		.4byte	.LFE3
 4155 0020 00000000 		.4byte	.LFB4
 4156 0024 48000000 		.4byte	.LFE4
 4157 0028 00000000 		.4byte	.LFB5
 4158 002c 48000000 		.4byte	.LFE5
 4159 0030 00000000 		.4byte	.LFB6
 4160 0034 48000000 		.4byte	.LFE6
 4161 0038 00000000 		.4byte	.LFB7
 4162 003c 4C000000 		.4byte	.LFE7
 4163 0040 00000000 		.4byte	.LFB8
 4164 0044 1C000000 		.4byte	.LFE8
 4165 0048 00000000 		.4byte	.LFB9
 4166 004c 48000000 		.4byte	.LFE9
 4167 0050 00000000 		.4byte	.LFB10
 4168 0054 48000000 		.4byte	.LFE10
 4169 0058 00000000 		.4byte	.LFB11
 4170 005c 4C000000 		.4byte	.LFE11
 4171 0060 00000000 		.4byte	.LFB12
 4172 0064 48000000 		.4byte	.LFE12
 4173 0068 00000000 		.4byte	.LFB13
 4174 006c 1C000000 		.4byte	.LFE13
 4175 0070 00000000 		.4byte	.LFB14
 4176 0074 18000000 		.4byte	.LFE14
 4177 0078 00000000 		.4byte	.LFB15
 4178 007c 48000000 		.4byte	.LFE15
 4179 0080 00000000 		.4byte	.LFB16
 4180 0084 1C000000 		.4byte	.LFE16
 4181 0088 00000000 		.4byte	.LFB17
 4182 008c 18000000 		.4byte	.LFE17
 4183 0090 00000000 		.4byte	.LFB18
 4184 0094 48000000 		.4byte	.LFE18
 4185 0098 00000000 		.4byte	.LFB19
 4186 009c 1C000000 		.4byte	.LFE19
 4187 00a0 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 99


 4188 00a4 18000000 		.4byte	.LFE20
 4189 00a8 00000000 		.4byte	.LFB21
 4190 00ac 48000000 		.4byte	.LFE21
 4191 00b0 00000000 		.4byte	.LFB22
 4192 00b4 1C000000 		.4byte	.LFE22
 4193 00b8 00000000 		.4byte	.LFB23
 4194 00bc 18000000 		.4byte	.LFE23
 4195 00c0 00000000 		.4byte	.LFB24
 4196 00c4 1C000000 		.4byte	.LFE24
 4197 00c8 00000000 		.4byte	.LFB25
 4198 00cc 18000000 		.4byte	.LFE25
 4199 00d0 00000000 		.4byte	.LFB26
 4200 00d4 18000000 		.4byte	.LFE26
 4201 00d8 00000000 		.4byte	.LFB27
 4202 00dc 18000000 		.4byte	.LFE27
 4203 00e0 00000000 		.4byte	.LFB28
 4204 00e4 44000000 		.4byte	.LFE28
 4205 00e8 00000000 		.4byte	.LFB29
 4206 00ec 44000000 		.4byte	.LFE29
 4207 00f0 00000000 		.4byte	.LFB30
 4208 00f4 48000000 		.4byte	.LFE30
 4209 00f8 00000000 		.4byte	.LFB31
 4210 00fc 44000000 		.4byte	.LFE31
 4211 0100 00000000 		.4byte	.LFB32
 4212 0104 44000000 		.4byte	.LFE32
 4213 0108 00000000 		.4byte	.LFB33
 4214 010c 3C000000 		.4byte	.LFE33
 4215 0110 00000000 		.4byte	.LFB34
 4216 0114 20000000 		.4byte	.LFE34
 4217 0118 00000000 		.4byte	.LFB35
 4218 011c 18000000 		.4byte	.LFE35
 4219 0120 00000000 		.4byte	.LFB36
 4220 0124 14000000 		.4byte	.LFE36
 4221 0128 00000000 		.4byte	.LFB37
 4222 012c 14000000 		.4byte	.LFE37
 4223 0130 00000000 		.4byte	.LFB38
 4224 0134 18000000 		.4byte	.LFE38
 4225 0138 00000000 		.4byte	.LFB39
 4226 013c 18000000 		.4byte	.LFE39
 4227 0140 00000000 		.4byte	0
 4228 0144 00000000 		.4byte	0
 4229              		.section	.debug_line,"",%progbits
 4230              	.Ldebug_line0:
 4231 0000 7A030000 		.section	.debug_str,"MS",%progbits,1
 4231      02004800 
 4231      00000201 
 4231      FB0E0D00 
 4231      01010101 
 4232              	.LASF19:
 4233 0000 50574D5F 		.ascii	"PWM_Servo_Stop\000"
 4233      53657276 
 4233      6F5F5374 
 4233      6F7000
 4234              	.LASF40:
 4235 000f 636F756E 		.ascii	"count\000"
 4235      7400
 4236              	.LASF37:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 100


 4237 0015 50574D5F 		.ascii	"PWM_Servo_SetPWMInvert\000"
 4237      53657276 
 4237      6F5F5365 
 4237      7450574D 
 4237      496E7665 
 4238              	.LASF64:
 4239 002c 50574D5F 		.ascii	"PWM_Servo_SetStartMode\000"
 4239      53657276 
 4239      6F5F5365 
 4239      74537461 
 4239      72744D6F 
 4240              	.LASF73:
 4241 0043 50574D5F 		.ascii	"PWM_Servo_GetInterruptSource\000"
 4241      53657276 
 4241      6F5F4765 
 4241      74496E74 
 4241      65727275 
 4242              	.LASF55:
 4243 0060 50574D5F 		.ascii	"PWM_Servo_ReadCompare\000"
 4243      53657276 
 4243      6F5F5265 
 4243      6164436F 
 4243      6D706172 
 4244              	.LASF53:
 4245 0076 50574D5F 		.ascii	"PWM_Servo_WriteCompare\000"
 4245      53657276 
 4245      6F5F5772 
 4245      69746543 
 4245      6F6D7061 
 4246              	.LASF44:
 4247 008d 70657269 		.ascii	"period\000"
 4247      6F6400
 4248              	.LASF7:
 4249 0094 6C6F6E67 		.ascii	"long long unsigned int\000"
 4249      206C6F6E 
 4249      6720756E 
 4249      7369676E 
 4249      65642069 
 4250              	.LASF22:
 4251 00ab 50574D5F 		.ascii	"PWM_Servo_SetQDMode\000"
 4251      53657276 
 4251      6F5F5365 
 4251      7451444D 
 4251      6F646500 
 4252              	.LASF77:
 4253 00bf 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_Servo.c\000"
 4253      6E657261 
 4253      7465645F 
 4253      536F7572 
 4253      63655C50 
 4254              	.LASF24:
 4255 00e4 71644D6F 		.ascii	"qdMode\000"
 4255      646500
 4256              	.LASF41:
 4257 00eb 50574D5F 		.ascii	"PWM_Servo_SetCounterMode\000"
 4257      53657276 
 4257      6F5F5365 
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 101


 4257      74436F75 
 4257      6E746572 
 4258              	.LASF6:
 4259 0104 6C6F6E67 		.ascii	"long long int\000"
 4259      206C6F6E 
 4259      6720696E 
 4259      7400
 4260              	.LASF0:
 4261 0112 7369676E 		.ascii	"signed char\000"
 4261      65642063 
 4261      68617200 
 4262              	.LASF45:
 4263 011e 50574D5F 		.ascii	"PWM_Servo_ReadCounter\000"
 4263      53657276 
 4263      6F5F5265 
 4263      6164436F 
 4263      756E7465 
 4264              	.LASF25:
 4265 0134 50574D5F 		.ascii	"PWM_Servo_SetPrescaler\000"
 4265      53657276 
 4265      6F5F5365 
 4265      74507265 
 4265      7363616C 
 4266              	.LASF39:
 4267 014b 50574D5F 		.ascii	"PWM_Servo_WriteCounter\000"
 4267      53657276 
 4267      6F5F5772 
 4267      69746543 
 4267      6F756E74 
 4268              	.LASF4:
 4269 0162 6C6F6E67 		.ascii	"long int\000"
 4269      20696E74 
 4269      00
 4270              	.LASF49:
 4271 016b 50574D5F 		.ascii	"PWM_Servo_WritePeriodBuf\000"
 4271      53657276 
 4271      6F5F5772 
 4271      69746550 
 4271      6572696F 
 4272              	.LASF9:
 4273 0184 75696E74 		.ascii	"uint8\000"
 4273      3800
 4274              	.LASF12:
 4275 018a 646F7562 		.ascii	"double\000"
 4275      6C6500
 4276              	.LASF61:
 4277 0191 50574D5F 		.ascii	"PWM_Servo_SetCaptureMode\000"
 4277      53657276 
 4277      6F5F5365 
 4277      74436170 
 4277      74757265 
 4278              	.LASF69:
 4279 01aa 50574D5F 		.ascii	"PWM_Servo_ReadStatus\000"
 4279      53657276 
 4279      6F5F5265 
 4279      61645374 
 4279      61747573 
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 102


 4280              	.LASF10:
 4281 01bf 75696E74 		.ascii	"uint32\000"
 4281      333200
 4282              	.LASF62:
 4283 01c6 74726967 		.ascii	"triggerMode\000"
 4283      6765724D 
 4283      6F646500 
 4284              	.LASF38:
 4285 01d2 6D61736B 		.ascii	"mask\000"
 4285      00
 4286              	.LASF36:
 4287 01d7 64656164 		.ascii	"deadTime\000"
 4287      54696D65 
 4287      00
 4288              	.LASF60:
 4289 01e0 50574D5F 		.ascii	"PWM_Servo_ReadCaptureBuf\000"
 4289      53657276 
 4289      6F5F5265 
 4289      61644361 
 4289      70747572 
 4290              	.LASF8:
 4291 01f9 756E7369 		.ascii	"unsigned int\000"
 4291      676E6564 
 4291      20696E74 
 4291      00
 4292              	.LASF68:
 4293 0206 636F6D6D 		.ascii	"command\000"
 4293      616E6400 
 4294              	.LASF5:
 4295 020e 6C6F6E67 		.ascii	"long unsigned int\000"
 4295      20756E73 
 4295      69676E65 
 4295      6420696E 
 4295      7400
 4296              	.LASF30:
 4297 0220 6D6F6465 		.ascii	"modeMask\000"
 4297      4D61736B 
 4297      00
 4298              	.LASF79:
 4299 0229 50574D5F 		.ascii	"PWM_Servo_initVar\000"
 4299      53657276 
 4299      6F5F696E 
 4299      69745661 
 4299      7200
 4300              	.LASF65:
 4301 023b 50574D5F 		.ascii	"PWM_Servo_SetStopMode\000"
 4301      53657276 
 4301      6F5F5365 
 4301      7453746F 
 4301      704D6F64 
 4302              	.LASF18:
 4303 0251 50574D5F 		.ascii	"PWM_Servo_Enable\000"
 4303      53657276 
 4303      6F5F456E 
 4303      61626C65 
 4303      00
 4304              	.LASF3:
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 103


 4305 0262 73686F72 		.ascii	"short unsigned int\000"
 4305      7420756E 
 4305      7369676E 
 4305      65642069 
 4305      6E7400
 4306              	.LASF47:
 4307 0275 50574D5F 		.ascii	"PWM_Servo_SetCompareSwap\000"
 4307      53657276 
 4307      6F5F5365 
 4307      74436F6D 
 4307      70617265 
 4308              	.LASF16:
 4309 028e 50574D5F 		.ascii	"PWM_Servo_Init\000"
 4309      53657276 
 4309      6F5F496E 
 4309      697400
 4310              	.LASF72:
 4311 029d 50574D5F 		.ascii	"PWM_Servo_GetInterruptSourceMasked\000"
 4311      53657276 
 4311      6F5F4765 
 4311      74496E74 
 4311      65727275 
 4312              	.LASF28:
 4313 02c0 6F6E6553 		.ascii	"oneShotEnable\000"
 4313      686F7445 
 4313      6E61626C 
 4313      6500
 4314              	.LASF46:
 4315 02ce 50574D5F 		.ascii	"PWM_Servo_ReadPeriod\000"
 4315      53657276 
 4315      6F5F5265 
 4315      61645065 
 4315      72696F64 
 4316              	.LASF14:
 4317 02e3 72656733 		.ascii	"reg32\000"
 4317      3200
 4318              	.LASF17:
 4319 02e9 50574D5F 		.ascii	"PWM_Servo_Start\000"
 4319      53657276 
 4319      6F5F5374 
 4319      61727400 
 4320              	.LASF31:
 4321 02f9 50574D5F 		.ascii	"PWM_Servo_SetPWMSyncKill\000"
 4321      53657276 
 4321      6F5F5365 
 4321      7450574D 
 4321      53796E63 
 4322              	.LASF15:
 4323 0312 73697A65 		.ascii	"sizetype\000"
 4323      74797065 
 4323      00
 4324              	.LASF43:
 4325 031b 50574D5F 		.ascii	"PWM_Servo_WritePeriod\000"
 4325      53657276 
 4325      6F5F5772 
 4325      69746550 
 4325      6572696F 
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 104


 4326              	.LASF27:
 4327 0331 50574D5F 		.ascii	"PWM_Servo_SetOneShot\000"
 4327      53657276 
 4327      6F5F5365 
 4327      744F6E65 
 4327      53686F74 
 4328              	.LASF54:
 4329 0346 636F6D70 		.ascii	"compare\000"
 4329      61726500 
 4330              	.LASF75:
 4331 034e 50574D5F 		.ascii	"PWM_Servo_SetInterrupt\000"
 4331      53657276 
 4331      6F5F5365 
 4331      74496E74 
 4331      65727275 
 4332              	.LASF70:
 4333 0365 50574D5F 		.ascii	"PWM_Servo_SetInterruptMode\000"
 4333      53657276 
 4333      6F5F5365 
 4333      74496E74 
 4333      65727275 
 4334              	.LASF11:
 4335 0380 666C6F61 		.ascii	"float\000"
 4335      7400
 4336              	.LASF26:
 4337 0386 70726573 		.ascii	"prescaler\000"
 4337      63616C65 
 4337      7200
 4338              	.LASF67:
 4339 0390 50574D5F 		.ascii	"PWM_Servo_TriggerCommand\000"
 4339      53657276 
 4339      6F5F5472 
 4339      69676765 
 4339      72436F6D 
 4340              	.LASF74:
 4341 03a9 50574D5F 		.ascii	"PWM_Servo_ClearInterrupt\000"
 4341      53657276 
 4341      6F5F436C 
 4341      65617249 
 4341      6E746572 
 4342              	.LASF78:
 4343 03c2 433A5C55 		.ascii	"C:\\Users\\Jared\\Documents\\PSoC Creator\\Workspac"
 4343      73657273 
 4343      5C4A6172 
 4343      65645C44 
 4343      6F63756D 
 4344 03f0 65315C42 		.ascii	"e1\\Buttons.cydsn\000"
 4344      7574746F 
 4344      6E732E63 
 4344      7964736E 
 4344      00
 4345              	.LASF33:
 4346 0401 50574D5F 		.ascii	"PWM_Servo_SetPWMStopOnKill\000"
 4346      53657276 
 4346      6F5F5365 
 4346      7450574D 
 4346      53746F70 
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 105


 4347              	.LASF76:
 4348 041c 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4348      4320342E 
 4348      372E3320 
 4348      32303133 
 4348      30333132 
 4349 044f 616E6368 		.ascii	"anch revision 196615]\000"
 4349      20726576 
 4349      6973696F 
 4349      6E203139 
 4349      36363135 
 4350              	.LASF29:
 4351 0465 50574D5F 		.ascii	"PWM_Servo_SetPWMMode\000"
 4351      53657276 
 4351      6F5F5365 
 4351      7450574D 
 4351      4D6F6465 
 4352              	.LASF1:
 4353 047a 756E7369 		.ascii	"unsigned char\000"
 4353      676E6564 
 4353      20636861 
 4353      7200
 4354              	.LASF34:
 4355 0488 73746F70 		.ascii	"stopOnKillEnable\000"
 4355      4F6E4B69 
 4355      6C6C456E 
 4355      61626C65 
 4355      00
 4356              	.LASF59:
 4357 0499 50574D5F 		.ascii	"PWM_Servo_ReadCapture\000"
 4357      53657276 
 4357      6F5F5265 
 4357      61644361 
 4357      70747572 
 4358              	.LASF2:
 4359 04af 73686F72 		.ascii	"short int\000"
 4359      7420696E 
 4359      7400
 4360              	.LASF66:
 4361 04b9 50574D5F 		.ascii	"PWM_Servo_SetCountMode\000"
 4361      53657276 
 4361      6F5F5365 
 4361      74436F75 
 4361      6E744D6F 
 4362              	.LASF58:
 4363 04d0 50574D5F 		.ascii	"PWM_Servo_ReadCompareBuf\000"
 4363      53657276 
 4363      6F5F5265 
 4363      6164436F 
 4363      6D706172 
 4364              	.LASF71:
 4365 04e9 696E7465 		.ascii	"interruptMask\000"
 4365      72727570 
 4365      744D6173 
 4365      6B00
 4366              	.LASF56:
 4367 04f7 50574D5F 		.ascii	"PWM_Servo_WriteCompareBuf\000"
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 106


 4367      53657276 
 4367      6F5F5772 
 4367      69746543 
 4367      6F6D7061 
 4368              	.LASF51:
 4369 0511 50574D5F 		.ascii	"PWM_Servo_ReadPeriodBuf\000"
 4369      53657276 
 4369      6F5F5265 
 4369      61645065 
 4369      72696F64 
 4370              	.LASF13:
 4371 0529 63686172 		.ascii	"char\000"
 4371      00
 4372              	.LASF23:
 4373 052e 6D6F6465 		.ascii	"mode\000"
 4373      00
 4374              	.LASF21:
 4375 0533 50574D5F 		.ascii	"PWM_Servo_SetMode\000"
 4375      53657276 
 4375      6F5F5365 
 4375      744D6F64 
 4375      6500
 4376              	.LASF35:
 4377 0545 50574D5F 		.ascii	"PWM_Servo_SetPWMDeadTime\000"
 4377      53657276 
 4377      6F5F5365 
 4377      7450574D 
 4377      44656164 
 4378              	.LASF42:
 4379 055e 636F756E 		.ascii	"counterMode\000"
 4379      7465724D 
 4379      6F646500 
 4380              	.LASF52:
 4381 056a 50574D5F 		.ascii	"PWM_Servo_SetPeriodSwap\000"
 4381      53657276 
 4381      6F5F5365 
 4381      74506572 
 4381      696F6453 
 4382              	.LASF57:
 4383 0582 636F6D70 		.ascii	"compareBuf\000"
 4383      61726542 
 4383      756600
 4384              	.LASF20:
 4385 058d 656E6162 		.ascii	"enableInterrupts\000"
 4385      6C65496E 
 4385      74657272 
 4385      75707473 
 4385      00
 4386              	.LASF32:
 4387 059e 73796E63 		.ascii	"syncKillEnable\000"
 4387      4B696C6C 
 4387      456E6162 
 4387      6C6500
 4388              	.LASF48:
 4389 05ad 73776170 		.ascii	"swapEnable\000"
 4389      456E6162 
 4389      6C6500
ARM GAS  C:\Users\Jared\AppData\Local\Temp\cclIiKIu.s 			page 107


 4390              	.LASF63:
 4391 05b8 50574D5F 		.ascii	"PWM_Servo_SetReloadMode\000"
 4391      53657276 
 4391      6F5F5365 
 4391      7452656C 
 4391      6F61644D 
 4392              	.LASF50:
 4393 05d0 70657269 		.ascii	"periodBuf\000"
 4393      6F644275 
 4393      6600
 4394              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
